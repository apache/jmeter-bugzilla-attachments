diff -Naur orig/core/org/apache/jmeter/assertions/gui/AbstractAssertionGui.java src/core/org/apache/jmeter/assertions/gui/AbstractAssertionGui.java
--- orig/core/org/apache/jmeter/assertions/gui/AbstractAssertionGui.java	2002-08-11 21:24:42.000000000 +0200
+++ src/core/org/apache/jmeter/assertions/gui/AbstractAssertionGui.java	2002-12-15 06:13:47.000000000 +0100
@@ -4,6 +4,8 @@
 import java.util.Collection;
 
 import javax.swing.JPopupMenu;
+import javax.swing.ImageIcon;
+import org.apache.jmeter.util.JMeterUtils;
 import org.apache.jmeter.gui.AbstractJMeterGuiComponent;
 import org.apache.jmeter.gui.NamePanel;
 import org.apache.jmeter.gui.util.MenuFactory;
@@ -20,6 +22,7 @@
 
 public abstract class AbstractAssertionGui extends AbstractJMeterGuiComponent
 {
+  private static ImageIcon icon;
 
   public JPopupMenu createPopupMenu()
   {
@@ -30,4 +33,10 @@
   {
 	 return Arrays.asList(new String[]{MenuFactory.ASSERTIONS});
   }
-}
\ No newline at end of file
+
+  public ImageIcon getIcon()
+  {
+    if (icon==null) icon= JMeterUtils.getImageProperty("assertion.tree.icon");
+    return icon;
+  }
+}
diff -Naur orig/core/org/apache/jmeter/config/gui/AbstractConfigGui.java src/core/org/apache/jmeter/config/gui/AbstractConfigGui.java
--- orig/core/org/apache/jmeter/config/gui/AbstractConfigGui.java	2002-08-11 21:24:42.000000000 +0200
+++ src/core/org/apache/jmeter/config/gui/AbstractConfigGui.java	2002-12-15 06:13:47.000000000 +0100
@@ -57,6 +57,8 @@
 import java.util.Collection;
 
 import javax.swing.JPopupMenu;
+import javax.swing.ImageIcon;
+import org.apache.jmeter.util.JMeterUtils;
 import org.apache.jmeter.gui.AbstractJMeterGuiComponent;
 import org.apache.jmeter.gui.NamePanel;
 import org.apache.jmeter.gui.util.MenuFactory;
@@ -73,6 +75,7 @@
 public abstract class AbstractConfigGui extends AbstractJMeterGuiComponent
 {
 
+    private static ImageIcon icon;
   
     
 
@@ -97,4 +100,9 @@
 	}
 
 	
+  public ImageIcon getIcon()
+  {
+    if (icon==null) icon= JMeterUtils.getImageProperty("config.tree.icon");
+    return icon;
+  }
 }
diff -Naur orig/core/org/apache/jmeter/config/gui/AbstractModifierGui.java src/core/org/apache/jmeter/config/gui/AbstractModifierGui.java
--- orig/core/org/apache/jmeter/config/gui/AbstractModifierGui.java	2002-08-11 21:24:42.000000000 +0200
+++ src/core/org/apache/jmeter/config/gui/AbstractModifierGui.java	2002-12-15 06:13:47.000000000 +0100
@@ -4,6 +4,8 @@
 import java.util.Collection;
 
 import javax.swing.JPopupMenu;
+import javax.swing.ImageIcon;
+import org.apache.jmeter.util.JMeterUtils;
 import org.apache.jmeter.gui.AbstractJMeterGuiComponent;
 import org.apache.jmeter.gui.NamePanel;
 import org.apache.jmeter.gui.util.MenuFactory;
@@ -21,6 +23,7 @@
 public abstract class AbstractModifierGui extends AbstractJMeterGuiComponent
 {
 
+  private static ImageIcon icon;
 
   public JPopupMenu createPopupMenu()
   {
@@ -31,4 +34,10 @@
   {
 	 return Arrays.asList(new String[]{MenuFactory.MODIFIERS});
   }
-}
\ No newline at end of file
+
+  public ImageIcon getIcon()
+  {
+    if (icon==null) icon= JMeterUtils.getImageProperty("modifier.tree.icon");
+    return icon;
+  }
+}
diff -Naur orig/core/org/apache/jmeter/config/gui/AbstractResponseBasedModifierGui.java src/core/org/apache/jmeter/config/gui/AbstractResponseBasedModifierGui.java
--- orig/core/org/apache/jmeter/config/gui/AbstractResponseBasedModifierGui.java	2002-08-11 21:24:42.000000000 +0200
+++ src/core/org/apache/jmeter/config/gui/AbstractResponseBasedModifierGui.java	2002-12-15 06:13:47.000000000 +0100
@@ -4,6 +4,8 @@
 import java.util.Collection;
 
 import javax.swing.JPopupMenu;
+import javax.swing.ImageIcon;
+import org.apache.jmeter.util.JMeterUtils;
 import org.apache.jmeter.gui.AbstractJMeterGuiComponent;
 import org.apache.jmeter.gui.util.MenuFactory;
 
@@ -19,6 +21,8 @@
 public abstract class AbstractResponseBasedModifierGui extends AbstractJMeterGuiComponent
 {
 
+  private static ImageIcon icon;
+
   public JPopupMenu createPopupMenu()
   {
 	 return MenuFactory.getDefaultResponseBasedModifierMenu();
@@ -28,4 +32,10 @@
   {
 	 return Arrays.asList(new String[]{MenuFactory.RESPONSE_BASED_MODIFIERS});
   }
-}
\ No newline at end of file
+
+  public ImageIcon getIcon()
+  {
+    if (icon==null) icon= JMeterUtils.getImageProperty("modifier.tree.icon");
+    return icon;
+  }
+}
diff -Naur orig/core/org/apache/jmeter/control/gui/AbstractControllerGui.java src/core/org/apache/jmeter/control/gui/AbstractControllerGui.java
--- orig/core/org/apache/jmeter/control/gui/AbstractControllerGui.java	2002-08-11 21:24:42.000000000 +0200
+++ src/core/org/apache/jmeter/control/gui/AbstractControllerGui.java	2002-12-15 06:13:47.000000000 +0100
@@ -3,6 +3,8 @@
 import java.util.Collection;
 
 import javax.swing.JPopupMenu;
+import javax.swing.ImageIcon;
+import org.apache.jmeter.util.JMeterUtils;
 import org.apache.jmeter.gui.AbstractJMeterGuiComponent;
 import org.apache.jmeter.gui.util.MenuFactory;
 import org.apache.jmeter.testelement.TestElement;
@@ -17,6 +19,7 @@
 
 public abstract class AbstractControllerGui extends AbstractJMeterGuiComponent
 {
+    private static ImageIcon icon;
 
 	/****************************************
 	 * !ToDoo (Method description)
@@ -38,4 +41,9 @@
 		return MenuFactory.getDefaultControllerMenu();
 	}
 
-	}
+  public ImageIcon getIcon()
+  {
+    if (icon==null) icon= JMeterUtils.getImageProperty("controller.tree.icon");
+    return icon;
+  }
+}
diff -Naur orig/core/org/apache/jmeter/control/gui/TestPlanGui.java src/core/org/apache/jmeter/control/gui/TestPlanGui.java
--- orig/core/org/apache/jmeter/control/gui/TestPlanGui.java	2002-08-11 21:24:42.000000000 +0200
+++ src/core/org/apache/jmeter/control/gui/TestPlanGui.java	2002-12-16 00:54:21.000000000 +0100
@@ -2,6 +2,7 @@
 import java.awt.BorderLayout;
 import java.util.Collection;
 
+import javax.swing.ImageIcon;
 import javax.swing.BorderFactory;
 import javax.swing.JCheckBox;
 import javax.swing.JMenu;
@@ -32,6 +33,8 @@
 	JCheckBox functionalMode;
 	ArgumentsPanel argsPanel;
 
+	private static ImageIcon icon;
+
 	/****************************************
 	 * !ToDo (Constructor description)
 	 ***************************************/
@@ -88,6 +91,12 @@
 		return JMeterUtils.getResString("Test Plan");
 	}
 
+	public ImageIcon getIcon()
+	{
+	  if (icon==null) icon= JMeterUtils.getImageProperty("test_plan.tree.icon");
+	  return icon;
+	}
+
 	/****************************************
 	 * !ToDoo (Method description)
 	 *
diff -Naur orig/core/org/apache/jmeter/control/gui/WorkBenchGui.java src/core/org/apache/jmeter/control/gui/WorkBenchGui.java
--- orig/core/org/apache/jmeter/control/gui/WorkBenchGui.java	2002-10-29 15:56:28.000000000 +0100
+++ src/core/org/apache/jmeter/control/gui/WorkBenchGui.java	2002-12-15 06:13:47.000000000 +0100
@@ -57,12 +57,14 @@
 import java.util.Collection;
 
 import javax.swing.JLabel;
+import javax.swing.ImageIcon;
 import javax.swing.JMenu;
 import javax.swing.JPanel;
 import javax.swing.JPopupMenu;
 import javax.swing.border.Border;
 import javax.swing.border.EmptyBorder;
 
+import org.apache.jmeter.util.JMeterUtils;
 import org.apache.jmeter.gui.JMeterGUIComponent;
 import org.apache.jmeter.gui.NamePanel;
 import org.apache.jmeter.gui.util.MenuFactory;
@@ -82,6 +84,7 @@
 public class WorkBenchGui extends JPanel implements JMeterGUIComponent
 {
 	NamePanel namePanel;
+	private static ImageIcon icon;
 
 	/****************************************
 	 * !ToDo (Constructor description)
@@ -175,6 +178,12 @@
 		return JMeterUtils.getResString("workbench");
 	}
 
+	public ImageIcon getIcon()
+	{
+		if (icon == null) icon= JMeterUtils.getImageProperty("workbench.tree.icon");
+		return icon;
+	}
+
 	private void init()
 	{
 		this.setLayout(new VerticalLayout(5, VerticalLayout.LEFT, VerticalLayout.TOP));
diff -Naur orig/core/org/apache/jmeter/gui/JMeterGUIComponent.java src/core/org/apache/jmeter/gui/JMeterGUIComponent.java
--- orig/core/org/apache/jmeter/gui/JMeterGUIComponent.java	2002-10-29 15:56:29.000000000 +0100
+++ src/core/org/apache/jmeter/gui/JMeterGUIComponent.java	2002-12-15 05:50:57.000000000 +0100
@@ -1,6 +1,7 @@
 package org.apache.jmeter.gui;
 import java.util.Collection;
 import javax.swing.JPopupMenu;
+import javax.swing.ImageIcon;
 import org.apache.jmeter.testelement.TestElement;
 /****************************************
  * <p>
@@ -43,6 +44,13 @@
 	public String getStaticLabel();
 
 	/****************************************
+	 * !ToDoo (Method description)
+	 *
+	 *@return   !ToDo (Return description)
+	 ***************************************/
+	public ImageIcon getIcon();
+
+	/****************************************
 	 * !ToDo (Method description)
 	 *
 	 *@return   !ToDo (Return description)
diff -Naur orig/core/org/apache/jmeter/gui/NamePanel.java src/core/org/apache/jmeter/gui/NamePanel.java
--- orig/core/org/apache/jmeter/gui/NamePanel.java	2002-08-11 21:24:43.000000000 +0200
+++ src/core/org/apache/jmeter/gui/NamePanel.java	2002-12-15 06:13:47.000000000 +0100
@@ -57,6 +57,7 @@
 import java.util.Collection;
 
 import javax.swing.JLabel;
+import javax.swing.ImageIcon;
 import javax.swing.JPanel;
 import javax.swing.JPopupMenu;
 import javax.swing.JTextField;
@@ -73,6 +74,7 @@
 
 public class NamePanel extends JPanel implements JMeterGUIComponent
 {
+	private static ImageIcon icon;
 	private JTextField nameField = new JTextField(30);
 
 
@@ -127,6 +129,12 @@
 		return JMeterUtils.getResString("root");
 	}
 
+	public ImageIcon getIcon()
+	{
+		if (icon == null) icon= JMeterUtils.getImageProperty("root.tree.icon");
+		return icon;
+	}
+
 	/****************************************
 	 * !ToDoo (Method description)
 	 *
diff -Naur orig/core/org/apache/jmeter/gui/tree/JMeterCellRenderer.java src/core/org/apache/jmeter/gui/tree/JMeterCellRenderer.java
--- orig/core/org/apache/jmeter/gui/tree/JMeterCellRenderer.java	2002-10-29 15:56:29.000000000 +0100
+++ src/core/org/apache/jmeter/gui/tree/JMeterCellRenderer.java	2002-12-15 06:03:17.000000000 +0100
@@ -73,11 +73,9 @@
 public class JMeterCellRenderer extends DefaultTreeCellRenderer
 {
 
-	 ImageIcon timer;
 
 	public JMeterCellRenderer()
 	{
-		 timer = org.apache.jmeter.util.JMeterUtils.getImage("timer.gif");
 	}
 
 	public Component getTreeCellRendererComponent(JTree tree,
diff -Naur orig/core/org/apache/jmeter/gui/tree/JMeterTreeNode.java src/core/org/apache/jmeter/gui/tree/JMeterTreeNode.java
--- orig/core/org/apache/jmeter/gui/tree/JMeterTreeNode.java	2002-10-29 15:56:29.000000000 +0100
+++ src/core/org/apache/jmeter/gui/tree/JMeterTreeNode.java	2002-12-16 00:48:40.000000000 +0100
@@ -97,7 +97,7 @@
 	
 	public ImageIcon getIcon()
 	{
-		return null;
+		return ((JMeterGUIComponent)getUserObject()).getIcon();
 	}
 
 	public Collection getMenuCategories()
diff -Naur orig/core/org/apache/jmeter/samplers/gui/AbstractSamplerGui.java src/core/org/apache/jmeter/samplers/gui/AbstractSamplerGui.java
--- orig/core/org/apache/jmeter/samplers/gui/AbstractSamplerGui.java	2002-08-11 21:24:47.000000000 +0200
+++ src/core/org/apache/jmeter/samplers/gui/AbstractSamplerGui.java	2002-12-15 06:13:47.000000000 +0100
@@ -3,6 +3,8 @@
 import java.util.Collection;
 
 import javax.swing.JPopupMenu;
+import javax.swing.ImageIcon;
+import org.apache.jmeter.util.JMeterUtils;
 import org.apache.jmeter.gui.AbstractJMeterGuiComponent;
 import org.apache.jmeter.gui.NamePanel;
 import org.apache.jmeter.gui.util.MenuFactory;
@@ -18,6 +20,7 @@
 
 public abstract class AbstractSamplerGui extends AbstractJMeterGuiComponent
 {
+    private static ImageIcon icon;
 
 
 	/****************************************
@@ -40,4 +43,9 @@
 		return Arrays.asList(new String[]{MenuFactory.SAMPLERS});
 	}
 
-	}
+  public ImageIcon getIcon()
+  {
+    if (icon==null) icon= JMeterUtils.getImageProperty("sampler.tree.icon");
+    return icon;
+  }
+}
diff -Naur orig/core/org/apache/jmeter/threads/gui/ThreadGroupGui.java src/core/org/apache/jmeter/threads/gui/ThreadGroupGui.java
--- orig/core/org/apache/jmeter/threads/gui/ThreadGroupGui.java	2002-10-29 15:56:31.000000000 +0100
+++ src/core/org/apache/jmeter/threads/gui/ThreadGroupGui.java	2002-12-15 06:13:47.000000000 +0100
@@ -57,6 +57,7 @@
 import java.util.Collection;
 
 import javax.swing.BorderFactory;
+import javax.swing.ImageIcon;
 import javax.swing.JLabel;
 import javax.swing.JPanel;
 import javax.swing.JPopupMenu;
@@ -96,6 +97,8 @@
 	private JTextField rampInput;
 	private NamePanel namePanel;
 
+	private static ImageIcon icon;
+
 	/****************************************
 	 * !ToDo (Constructor description)
 	 ***************************************/
@@ -207,6 +210,12 @@
 		return JMeterUtils.getResString("ThreadGroup");
 	}
 
+	public ImageIcon getIcon()
+	{
+		if (icon == null) icon= JMeterUtils.getImageProperty("thread_group.tree.icon");
+		return icon;
+	}
+
 	private void init()
 	{
 		this.setLayout(new VerticalLayout(5, VerticalLayout.LEFT, VerticalLayout.TOP));
diff -Naur orig/core/org/apache/jmeter/timers/gui/AbstractTimerGui.java src/core/org/apache/jmeter/timers/gui/AbstractTimerGui.java
--- orig/core/org/apache/jmeter/timers/gui/AbstractTimerGui.java	2002-08-11 21:24:49.000000000 +0200
+++ src/core/org/apache/jmeter/timers/gui/AbstractTimerGui.java	2002-12-15 06:13:47.000000000 +0100
@@ -4,6 +4,8 @@
 import java.util.Collection;
 
 import javax.swing.JPopupMenu;
+import javax.swing.ImageIcon;
+import org.apache.jmeter.util.JMeterUtils;
 import org.apache.jmeter.gui.AbstractJMeterGuiComponent;
 import org.apache.jmeter.gui.NamePanel;
 import org.apache.jmeter.gui.util.MenuFactory;
@@ -20,6 +22,7 @@
 
 public abstract class AbstractTimerGui extends AbstractJMeterGuiComponent
 {
+  private static ImageIcon icon;
 
   public JPopupMenu createPopupMenu()
   {
@@ -30,4 +33,9 @@
   {
 	 return Arrays.asList(new String[]{MenuFactory.TIMERS});
   }
-}
\ No newline at end of file
+  public ImageIcon getIcon()
+  {
+    if (icon==null) icon= JMeterUtils.getImageProperty("timer.tree.icon");
+    return icon;
+  }
+}
diff -Naur orig/core/org/apache/jmeter/util/JMeterUtils.java src/core/org/apache/jmeter/util/JMeterUtils.java
--- orig/core/org/apache/jmeter/util/JMeterUtils.java	2002-12-16 01:16:44.000000000 +0100
+++ src/core/org/apache/jmeter/util/JMeterUtils.java	2002-12-16 00:53:58.000000000 +0100
@@ -189,6 +189,23 @@
 		}
 		return resString;
 	}
+
+	/**
+	 * Get the image referenced by the property string for this key.
+	 *
+	 * @return The image, or null if the resource or the image don't exist.
+	 **/
+	public static ImageIcon getImageProperty(String key)
+	{
+	  	String s = appProperties.getProperty(key);
+		if (s==null)
+		{
+			log.info("Image file name resource ["+key+"] not found.");
+			return null;
+		}
+		return getImage(s);
+	}
+	
 	/**
 	 *  This gets the currently defined appProperties. It can only be called after
 	 *  the getProperties(String file) method is called.
diff -Naur orig/core/org/apache/jmeter/visualizers/gui/AbstractVisualizer.java src/core/org/apache/jmeter/visualizers/gui/AbstractVisualizer.java
--- orig/core/org/apache/jmeter/visualizers/gui/AbstractVisualizer.java	2002-10-29 15:56:31.000000000 +0100
+++ src/core/org/apache/jmeter/visualizers/gui/AbstractVisualizer.java	2002-12-15 06:13:47.000000000 +0100
@@ -3,6 +3,7 @@
 import java.util.Arrays;
 import java.util.Collection;
 
+import javax.swing.ImageIcon;
 import javax.swing.JCheckBox;
 import javax.swing.JPopupMenu;
 import javax.swing.event.ChangeEvent;
@@ -38,6 +39,8 @@
 		private JCheckBox errorLogging;
 	ResultCollector collector;
 
+	private static ImageIcon icon;
+
 	/****************************************
 	 * !ToDo (Constructor description)
 	 ***************************************/
@@ -133,4 +136,9 @@
 		super.configureTestElement(mc);
 		mc.setListener(this);
 	}
-}
\ No newline at end of file
+  public ImageIcon getIcon()
+  {
+    if (icon==null) icon= JMeterUtils.getImageProperty("visualizer.tree.icon");
+    return icon;
+  }
+}
diff -Naur orig/protocol/http/org/apache/jmeter/protocol/http/proxy/gui/ProxyControlGui.java src/protocol/http/org/apache/jmeter/protocol/http/proxy/gui/ProxyControlGui.java
--- orig/protocol/http/org/apache/jmeter/protocol/http/proxy/gui/ProxyControlGui.java	2002-10-29 15:56:50.000000000 +0100
+++ src/protocol/http/org/apache/jmeter/protocol/http/proxy/gui/ProxyControlGui.java	2002-12-15 05:50:57.000000000 +0100
@@ -70,6 +70,7 @@
 import java.util.LinkedList;
 import java.util.List;
 
+import javax.swing.ImageIcon;
 import javax.swing.BorderFactory;
 import javax.swing.JButton;
 import javax.swing.JLabel;
@@ -106,6 +107,7 @@
 public class ProxyControlGui extends JPanel implements JMeterGUIComponent, ActionListener,
 		KeyListener,FocusListener
 {
+	private static ImageIcon icon;
 
 	NamePanel namePanel;
 	JTextField portField;
@@ -195,6 +197,12 @@
 	{
 		return JMeterUtils.getResString("proxy_title");
 	}
+	public ImageIcon getIcon()
+	{
+		if (icon == null) icon= JMeterUtils.getImageProperty("proxy_control.tree.icon");
+		return icon;
+	}
+
 
 	public Collection getMenuCategories()
 	{
