<jmeterTestPlan version="1.1" properties="1.7">
  <hashTree>
    <TestPlan>
      <elementProp name="TestPlan.user_defined_variables" elementType="org.apache.jmeter.config.Arguments">
        <stringProp name="TestElement.gui_class">org.apache.jmeter.config.gui.ArgumentsPanel</stringProp>
        <stringProp name="TestElement.test_class">org.apache.jmeter.config.Arguments</stringProp>
        <collectionProp name="Arguments.arguments"/>
        <stringProp name="TestElement.name">User Defined Variables</stringProp>
        <boolProp name="TestElement.enabled">true</boolProp>
      </elementProp>
      <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.TestPlanGui</stringProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <stringProp name="TestElement.test_class">org.apache.jmeter.testelement.TestPlan</stringProp>
      <stringProp name="TestElement.name">Test Plan</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestElement.enabled">true</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup>
        <longProp name="ThreadGroup.start_time">1139240182000</longProp>
        <stringProp name="TestElement.test_class">org.apache.jmeter.threads.ThreadGroup</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <boolProp name="TestElement.enabled">true</boolProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="TestElement.gui_class">org.apache.jmeter.threads.gui.ThreadGroupGui</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="org.apache.jmeter.control.LoopController">
          <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.LoopControlPanel</stringProp>
          <stringProp name="LoopController.loops">1</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.control.LoopController</stringProp>
          <stringProp name="TestElement.name">Loop Controller</stringProp>
          <boolProp name="TestElement.enabled">true</boolProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="TestElement.name">Thread Group</stringProp>
        <longProp name="ThreadGroup.end_time">1139240182000</longProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
      </ThreadGroup>
      <hashTree>
        <org.apache.jmeter.config.Arguments>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.config.gui.ArgumentsPanel</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.config.Arguments</stringProp>
          <collectionProp name="Arguments.arguments">
            <elementProp name="serverName" elementType="org.apache.jmeter.config.Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.name">serverName</stringProp>
            </elementProp>
            <elementProp name="serverPort" elementType="org.apache.jmeter.config.Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.name">serverPort</stringProp>
            </elementProp>
            <elementProp name="serverPath" elementType="org.apache.jmeter.config.Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">/api/navigon/ppnavigon/PPNavigonService</stringProp>
              <stringProp name="Argument.name">serverPath</stringProp>
            </elementProp>
            <elementProp name="incorrectTxid" elementType="org.apache.jmeter.config.Argument">
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">OOOOOOOO-1111-2222-3333-BBBBNNNNMMMM</stringProp>
              <stringProp name="Argument.name">incorrectTxid</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestElement.name">User Defined Variables</stringProp>
          <boolProp name="TestElement.enabled">true</boolProp>
        </org.apache.jmeter.config.Arguments>
        <hashTree/>
        <UserParameters>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.modifiers.gui.UserParametersGui</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.modifiers.UserParameters</stringProp>
          <stringProp name="TestElement.name">User Parameters</stringProp>
          <collectionProp name="UserParameters.names">
            <stringProp name="-692856294">paymentParamDescr</stringProp>
            <stringProp name="-676358262">paymentParamValue</stringProp>
            <stringProp name="-1268577401">purchaseParamCartId</stringProp>
            <stringProp name="-179049373">purchaseParamCount</stringProp>
            <stringProp name="-178426027">purchaseParamDescr</stringProp>
            <stringProp name="-163529300">purchaseParamTitle</stringProp>
            <stringProp name="-161927995">purchaseParamValue</stringProp>
            <stringProp name="1380266381">customerParamEmail</stringProp>
            <stringProp name="-340300084">customerParamFirstName</stringProp>
            <stringProp name="1573179056">customerParamLastName</stringProp>
            <stringProp name="470475851">customerParamMPCustomerID</stringProp>
            <stringProp name="1380266381">customerParamEmail</stringProp>
            <stringProp name="1127692622">customerParamFax</stringProp>
            <stringProp name="1390289759">customerParamPhone</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-242022874">
              <stringProp name="-570054742">description${__Random(10000,99999,testRnd)}</stringProp>
              <stringProp name="1507361">10.0</stringProp>
              <stringProp name="-664784190">37${testRnd}</stringProp>
              <stringProp name="52">4</stringProp>
              <stringProp name="-1602010422">Gadget${testRnd}</stringProp>
              <stringProp name="-1257426453">PDA${testRnd}</stringProp>
              <stringProp name="49529">2.5</stringProp>
              <stringProp name="1096901890">buyer${testRnd}@sharpmind.de</stringProp>
              <stringProp name="306253049">firstName${testRnd}</stringProp>
              <stringProp name="315359839">lastName${testRnd}</stringProp>
              <stringProp name="1390008670">${testRnd}</stringProp>
              <stringProp name="-1613258731">${testRnd}@sharpmind.de</stringProp>
              <stringProp name="1078165153">+49069${testRnd}</stringProp>
              <stringProp name="-1890413447">+49171${testRnd}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="TestElement.enabled">true</boolProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <JDBCDataSource>
          <stringProp name="password">pp_2</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.jdbc.config.DataSourceElement</stringProp>
          <stringProp name="checkQuery">Select 1</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <boolProp name="autocommit">true</boolProp>
          <boolProp name="TestElement.enabled">true</boolProp>
          <stringProp name="poolMax">10</stringProp>
          <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.testbeans.gui.TestBeanGUI</stringProp>
          <stringProp name="dataSource"></stringProp>
          <stringProp name="TestElement.name">JDBC Connection Configuration</stringProp>
          <stringProp name="username">pp_2</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="dbUrl">jdbc:mysql://polonium/pp_2?characterEncoding=UTF-8</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <AuthManager>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.gui.AuthPanel</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.control.AuthManager</stringProp>
          <stringProp name="TestElement.name">HTTP Authorization Manager</stringProp>
          <boolProp name="TestElement.enabled">true</boolProp>
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="org.apache.jmeter.protocol.http.control.Authorization">
              <stringProp name="Authorization.url"></stringProp>
              <stringProp name="Authorization.password">navigonapi</stringProp>
              <stringProp name="Authorization.username">navigonapi</stringProp>
            </elementProp>
          </collectionProp>
        </AuthManager>
        <hashTree/>
        <GenericController>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.LogicControllerGui</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.control.GenericController</stringProp>
          <stringProp name="TestElement.name">prepare test data</stringProp>
          <boolProp name="TestElement.enabled">true</boolProp>
        </GenericController>
        <hashTree/>
        <GenericController>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.LogicControllerGui</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.control.GenericController</stringProp>
          <stringProp name="TestElement.name">getPaymentMethods</stringProp>
          <boolProp name="TestElement.enabled">false</boolProp>
        </GenericController>
        <hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">getPaymentMethods</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        &lt;soapenv:Body&gt;
                &lt;ns1:getPaymentMethods soapenv:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xmlns:ns1=&quot;urn://mobility-platform.de/pp/&quot;&gt;
        &lt;/ns1:getPaymentMethods&gt;
        &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.LogicControllerGui</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.control.GenericController</stringProp>
          <stringProp name="TestElement.name">startTransaction</stringProp>
          <boolProp name="TestElement.enabled">true</boolProp>
        </GenericController>
        <hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">startTransaction</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        &lt;soapenv:Body&gt;
                &lt;ns1:startTransaction soapenv:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xmlns:ns1=&quot;urn://mobility-platform.de/pp/&quot;&gt;
        &lt;/ns1:startTransaction&gt;
        &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1578646973">&lt;startTransactionResult&gt;[\w]{8}-[\w]{4}-[\w]{4}-[\w]{4}-[\w]{12}&lt;/startTransactionResult&gt;</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor>
              <stringProp name="RegexExtractor.default">INVALID_TRANSACTION</stringProp>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.extractor.gui.RegexExtractorGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.extractor.RegexExtractor</stringProp>
              <stringProp name="RegexExtractor.regex">(&lt;startTransactionResult&gt;)([\w]{8}-[\w]{4}-[\w]{4}-[\w]{4}-[\w]{12})(&lt;/startTransactionResult&gt;)</stringProp>
              <stringProp name="TestElement.name">extract transaction ID</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.refname">txid</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <JDBCSampler>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.testbeans.gui.TestBeanGUI</stringProp>
            <stringProp name="dataSource"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.jdbc.sampler.JDBCSampler</stringProp>
            <stringProp name="query">SELECT transaction_id, error_code, error_message, psp_transaction_id, status FROM transaction where txid=&apos;${txid}&apos;;</stringProp>
            <stringProp name="TestElement.name">verify txid is marked NEW in db</stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="860304580">[\d]{2,10}	null	null	null	NEW</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor>
              <stringProp name="RegexExtractor.default">INVALID_TRANSACTION</stringProp>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.extractor.gui.RegexExtractorGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.extractor.RegexExtractor</stringProp>
              <stringProp name="RegexExtractor.regex">[\d]{2,10}</stringProp>
              <stringProp name="TestElement.name">extract db transaction ID</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.refname">transaction_id</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <JDBCSampler>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.testbeans.gui.TestBeanGUI</stringProp>
            <stringProp name="dataSource"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.jdbc.sampler.JDBCSampler</stringProp>
            <stringProp name="query">SELECT action, transaction_status, psp_transaction_status, psp_transaction_id FROM transactionevent where transaction_id=${transaction_id};</stringProp>
            <stringProp name="TestElement.name">verify entry in transactionevent table</stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="293804767">CREATED	NEW	null	null</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.LogicControllerGui</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.control.GenericController</stringProp>
          <stringProp name="TestElement.name">getTransactionStatus</stringProp>
          <boolProp name="TestElement.enabled">false</boolProp>
        </GenericController>
        <hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">getTransactionStatus</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        &lt;soapenv:Body&gt;
                &lt;ns1:getTransactionStatus soapenv:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xmlns:ns1=&quot;urn://mobility-platform.de/pp/&quot;&gt;
	&lt;getTransactionStatusRequest&gt;${txid}&lt;/getTransactionStatusRequest&gt;
        &lt;/ns1:getTransactionStatus&gt;
        &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1816274623">&lt;getTransactionStatusResult&gt;NEW&lt;/getTransactionStatusResult&gt;</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">getTransactionStatus incorrect ID</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        &lt;soapenv:Body&gt;
                &lt;ns1:getTransactionStatus soapenv:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xmlns:ns1=&quot;urn://mobility-platform.de/pp/&quot;&gt;
	&lt;getTransactionStatusRequest&gt;${incorrectTxid}&lt;/getTransactionStatusRequest&gt;
        &lt;/ns1:getTransactionStatus&gt;
        &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1835854736">navigon.pp.service.exception.InvalidTransactionException</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.LogicControllerGui</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.control.GenericController</stringProp>
          <stringProp name="TestElement.name">paymentIndirect</stringProp>
          <boolProp name="TestElement.enabled">true</boolProp>
        </GenericController>
        <hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">paymentIndirect worldpay</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
	&lt;soapenv:Body&gt;
		&lt;paymentIndirect xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;
			&lt;transactionParam&gt;${txid}&lt;/transactionParam&gt;
			&lt;paymentParam&gt;
				&lt;ns1:currencyCode xmlns:ns1=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;EUR&lt;/ns1:currencyCode&gt;
				&lt;ns2:description xmlns:ns2=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${paymentParamDescr}&lt;/ns2:description&gt;
				&lt;ns3:paymentMethod xmlns:ns3=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;WORLDPAY_INDIRECT&lt;/ns3:paymentMethod&gt;
				&lt;ns4:value xmlns:ns4=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${paymentParamValue}&lt;/ns4:value&gt;
			&lt;/paymentParam&gt;

			&lt;purchaseParam&gt;
				&lt;ns5:cartId xmlns:ns5=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${purchaseParamCartId}&lt;/ns5:cartId&gt;
				&lt;ns6:id xsi:nil=&quot;true&quot; xmlns:ns6=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns7:items xmlns:ns7=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;${purchaseParamCount}&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;EUR&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;${purchaseParamDescr}&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;${purchaseParamTitle}&lt;/ns7:title&gt;
						&lt;ns7:value&gt;${purchaseParamValue}&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
				&lt;/ns7:items&gt;&lt;/purchaseParam&gt;

			&lt;customerParam&gt;
				&lt;ns8:billingAddress xmlns:ns8=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns8:city&gt;Frankfurt&lt;/ns8:city&gt;
					&lt;ns8:countryCode&gt;DE&lt;/ns8:countryCode&gt;
					&lt;ns8:firstName&gt;Sharp&lt;/ns8:firstName&gt;
					&lt;ns8:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:lastName&gt;Mind&lt;/ns8:lastName&gt;
					&lt;ns8:postalCode&gt;60599&lt;/ns8:postalCode&gt;
					&lt;ns8:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:street&gt;Dreieichstr.+20&lt;/ns8:street&gt;
					&lt;ns8:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns8:billingAddress&gt;
				&lt;ns9:email xmlns:ns9=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamEmail}&lt;/ns9:email&gt;
				&lt;ns10:fax xmlns:ns10=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFax}&lt;/ns10:fax&gt;
				&lt;ns11:firstName xmlns:ns11=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFirstName}&lt;/ns11:firstName&gt;
				&lt;ns12:id xsi:nil=&quot;true&quot; xmlns:ns12=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns13:lastName xmlns:ns13=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamLastName}&lt;/ns13:lastName&gt;
				&lt;ns14:mpCustomerID xmlns:ns14=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamMPCustomerID}&lt;/ns14:mpCustomerID&gt;
				&lt;ns15:phone xmlns:ns15=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamPhone}&lt;/ns15:phone&gt;
				&lt;ns16:salutation xsi:nil=&quot;true&quot; xmlns:ns16=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns17:shippingAddress xmlns:ns17=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns17:city&gt;Frankfurt&lt;/ns17:city&gt;
					&lt;ns17:countryCode&gt;DE&lt;/ns17:countryCode&gt;
					&lt;ns17:firstName&gt;Sharp&lt;/ns17:firstName&gt;
					&lt;ns17:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:lastName&gt;Mind&lt;/ns17:lastName&gt;
					&lt;ns17:postalCode xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:street&gt;Dreieichstr.+20&lt;/ns17:street&gt;
					&lt;ns17:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns17:shippingAddress&gt;
				&lt;ns18:title xsi:nil=&quot;true&quot; xmlns:ns18=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
			&lt;/customerParam&gt;

		&lt;/paymentIndirect&gt;
	&lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;
</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1453912053">&lt;msisdn xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot; xsi:nil=&quot;true&quot; /&gt;</stringProp>
                <stringProp name="-1224180763">&lt;paymentUrl xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;https://select.worldpay.com/wcc/purchase</stringProp>
                <stringProp name="170660699">name=${customerParamFirstName}\+${customerParamLastName}</stringProp>
                <stringProp name="-948273205">&lt;pspType xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;INDIRECT_URL&lt;/pspType&gt;</stringProp>
                <stringProp name="-1325194843">&lt;transactionStatus xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;OPEN&lt;/transactionStatus&gt;</stringProp>
                <stringProp name="-152950440">&lt;txid xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${txid}&lt;/txid&gt;</stringProp>
                <stringProp name="1482957857">&lt;paymentIndirectResponse xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;</stringProp>
                <stringProp name="360666647">&lt;paymentResult&gt;</stringProp>
                <stringProp name="680888074">&lt;/paymentResult&gt;&lt;/paymentIndirectResponse&gt;</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor>
              <stringProp name="RegexExtractor.default">INVALID_URL</stringProp>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.extractor.gui.RegexExtractorGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.extractor.RegexExtractor</stringProp>
              <stringProp name="RegexExtractor.regex">(https://)(.*)(&lt;/paymentUrl&gt;)</stringProp>
              <stringProp name="TestElement.name">extract worldpay url</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.refname">worldpay_url</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">paymentIndirect very high value</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
	&lt;soapenv:Body&gt;
		&lt;paymentIndirect xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;
			&lt;transactionParam&gt;${txid}&lt;/transactionParam&gt;
			&lt;paymentParam&gt;
				&lt;ns1:currencyCode xmlns:ns1=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;EUR&lt;/ns1:currencyCode&gt;
				&lt;ns2:description xmlns:ns2=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${paymentParamDescr}&lt;/ns2:description&gt;
				&lt;ns3:paymentMethod xmlns:ns3=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;WORLDPAY_INDIRECT&lt;/ns3:paymentMethod&gt;
				&lt;ns4:value xmlns:ns4=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;1000000&lt;/ns4:value&gt;
			&lt;/paymentParam&gt;

			&lt;purchaseParam&gt;
				&lt;ns5:cartId xmlns:ns5=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${purchaseParamCartId}&lt;/ns5:cartId&gt;
				&lt;ns6:id xsi:nil=&quot;true&quot; xmlns:ns6=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns7:items xmlns:ns7=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;${purchaseParamCount}&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;EUR&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;${purchaseParamDescr}&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;${purchaseParamTitle}&lt;/ns7:title&gt;
						&lt;ns7:value&gt;${purchaseParamValue}&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
				&lt;/ns7:items&gt;&lt;/purchaseParam&gt;

			&lt;customerParam&gt;
				&lt;ns8:billingAddress xmlns:ns8=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns8:city&gt;Frankfurt&lt;/ns8:city&gt;
					&lt;ns8:countryCode&gt;DE&lt;/ns8:countryCode&gt;
					&lt;ns8:firstName&gt;Sharp&lt;/ns8:firstName&gt;
					&lt;ns8:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:lastName&gt;Mind&lt;/ns8:lastName&gt;
					&lt;ns8:postalCode xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:street&gt;Dreieichstr.+20&lt;/ns8:street&gt;
					&lt;ns8:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns8:billingAddress&gt;
				&lt;ns9:email xmlns:ns9=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamEmail}&lt;/ns9:email&gt;
				&lt;ns10:fax xmlns:ns10=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFax}&lt;/ns10:fax&gt;
				&lt;ns11:firstName xmlns:ns11=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFirstName}&lt;/ns11:firstName&gt;
				&lt;ns12:id xsi:nil=&quot;true&quot; xmlns:ns12=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns13:lastName xmlns:ns13=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamLastName}&lt;/ns13:lastName&gt;
				&lt;ns14:mpCustomerID xmlns:ns14=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamMPCustomerID}&lt;/ns14:mpCustomerID&gt;
				&lt;ns15:phone xmlns:ns15=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamPhone}&lt;/ns15:phone&gt;
				&lt;ns16:salutation xsi:nil=&quot;true&quot; xmlns:ns16=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns17:shippingAddress xmlns:ns17=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns17:city&gt;Frankfurt&lt;/ns17:city&gt;
					&lt;ns17:countryCode&gt;DE&lt;/ns17:countryCode&gt;
					&lt;ns17:firstName&gt;Sharp&lt;/ns17:firstName&gt;
					&lt;ns17:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:lastName&gt;Mind&lt;/ns17:lastName&gt;
					&lt;ns17:postalCode xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:street&gt;Dreieichstr.+20&lt;/ns17:street&gt;
					&lt;ns17:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns17:shippingAddress&gt;
				&lt;ns18:title xsi:nil=&quot;true&quot; xmlns:ns18=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
			&lt;/customerParam&gt;

		&lt;/paymentIndirect&gt;
	&lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;
</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1453912053">&lt;msisdn xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot; xsi:nil=&quot;true&quot; /&gt;</stringProp>
                <stringProp name="-2049949100">&lt;paymentUrl xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;https://select.worldpay.com/wcc/purchase\?purchase=</stringProp>
                <stringProp name="-1316425499">&amp;amp;name=${customerParamFirstName}\+${customerParamLastName}&amp;amp;fax=</stringProp>
                <stringProp name="-948273205">&lt;pspType xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;INDIRECT_URL&lt;/pspType&gt;</stringProp>
                <stringProp name="-1325194843">&lt;transactionStatus xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;OPEN&lt;/transactionStatus&gt;</stringProp>
                <stringProp name="-152950440">&lt;txid xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${txid}&lt;/txid&gt;</stringProp>
                <stringProp name="1482957857">&lt;paymentIndirectResponse xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;</stringProp>
                <stringProp name="360666647">&lt;paymentResult&gt;</stringProp>
                <stringProp name="680888074">&lt;/paymentResult&gt;&lt;/paymentIndirectResponse&gt;</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor>
              <stringProp name="RegexExtractor.default">INVALID_URL</stringProp>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.extractor.gui.RegexExtractorGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.extractor.RegexExtractor</stringProp>
              <stringProp name="RegexExtractor.regex">(https://)(.*)(&lt;/paymentUrl&gt;)</stringProp>
              <stringProp name="TestElement.name">extract worldpay url</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.refname">worldpay_url</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">paymentIndirect zero value</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
	&lt;soapenv:Body&gt;
		&lt;paymentIndirect xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;
			&lt;transactionParam&gt;${txid}&lt;/transactionParam&gt;
			&lt;paymentParam&gt;
				&lt;ns1:currencyCode xmlns:ns1=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;EUR&lt;/ns1:currencyCode&gt;
				&lt;ns2:description xmlns:ns2=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${paymentParamDescr}&lt;/ns2:description&gt;
				&lt;ns3:paymentMethod xmlns:ns3=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;WORLDPAY_INDIRECT&lt;/ns3:paymentMethod&gt;
				&lt;ns4:value xmlns:ns4=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;0&lt;/ns4:value&gt;
			&lt;/paymentParam&gt;

			&lt;purchaseParam&gt;
				&lt;ns5:cartId xmlns:ns5=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${purchaseParamCartId}&lt;/ns5:cartId&gt;
				&lt;ns6:id xsi:nil=&quot;true&quot; xmlns:ns6=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns7:items xmlns:ns7=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;${purchaseParamCount}&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;EUR&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;${purchaseParamDescr}&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;${purchaseParamTitle}&lt;/ns7:title&gt;
						&lt;ns7:value&gt;${purchaseParamValue}&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
				&lt;/ns7:items&gt;&lt;/purchaseParam&gt;

			&lt;customerParam&gt;
				&lt;ns8:billingAddress xmlns:ns8=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns8:city&gt;Frankfurt&lt;/ns8:city&gt;
					&lt;ns8:countryCode&gt;DE&lt;/ns8:countryCode&gt;
					&lt;ns8:firstName&gt;Sharp&lt;/ns8:firstName&gt;
					&lt;ns8:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:lastName&gt;Mind&lt;/ns8:lastName&gt;
					&lt;ns8:postalCode xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:street&gt;Dreieichstr.+20&lt;/ns8:street&gt;
					&lt;ns8:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns8:billingAddress&gt;
				&lt;ns9:email xmlns:ns9=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamEmail}&lt;/ns9:email&gt;
				&lt;ns10:fax xmlns:ns10=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFax}&lt;/ns10:fax&gt;
				&lt;ns11:firstName xmlns:ns11=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFirstName}&lt;/ns11:firstName&gt;
				&lt;ns12:id xsi:nil=&quot;true&quot; xmlns:ns12=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns13:lastName xmlns:ns13=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamLastName}&lt;/ns13:lastName&gt;
				&lt;ns14:mpCustomerID xmlns:ns14=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamMPCustomerID}&lt;/ns14:mpCustomerID&gt;
				&lt;ns15:phone xmlns:ns15=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamPhone}&lt;/ns15:phone&gt;
				&lt;ns16:salutation xsi:nil=&quot;true&quot; xmlns:ns16=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns17:shippingAddress xmlns:ns17=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns17:city&gt;Frankfurt&lt;/ns17:city&gt;
					&lt;ns17:countryCode&gt;DE&lt;/ns17:countryCode&gt;
					&lt;ns17:firstName&gt;Sharp&lt;/ns17:firstName&gt;
					&lt;ns17:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:lastName&gt;Mind&lt;/ns17:lastName&gt;
					&lt;ns17:postalCode xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:street&gt;Dreieichstr.+20&lt;/ns17:street&gt;
					&lt;ns17:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns17:shippingAddress&gt;
				&lt;ns18:title xsi:nil=&quot;true&quot; xmlns:ns18=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
			&lt;/customerParam&gt;

		&lt;/paymentIndirect&gt;
	&lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;
</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1453912053">&lt;msisdn xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot; xsi:nil=&quot;true&quot; /&gt;</stringProp>
                <stringProp name="-2049949100">&lt;paymentUrl xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;https://select.worldpay.com/wcc/purchase\?purchase=</stringProp>
                <stringProp name="-1316425499">&amp;amp;name=${customerParamFirstName}\+${customerParamLastName}&amp;amp;fax=</stringProp>
                <stringProp name="-948273205">&lt;pspType xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;INDIRECT_URL&lt;/pspType&gt;</stringProp>
                <stringProp name="-1325194843">&lt;transactionStatus xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;OPEN&lt;/transactionStatus&gt;</stringProp>
                <stringProp name="-152950440">&lt;txid xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${txid}&lt;/txid&gt;</stringProp>
                <stringProp name="1482957857">&lt;paymentIndirectResponse xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;</stringProp>
                <stringProp name="360666647">&lt;paymentResult&gt;</stringProp>
                <stringProp name="680888074">&lt;/paymentResult&gt;&lt;/paymentIndirectResponse&gt;</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor>
              <stringProp name="RegexExtractor.default">INVALID_URL</stringProp>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.extractor.gui.RegexExtractorGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.extractor.RegexExtractor</stringProp>
              <stringProp name="RegexExtractor.regex">(https://)(.*)(&lt;/paymentUrl&gt;)</stringProp>
              <stringProp name="TestElement.name">extract worldpay url</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.refname">worldpay_url</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">paymentIndirect worldpay incorrect transaction ID</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
	&lt;soapenv:Body&gt;
		&lt;paymentIndirect xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;
			&lt;transactionParam&gt;${incorrectTxid}(&lt;/transactionParam&gt;
			&lt;paymentParam&gt;
				&lt;ns1:currencyCode xmlns:ns1=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;EUR&lt;/ns1:currencyCode&gt;
				&lt;ns2:description xmlns:ns2=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${paymentParamDescr}&lt;/ns2:description&gt;
				&lt;ns3:paymentMethod xmlns:ns3=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;WORLDPAY_INDIRECT&lt;/ns3:paymentMethod&gt;
				&lt;ns4:value xmlns:ns4=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${paymentParamValue}&lt;/ns4:value&gt;
			&lt;/paymentParam&gt;

			&lt;purchaseParam&gt;
				&lt;ns5:cartId xmlns:ns5=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${purchaseParamCartId}&lt;/ns5:cartId&gt;
				&lt;ns6:id xsi:nil=&quot;true&quot; xmlns:ns6=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns7:items xmlns:ns7=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;${purchaseParamCount}&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;EUR&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;${purchaseParamDescr}&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;${purchaseParamTitle}&lt;/ns7:title&gt;
						&lt;ns7:value&gt;${purchaseParamValue}&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
				&lt;/ns7:items&gt;&lt;/purchaseParam&gt;

			&lt;customerParam&gt;
				&lt;ns8:billingAddress xsi:nil=&quot;true&quot; xmlns:ns8=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns9:email xsi:nil=&quot;true&quot; xmlns:ns9=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns10:fax xsi:nil=&quot;true&quot; xmlns:ns10=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns11:firstName xmlns:ns11=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFirstName}&lt;/ns11:firstName&gt;
				&lt;ns12:id xsi:nil=&quot;true&quot; xmlns:ns12=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns13:lastName xmlns:ns13=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamLastName}&lt;/ns13:lastName&gt;
				&lt;ns14:mpCustomerID xmlns:ns14=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamMPCustomerID}&lt;/ns14:mpCustomerID&gt;
				&lt;ns15:phone xsi:nil=&quot;true&quot; xmlns:ns15=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns16:salutation xsi:nil=&quot;true&quot; xmlns:ns16=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns17:shippingAddress xmlns:ns17=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns17:city&gt;Frankfurt&lt;/ns17:city&gt;
					&lt;ns17:countryCode&gt;DE&lt;/ns17:countryCode&gt;
					&lt;ns17:firstName&gt;Sharp&lt;/ns17:firstName&gt;
					&lt;ns17:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:lastName&gt;Mind&lt;/ns17:lastName&gt;
					&lt;ns17:postalCode xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:street&gt;Dreieichstr.+20&lt;/ns17:street&gt;
					&lt;ns17:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns17:shippingAddress&gt;
				&lt;ns18:title xsi:nil=&quot;true&quot; xmlns:ns18=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
			&lt;/customerParam&gt;

		&lt;/paymentIndirect&gt;
	&lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;
</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-809373649">Exception</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">paymentIndirect worldpay mismatching amounts</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
	&lt;soapenv:Body&gt;
		&lt;paymentIndirect xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;
			&lt;transactionParam&gt;${txid}&lt;/transactionParam&gt;
			&lt;paymentParam&gt;
				&lt;ns1:currencyCode xmlns:ns1=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;EUR&lt;/ns1:currencyCode&gt;
				&lt;ns2:description xmlns:ns2=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${paymentParamDescr}&lt;/ns2:description&gt;
				&lt;ns3:paymentMethod xmlns:ns3=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;WORLDPAY_INDIRECT&lt;/ns3:paymentMethod&gt;
				&lt;ns4:value xmlns:ns4=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;1000&lt;/ns4:value&gt;
			&lt;/paymentParam&gt;

			&lt;purchaseParam&gt;
				&lt;ns5:cartId xmlns:ns5=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${purchaseParamCartId}&lt;/ns5:cartId&gt;
				&lt;ns6:id xsi:nil=&quot;true&quot; xmlns:ns6=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns7:items xmlns:ns7=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;${purchaseParamCount}&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;EUR&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;${purchaseParamDescr}&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;${purchaseParamTitle}&lt;/ns7:title&gt;
						&lt;ns7:value&gt;${purchaseParamValue}&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
				&lt;/ns7:items&gt;&lt;/purchaseParam&gt;

			&lt;customerParam&gt;
				&lt;ns8:billingAddress xsi:nil=&quot;true&quot; xmlns:ns8=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns9:email xsi:nil=&quot;true&quot; xmlns:ns9=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns10:fax xsi:nil=&quot;true&quot; xmlns:ns10=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns11:firstName xmlns:ns11=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFirstName}&lt;/ns11:firstName&gt;
				&lt;ns12:id xsi:nil=&quot;true&quot; xmlns:ns12=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns13:lastName xmlns:ns13=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamLastName}&lt;/ns13:lastName&gt;
				&lt;ns14:mpCustomerID xmlns:ns14=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamMPCustomerID}&lt;/ns14:mpCustomerID&gt;
				&lt;ns15:phone xsi:nil=&quot;true&quot; xmlns:ns15=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns16:salutation xsi:nil=&quot;true&quot; xmlns:ns16=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns17:shippingAddress xmlns:ns17=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns17:city&gt;Frankfurt&lt;/ns17:city&gt;
					&lt;ns17:countryCode&gt;DE&lt;/ns17:countryCode&gt;
					&lt;ns17:firstName&gt;Sharp&lt;/ns17:firstName&gt;
					&lt;ns17:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:lastName&gt;Mind&lt;/ns17:lastName&gt;
					&lt;ns17:postalCode xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:street&gt;Dreieichstr.+20&lt;/ns17:street&gt;
					&lt;ns17:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns17:shippingAddress&gt;
				&lt;ns18:title xsi:nil=&quot;true&quot; xmlns:ns18=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
			&lt;/customerParam&gt;

		&lt;/paymentIndirect&gt;
	&lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;
</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1453912053">&lt;msisdn xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot; xsi:nil=&quot;true&quot; /&gt;</stringProp>
                <stringProp name="-2049949100">&lt;paymentUrl xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;https://select.worldpay.com/wcc/purchase\?purchase=</stringProp>
                <stringProp name="-1741202783">&amp;amp;name=${customerParamFirstName}\+${customerParamLastName}&amp;amp;desc=${paymentParamDescr}&lt;/paymentUrl&gt;</stringProp>
                <stringProp name="-948273205">&lt;pspType xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;INDIRECT_URL&lt;/pspType&gt;</stringProp>
                <stringProp name="-1325194843">&lt;transactionStatus xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;OPEN&lt;/transactionStatus&gt;</stringProp>
                <stringProp name="-152950440">&lt;txid xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${txid}&lt;/txid&gt;</stringProp>
                <stringProp name="1482957857">&lt;paymentIndirectResponse xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;</stringProp>
                <stringProp name="360666647">&lt;paymentResult&gt;</stringProp>
                <stringProp name="680888074">&lt;/paymentResult&gt;&lt;/paymentIndirectResponse&gt;</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor>
              <stringProp name="RegexExtractor.default">INVALID_URL</stringProp>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.extractor.gui.RegexExtractorGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.extractor.RegexExtractor</stringProp>
              <stringProp name="RegexExtractor.regex">(https://)(.*)(&lt;/paymentUrl&gt;)</stringProp>
              <stringProp name="TestElement.name">extract worldpay url</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.refname">worldpay_url</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <JDBCSampler>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.testbeans.gui.TestBeanGUI</stringProp>
            <stringProp name="dataSource"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.jdbc.sampler.JDBCSampler</stringProp>
            <stringProp name="query">SELECT transaction_id, error_code, error_message, psp_transaction_id, status FROM transaction where txid=&apos;${txid}&apos;;</stringProp>
            <stringProp name="TestElement.name">verify txid is marked OPEN in db</stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="899678086">[\d]{2,10}	null	null	null	OPEN</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor>
              <stringProp name="RegexExtractor.default">INVALID_TRANSACTION</stringProp>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.extractor.gui.RegexExtractorGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.extractor.RegexExtractor</stringProp>
              <stringProp name="RegexExtractor.regex">[\d]{2,10}</stringProp>
              <stringProp name="TestElement.name">extract db transaction ID</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.refname">transaction_id</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <JDBCSampler>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.testbeans.gui.TestBeanGUI</stringProp>
            <stringProp name="dataSource"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.jdbc.sampler.JDBCSampler</stringProp>
            <stringProp name="query">SELECT action, transaction_status, psp_transaction_status, psp_transaction_id FROM transactionevent where transaction_id=${transaction_id} LIMIT 1,1;</stringProp>
            <stringProp name="TestElement.name">verify entry in transactionevent table</stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="663263768">UPDATED	OPEN	null	null</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.testbeans.gui.TestBeanGUI</stringProp>
            <stringProp name="dataSource"></stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.jdbc.sampler.JDBCSampler</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query"> SELECT customer_id, first_name, last_name FROM customer WHERE mp_customer_id=${customerParamMPCustomerID}</stringProp>
            <stringProp name="TestElement.name">verify customer record in db</stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="850459898">[\d]{1,10}	${customerParamFirstName}	${customerParamLastName}</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSampler2>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.HTTPSampler2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.gui.HTTPArgumentsPanel</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.config.Arguments</stringProp>
              <collectionProp name="Arguments.arguments"/>
              <stringProp name="TestElement.name">User Defined Variables</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.HttpTestSampleGui2</stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="TestElement.name">goto worldpayurl</stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">${worldpay_url}</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler2>
          <hashTree>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1070225484">&lt;title&gt;Welcome to WorldPay&lt;/title&gt;</stringProp>
                <stringProp name="-416899550">&lt;OPTION VALUE=&quot;EUR&quot; SELECTED&gt;EUR${paymentParamValue}</stringProp>
                <stringProp name="1667663546">${paymentParamDescr}</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">paymentIndirect wrong currency</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
	&lt;soapenv:Body&gt;
		&lt;paymentIndirect xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;
			&lt;transactionParam&gt;${txid}&lt;/transactionParam&gt;
			&lt;paymentParam&gt;
				&lt;ns1:currencyCode xmlns:ns1=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;BLAH&lt;/ns1:currencyCode&gt;
				&lt;ns2:description xmlns:ns2=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${paymentParamDescr}&lt;/ns2:description&gt;
				&lt;ns3:paymentMethod xmlns:ns3=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;WORLDPAY_INDIRECT&lt;/ns3:paymentMethod&gt;
				&lt;ns4:value xmlns:ns4=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${paymentParamValue}&lt;/ns4:value&gt;
			&lt;/paymentParam&gt;

			&lt;purchaseParam&gt;
				&lt;ns5:cartId xmlns:ns5=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${purchaseParamCartId}&lt;/ns5:cartId&gt;
				&lt;ns6:id xsi:nil=&quot;true&quot; xmlns:ns6=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns7:items xmlns:ns7=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;${purchaseParamCount}&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;EUR&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;${purchaseParamDescr}&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;${purchaseParamTitle}&lt;/ns7:title&gt;
						&lt;ns7:value&gt;${purchaseParamValue}&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
				&lt;/ns7:items&gt;&lt;/purchaseParam&gt;

			&lt;customerParam&gt;
				&lt;ns8:billingAddress xmlns:ns8=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns8:city&gt;Frankfurt&lt;/ns8:city&gt;
					&lt;ns8:countryCode&gt;DE&lt;/ns8:countryCode&gt;
					&lt;ns8:firstName&gt;Sharp&lt;/ns8:firstName&gt;
					&lt;ns8:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:lastName&gt;Mind&lt;/ns8:lastName&gt;
					&lt;ns8:postalCode xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:street&gt;Dreieichstr.+20&lt;/ns8:street&gt;
					&lt;ns8:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns8:billingAddress&gt;
				&lt;ns9:email xmlns:ns9=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamEmail}&lt;/ns9:email&gt;
				&lt;ns10:fax xmlns:ns10=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFax}&lt;/ns10:fax&gt;
				&lt;ns11:firstName xmlns:ns11=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFirstName}&lt;/ns11:firstName&gt;
				&lt;ns12:id xsi:nil=&quot;true&quot; xmlns:ns12=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns13:lastName xmlns:ns13=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamLastName}&lt;/ns13:lastName&gt;
				&lt;ns14:mpCustomerID xmlns:ns14=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamMPCustomerID}&lt;/ns14:mpCustomerID&gt;
				&lt;ns15:phone xmlns:ns15=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamPhone}&lt;/ns15:phone&gt;
				&lt;ns16:salutation xsi:nil=&quot;true&quot; xmlns:ns16=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns17:shippingAddress xmlns:ns17=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns17:city&gt;Frankfurt&lt;/ns17:city&gt;
					&lt;ns17:countryCode&gt;DE&lt;/ns17:countryCode&gt;
					&lt;ns17:firstName&gt;Sharp&lt;/ns17:firstName&gt;
					&lt;ns17:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:lastName&gt;Mind&lt;/ns17:lastName&gt;
					&lt;ns17:postalCode xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:street&gt;Dreieichstr.+20&lt;/ns17:street&gt;
					&lt;ns17:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns17:shippingAddress&gt;
				&lt;ns18:title xsi:nil=&quot;true&quot; xmlns:ns18=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
			&lt;/customerParam&gt;

		&lt;/paymentIndirect&gt;
	&lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;
</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="97204770">fault</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">paymentIndirect worldpay with 10 items</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
	&lt;soapenv:Body&gt;
		&lt;paymentIndirect xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;
			&lt;transactionParam&gt;${txid}&lt;/transactionParam&gt;
			&lt;paymentParam&gt;
				&lt;ns1:currencyCode xmlns:ns1=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;EUR&lt;/ns1:currencyCode&gt;
				&lt;ns2:description xmlns:ns2=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${paymentParamDescr}&lt;/ns2:description&gt;
				&lt;ns3:paymentMethod xmlns:ns3=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;WORLDPAY_INDIRECT&lt;/ns3:paymentMethod&gt;
				&lt;ns4:value xmlns:ns4=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${paymentParamValue}&lt;/ns4:value&gt;
			&lt;/paymentParam&gt;

			&lt;purchaseParam&gt;
				&lt;ns5:cartId xmlns:ns5=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${purchaseParamCartId}&lt;/ns5:cartId&gt;
				&lt;ns6:id xsi:nil=&quot;true&quot; xmlns:ns6=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns7:items xmlns:ns7=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;${purchaseParamCount}&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;EUR&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;${purchaseParamDescr}&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;${purchaseParamTitle}&lt;/ns7:title&gt;
						&lt;ns7:value&gt;${purchaseParamValue}&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
					&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;2&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;USD&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;item2&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;title2&lt;/ns7:title&gt;
						&lt;ns7:value&gt;102&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
					&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;3&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;GBP&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;item3&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;title3&lt;/ns7:title&gt;
						&lt;ns7:value&gt;103&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
					&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;4&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;USD&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;item4&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;title4&lt;/ns7:title&gt;
						&lt;ns7:value&gt;104&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
					&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;5&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;GBP&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;item5&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;title5&lt;/ns7:title&gt;
						&lt;ns7:value&gt;105&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
					&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;6&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;USD&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;item6&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;title6&lt;/ns7:title&gt;
						&lt;ns7:value&gt;106&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
					&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;7&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;GBP&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;item7&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;title7&lt;/ns7:title&gt;
						&lt;ns7:value&gt;107&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
					&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;8&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;USD&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;item8&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;title8&lt;/ns7:title&gt;
						&lt;ns7:value&gt;108&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
					&lt;ns7:PPNavigonPurchaseItem&gt;
						&lt;ns7:count&gt;9&lt;/ns7:count&gt;
						&lt;ns7:currencyCode&gt;GBP&lt;/ns7:currencyCode&gt;
						&lt;ns7:description&gt;item9&lt;/ns7:description&gt;
						&lt;ns7:id xsi:nil=&quot;true&quot;/&gt;
						&lt;ns7:title&gt;title9&lt;/ns7:title&gt;
						&lt;ns7:value&gt;109&lt;/ns7:value&gt;
					&lt;/ns7:PPNavigonPurchaseItem&gt;
				&lt;/ns7:items&gt;&lt;/purchaseParam&gt;

			&lt;customerParam&gt;
				&lt;ns8:billingAddress xmlns:ns8=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns8:city&gt;Frankfurt&lt;/ns8:city&gt;
					&lt;ns8:countryCode&gt;DE&lt;/ns8:countryCode&gt;
					&lt;ns8:firstName&gt;Sharp&lt;/ns8:firstName&gt;
					&lt;ns8:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:lastName&gt;Mind&lt;/ns8:lastName&gt;
					&lt;ns8:postalCode&gt;60599&lt;/ns8:postalCode&gt;
					&lt;ns8:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns8:street&gt;Dreieichstr.+20&lt;/ns8:street&gt;
					&lt;ns8:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns8:billingAddress&gt;
				&lt;ns9:email xmlns:ns9=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamEmail}&lt;/ns9:email&gt;
				&lt;ns10:fax xmlns:ns10=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFax}&lt;/ns10:fax&gt;
				&lt;ns11:firstName xmlns:ns11=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamFirstName}&lt;/ns11:firstName&gt;
				&lt;ns12:id xsi:nil=&quot;true&quot; xmlns:ns12=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns13:lastName xmlns:ns13=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamLastName}&lt;/ns13:lastName&gt;
				&lt;ns14:mpCustomerID xmlns:ns14=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamMPCustomerID}&lt;/ns14:mpCustomerID&gt;
				&lt;ns15:phone xmlns:ns15=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${customerParamPhone}&lt;/ns15:phone&gt;
				&lt;ns16:salutation xsi:nil=&quot;true&quot; xmlns:ns16=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
				&lt;ns17:shippingAddress xmlns:ns17=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;
					&lt;ns17:city&gt;Frankfurt&lt;/ns17:city&gt;
					&lt;ns17:countryCode&gt;DE&lt;/ns17:countryCode&gt;
					&lt;ns17:firstName&gt;Sharp&lt;/ns17:firstName&gt;
					&lt;ns17:id xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:lastName&gt;Mind&lt;/ns17:lastName&gt;
					&lt;ns17:postalCode xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:salutation xsi:nil=&quot;true&quot;/&gt;
					&lt;ns17:street&gt;Dreieichstr.+20&lt;/ns17:street&gt;
					&lt;ns17:title xsi:nil=&quot;true&quot;/&gt;
				&lt;/ns17:shippingAddress&gt;
				&lt;ns18:title xsi:nil=&quot;true&quot; xmlns:ns18=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;/&gt;
			&lt;/customerParam&gt;

		&lt;/paymentIndirect&gt;
	&lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;
</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1453912053">&lt;msisdn xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot; xsi:nil=&quot;true&quot; /&gt;</stringProp>
                <stringProp name="-1224180763">&lt;paymentUrl xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;https://select.worldpay.com/wcc/purchase</stringProp>
                <stringProp name="170660699">name=${customerParamFirstName}\+${customerParamLastName}</stringProp>
                <stringProp name="-948273205">&lt;pspType xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;INDIRECT_URL&lt;/pspType&gt;</stringProp>
                <stringProp name="-1325194843">&lt;transactionStatus xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;OPEN&lt;/transactionStatus&gt;</stringProp>
                <stringProp name="-152950440">&lt;txid xmlns=&quot;http://entity.ppnavigon.navigon.api.access.pp.navigon&quot;&gt;${txid}&lt;/txid&gt;</stringProp>
                <stringProp name="1482957857">&lt;paymentIndirectResponse xmlns=&quot;urn:pp.mobility-platform.de&quot;&gt;</stringProp>
                <stringProp name="360666647">&lt;paymentResult&gt;</stringProp>
                <stringProp name="680888074">&lt;/paymentResult&gt;&lt;/paymentIndirectResponse&gt;</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor>
              <stringProp name="RegexExtractor.default">INVALID_URL</stringProp>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.extractor.gui.RegexExtractorGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.extractor.RegexExtractor</stringProp>
              <stringProp name="RegexExtractor.regex">(https://)(.*)(&lt;/paymentUrl&gt;)</stringProp>
              <stringProp name="TestElement.name">extract worldpay url</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.refname">worldpay_url</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.LogicControllerGui</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.control.GenericController</stringProp>
          <stringProp name="TestElement.name">getTransactionStatus</stringProp>
          <boolProp name="TestElement.enabled">true</boolProp>
        </GenericController>
        <hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">getTransactionStatus</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        &lt;soapenv:Body&gt;
                &lt;ns1:getTransactionStatus soapenv:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xmlns:ns1=&quot;urn://mobility-platform.de/pp/&quot;&gt;
	&lt;getTransactionStatusRequest&gt;${txid}&lt;/getTransactionStatusRequest&gt;
        &lt;/ns1:getTransactionStatus&gt;
        &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-179276353">&lt;getTransactionStatusResult&gt;OPEN&lt;/getTransactionStatusResult&gt;</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.LogicControllerGui</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.control.GenericController</stringProp>
          <stringProp name="TestElement.name">commitTransaction</stringProp>
          <boolProp name="TestElement.enabled">false</boolProp>
        </GenericController>
        <hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">commitTransaction</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        &lt;soapenv:Body&gt;
                &lt;ns1:commitTransaction soapenv:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xmlns:ns1=&quot;urn://mobility-platform.de/pp/&quot;&gt;
	&lt;commitTransactionRequest&gt;${txid}
	&lt;/commitTransactionRequest&gt;
        &lt;/ns1:commitTransaction&gt;
        &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="648419374">&lt;commitTransactionResponse&gt;PENDING&lt;/commitTransactionResponse&gt;</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.LogicControllerGui</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.control.GenericController</stringProp>
          <stringProp name="TestElement.name">getTransactionStatus</stringProp>
          <boolProp name="TestElement.enabled">false</boolProp>
        </GenericController>
        <hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">getTransactionStatus</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        &lt;soapenv:Body&gt;
                &lt;ns1:getTransactionStatus soapenv:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xmlns:ns1=&quot;urn://mobility-platform.de/pp/&quot;&gt;
	&lt;getTransactionStatusRequest&gt;${txid}&lt;/getTransactionStatusRequest&gt;
        &lt;/ns1:getTransactionStatus&gt;
        &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
            <ResponseAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.AssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.ResponseAssertion</stringProp>
              <stringProp name="TestElement.name">Response Assertion</stringProp>
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-600061784">&lt;getTransactionStatusResult&gt;PENDING&lt;/getTransactionStatusResult&gt;</stringProp>
              </collectionProp>
              <boolProp name="TestElement.enabled">true</boolProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <stringProp name="Assertion.assume_success">false</stringProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.LogicControllerGui</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.control.GenericController</stringProp>
          <stringProp name="TestElement.name">paymentCreditCardDirect</stringProp>
          <boolProp name="TestElement.enabled">false</boolProp>
        </GenericController>
        <hashTree/>
        <GenericController>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.control.gui.LogicControllerGui</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.control.GenericController</stringProp>
          <stringProp name="TestElement.name">paymentDirectDebitDirect</stringProp>
          <boolProp name="TestElement.enabled">false</boolProp>
        </GenericController>
        <hashTree>
          <WebServiceSampler>
            <stringProp name="HTTPSampler.path">${serverPath}</stringProp>
            <stringProp name="TestElement.test_class">org.apache.jmeter.protocol.http.sampler.WebServiceSampler</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <boolProp name="TestElement.enabled">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="org.apache.jmeter.config.Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
            <stringProp name="HTTPSampler.port">${serverPort}</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="Soap.Action"></stringProp>
            <stringProp name="TestElement.gui_class">org.apache.jmeter.protocol.http.control.gui.WebServiceSamplerGui</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.wsdl_url"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">false</stringProp>
            <stringProp name="TestElement.name">paymentDirectDebitDirect</stringProp>
            <stringProp name="HTTPSampler.domain">${serverName}</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        &lt;soapenv:Body&gt;
                &lt;ns1:paymentDirectDebitDirect soapenv:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot; xmlns:ns1=&quot;urn://mobility-platform.de/pp/&quot;&gt;
	&lt;paymentDirectDebitDirectRequest&gt;
	&lt;transaction xsi:type=&quot;xsd:string&quot;&gt;${txid}&lt;/transaction&gt;
	&lt;payment xsi:type=&quot;ns2:PPNavigonPaymentDirectDebit&quot;&gt;&lt;/payment&gt;
	&lt;purchase xsi:type=&quot;ns2:PPNavigonPurchase&quot;&gt;&lt;/purchase&gt;
	&lt;customer xsi:type=&quot;ns2:PPNavigonCustomer&quot;&gt;&lt;/customer&gt;
	&lt;/paymentDirectDebitDirectRequest&gt;
        &lt;/ns1:paymentDirectDebitDirect&gt;
        &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
          </WebServiceSampler>
          <hashTree>
            <XMLAssertion>
              <stringProp name="TestElement.gui_class">org.apache.jmeter.assertions.gui.XMLAssertionGui</stringProp>
              <stringProp name="TestElement.test_class">org.apache.jmeter.assertions.XMLAssertion</stringProp>
              <stringProp name="TestElement.name">XML Assertion</stringProp>
              <boolProp name="TestElement.enabled">true</boolProp>
            </XMLAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.visualizers.StatVisualizer</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.reporters.ResultCollector</stringProp>
          <stringProp name="TestElement.name">Aggregate Report</stringProp>
          <objProp>
            <value class="org.apache.jmeter.samplers.SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <delimiter>,</delimiter>
              <printMilliseconds>true</printMilliseconds>
            </value>
            <name>saveConfig</name>
          </objProp>
          <boolProp name="TestElement.enabled">true</boolProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.visualizers.AssertionVisualizer</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.reporters.ResultCollector</stringProp>
          <stringProp name="TestElement.name">Assertion Results</stringProp>
          <objProp>
            <value class="org.apache.jmeter.samplers.SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <delimiter>,</delimiter>
              <printMilliseconds>true</printMilliseconds>
            </value>
            <name>saveConfig</name>
          </objProp>
          <boolProp name="TestElement.enabled">true</boolProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector>
          <stringProp name="TestElement.gui_class">org.apache.jmeter.visualizers.ViewResultsFullVisualizer</stringProp>
          <stringProp name="TestElement.test_class">org.apache.jmeter.reporters.ResultCollector</stringProp>
          <stringProp name="TestElement.name">View Results Tree</stringProp>
          <objProp>
            <value class="org.apache.jmeter.samplers.SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <delimiter>,</delimiter>
              <printMilliseconds>true</printMilliseconds>
            </value>
            <name>saveConfig</name>
          </objProp>
          <boolProp name="TestElement.enabled">true</boolProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
