Index: bin/jmeter.properties
===================================================================
--- bin/jmeter.properties	(revision 1736813)
+++ bin/jmeter.properties	(working copy)
@@ -1103,12 +1103,22 @@
 # Set to 0 to disable the size check and display the whole response
 #view.results.tree.max_size=10485760
 
+# Max number of Nodes retained in View Results Tree
+# When the limit is reached, JMeter will drop the oldest nodes (the first)
+# Setting to 0 disables the protection
+#view.results.tree.max_nodes=5000
+
 # Order of Renderers in View Results Tree
 # Note full class names should be used for non jmeter core renderers
 # For JMeter core renderers, class names start with . and are automatically
 # prefixed with org.apache.jmeter.visualizers
 view.results.tree.renderers_order=.RenderAsText,.RenderAsRegexp,.RenderAsCssJQuery,.RenderAsXPath,.RenderAsHTML,.RenderAsHTMLWithEmbedded,.RenderAsDocument,.RenderAsJSON,.RenderAsXML
 
+# Max number of Rows in View Results in Table 
+# When the limit is reached, JMeter will drop the oldest rows (the first)
+# Setting to 0 disables the protection
+#view.results.table.max_rows=5000
+
 # Maximum size of Document that can be parsed by Tika engine; defaut=10 * 1024 * 1024 (10MB)
 # Set to 0 to disable the size check
 #document.max_size=0
Index: src/components/org/apache/jmeter/visualizers/TableVisualizer.java
===================================================================
--- src/components/org/apache/jmeter/visualizers/TableVisualizer.java	(revision 1734700)
+++ src/components/org/apache/jmeter/visualizers/TableVisualizer.java	(working copy)
@@ -20,7 +20,9 @@
 
 import java.awt.BorderLayout;
 import java.awt.Color;
+import java.awt.Container;
 import java.awt.FlowLayout;
+import java.awt.Font;
 import java.text.Format;
 import java.text.SimpleDateFormat;
 
@@ -32,6 +34,7 @@
 import javax.swing.JScrollPane;
 import javax.swing.JTable;
 import javax.swing.JTextField;
+import javax.swing.SwingConstants;
 import javax.swing.border.Border;
 import javax.swing.border.EmptyBorder;
 import javax.swing.table.TableCellRenderer;
@@ -48,19 +51,23 @@
 import org.apache.jorphan.gui.RendererUtils;
 import org.apache.jorphan.gui.RightAlignRenderer;
 import org.apache.jorphan.gui.layout.VerticalLayout;
+import org.apache.jorphan.logging.LoggingManager;
 import org.apache.jorphan.reflect.Functor;
+import org.apache.log.Logger;
 
 /**
  * This class implements a statistical analyser that calculates both the average
  * and the standard deviation of the sampling process. The samples are displayed
  * in a JTable, and the statistics are displayed at the bottom of the table.
  *
- * created March 10, 2002
- *
  */
 public class TableVisualizer extends AbstractVisualizer implements Clearable {
 
-    private static final long serialVersionUID = 240L;
+    private static final long serialVersionUID = 241L;
+    /** Logging. */
+    private static final Logger log = LoggingManager.getLoggerForClass();
+
+    private static final int MAX_ROWS_IN_TABLE = JMeterUtils.getPropDefault("view.results.table.max_rows", 5000); //$NON-NLS-1$
 
     private static final String iconSize = JMeterUtils.getPropDefault(JMeter.TREE_ICON_SIZE, JMeter.DEFAULT_TREE_ICON_SIZE);
 
@@ -109,6 +116,8 @@
 
     private Format format = new SimpleDateFormat("HH:mm:ss.SSS"); //$NON-NLS-1$
 
+    private JLabel warningLabel;
+    
     // Column renderers
     private static final TableCellRenderer[] RENDERERS =
         new TableCellRenderer[]{
@@ -169,6 +178,9 @@
 
     @Override
     public void add(final SampleResult res) {
+        if(applyOOMProtection()) {
+            return;
+        }
         JMeterUtils.runSafe(false, new Runnable() {
             @Override
             public void run() {
@@ -205,6 +217,26 @@
             }
         });
     }
+    
+    /**
+     * When the limit is reached, JMeter will not {@link SampleResult} anymore
+     * Setting to 0 disables the protection
+     */
+    private boolean applyOOMProtection() {
+        // Protection already in place
+        if(warningLabel.isVisible()) {
+            return true;
+        }
+        if(MAX_ROWS_IN_TABLE > 0 && 
+                // We reached the limit
+                model.getRowCount() > MAX_ROWS_IN_TABLE) {
+            log.warn(getName()+":applying OUTOFMEMORY PROTECTION, SampleResults are not added anymore, use NON-GUI mode"
+                    + " or configure property 'view.results.table.max_rows'");
+            warningLabel.setVisible(true);
+            return true;
+        }
+        return false;
+    }
 
     @Override
     public synchronized void clearData() {
@@ -214,6 +246,7 @@
         dataField.setText("0"); // $NON-NLS-1$
         averageField.setText("0"); // $NON-NLS-1$
         deviationField.setText("0"); // $NON-NLS-1$
+        warningLabel.setVisible(false);
         repaint();
     }
 
@@ -343,4 +376,21 @@
             }
         }
     }
+
+    /* (non-Javadoc)
+     * @see org.apache.jmeter.gui.AbstractJMeterGuiComponent#getNamePanel()
+     */
+    @Override
+    protected Container makeTitlePanel() {
+        Container container = super.makeTitlePanel();
+        ImageIcon image = JMeterUtils.getImage("warning.png"); //$NON-NLS-1$
+        warningLabel = new JLabel("", image, SwingConstants.LEFT); // $NON-NLS-1$
+        warningLabel.setForeground(Color.RED);
+        Font font = warningLabel.getFont();
+        warningLabel.setFont(new Font(font.getFontName(), Font.BOLD, (int)(font.getSize()*1.1)));
+        warningLabel.setVisible(false);
+        container.add(warningLabel);
+        warningLabel.setText(JMeterUtils.getResString("view_results_table_oom")); //$NON-NLS-1$
+        return container;
+    }
 }
Index: src/components/org/apache/jmeter/visualizers/ViewResultsFullVisualizer.java
===================================================================
--- src/components/org/apache/jmeter/visualizers/ViewResultsFullVisualizer.java	(revision 1734700)
+++ src/components/org/apache/jmeter/visualizers/ViewResultsFullVisualizer.java	(working copy)
@@ -25,7 +25,9 @@
 import java.awt.BorderLayout;
 import java.awt.Color;
 import java.awt.Component;
+import java.awt.Container;
 import java.awt.Dimension;
+import java.awt.Font;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.awt.event.ItemEvent;
@@ -35,6 +37,7 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.atomic.AtomicLong;
 
 import javax.swing.BorderFactory;
 import javax.swing.ComboBoxModel;
@@ -42,10 +45,12 @@
 import javax.swing.ImageIcon;
 import javax.swing.JCheckBox;
 import javax.swing.JComboBox;
+import javax.swing.JLabel;
 import javax.swing.JScrollPane;
 import javax.swing.JSplitPane;
 import javax.swing.JTabbedPane;
 import javax.swing.JTree;
+import javax.swing.SwingConstants;
 import javax.swing.border.Border;
 import javax.swing.event.TreeSelectionEvent;
 import javax.swing.event.TreeSelectionListener;
@@ -102,6 +107,8 @@
     private JComboBox<ResultRenderer> selectRenderPanel;
 
     private int selectedTab;
+    
+    private AtomicLong currentSizeApproximation = new AtomicLong(0l);
 
     protected static final String COMBO_CHANGE_COMMAND = "change_combo"; // $NON-NLS-1$
 
@@ -124,12 +131,16 @@
     private static final String VIEWERS_ORDER =
         JMeterUtils.getPropDefault("view.results.tree.renderers_order", ""); // $NON-NLS-1$ //$NON-NLS-2$
 
+    private static final int MAX_NODES_IN_TREE = JMeterUtils.getPropDefault("view.results.tree.max_nodes", 5000); //$NON-NLS-1$
+
     private ResultRenderer resultsRender = null;
 
     private TreeSelectionEvent lastSelectionEvent;
 
     private JCheckBox autoScrollCB;
 
+    private JLabel warningLabel;
+
     /**
      * Constructor
      */
@@ -153,6 +164,9 @@
      * Update the visualizer with new data.
      */
     private synchronized void updateGui(SampleResult res) {
+        if(applyOOMProtection()) {
+            return;
+        }
         // Add sample
         DefaultMutableTreeNode currNode = new SearchableTreeNode(res, treeModel);
         treeModel.insertNodeInto(currNode, root, root.getChildCount());
@@ -176,6 +190,27 @@
         }
     }
 
+    /**
+     * When the limit is reached, JMeter will not {@link SampleResult} anymore
+     * Setting to 0 disables the protection
+     */
+    private boolean applyOOMProtection() {
+        // Protection already in place
+        if(warningLabel.isVisible()) {
+            return true;
+        }
+
+        if(MAX_NODES_IN_TREE > 0 && 
+                // We reached the limit
+                root.getChildCount() > MAX_NODES_IN_TREE) {
+            log.warn(getName()+":applying OUTOFMEMORY PROTECTION, SampleResults are not added anymore, use NON-GUI mode"
+                    + " or configure property 'view.results.tree.max_nodes'");
+            warningLabel.setVisible(true);
+            return true;
+        }
+        return false;
+    }
+
     private void addSubResults(DefaultMutableTreeNode currNode, SampleResult res) {
         SampleResult[] subResults = res.getSubResults();
 
@@ -210,6 +245,8 @@
             treeModel.removeNodeFromParent((DefaultMutableTreeNode) root.getChildAt(0));
         }
         resultsRender.clearData();
+        currentSizeApproximation.set(0);
+        warningLabel.setVisible(false);
     }
 
     /** {@inheritDoc} */
@@ -467,4 +504,21 @@
     public void itemStateChanged(ItemEvent e) {
         // NOOP state is held by component
     }
+
+    /* (non-Javadoc)
+     * @see org.apache.jmeter.gui.AbstractJMeterGuiComponent#getNamePanel()
+     */
+    @Override
+    protected Container makeTitlePanel() {
+        Container container = super.makeTitlePanel();
+        ImageIcon image = JMeterUtils.getImage("warning.png"); //$NON-NLS-1$
+        warningLabel = new JLabel("", image, SwingConstants.LEFT); // $NON-NLS-1$
+        warningLabel.setForeground(Color.RED);
+        Font font = warningLabel.getFont();
+        warningLabel.setFont(new Font(font.getFontName(), Font.BOLD, (int)(font.getSize()*1.1)));
+        warningLabel.setVisible(false);
+        container.add(warningLabel);
+        warningLabel.setText(JMeterUtils.getResString("view_results_tree_oom")); //$NON-NLS-1$
+        return container;
+    }
 }
Index: src/core/org/apache/jmeter/resources/messages.properties
===================================================================
--- src/core/org/apache/jmeter/resources/messages.properties	(revision 1737310)
+++ src/core/org/apache/jmeter/resources/messages.properties	(working copy)
@@ -1235,6 +1235,8 @@
 view_results_latency=Latency: 
 view_results_connect_time=Connect Time: 
 view_results_load_time=Load time: 
+view_results_table_oom=To avoid OutOfMemory, component is not adding anymore sample results to the table anymore, use NON GUI mode for load testing
+view_results_tree_oom=To avoid OutOfMemory, component is not adding anymore sample results to the tree anymore, use NON GUI mode for load testing
 view_results_render=Render: 
 view_results_render_document=Document
 view_results_render_html=HTML
Index: src/core/org/apache/jmeter/resources/messages_fr.properties
===================================================================
--- src/core/org/apache/jmeter/resources/messages_fr.properties	(revision 1737310)
+++ src/core/org/apache/jmeter/resources/messages_fr.properties	(working copy)
@@ -1203,7 +1203,7 @@
 userpw=Mot de passe
 validate_threadgroup=Valider
 value=Valeur \:
-value_to_quote_meta=Valeur \u00E0 \u00E9chapper des caract\u00E8res sp\u00E9ciaux utilis\u00E8s par ORO Regexp
+value_to_quote_meta=Valeur \u00E0 \u00E9chapper des caract\u00E8res sp\u00E9ciaux utilis\u00E9s par ORO Regexp
 var_name=Nom de r\u00E9f\u00E9rence \:
 variable_name_param=Nom de variable (peut inclure une r\u00E9f\u00E9rence de variable ou fonction)
 view_graph_tree_title=Voir le graphique en arbre
@@ -1220,6 +1220,8 @@
 view_results_in_table=Tableau de r\u00E9sultats
 view_results_latency=Latence \: 
 view_results_load_time=Temps de r\u00E9ponse \: 
+view_results_table_oom=Afin d'\u00E9viter un probl\u00E8me m\u00E9moire, les Sample Results ne sont plus ajout\u00E9s, utilisez le mode NON-GUI pour les tests de charge
+view_results_tree_oom=Afin d'\u00E9viter un probl\u00E8me m\u00E9moire, les Sample Results ne sont plus ajout\u00E9s, utilisez le mode NON-GUI pour les tests de charge
 view_results_render=Rendu \: 
 view_results_render_document=Document
 view_results_render_html=HTML
