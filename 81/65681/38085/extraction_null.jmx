<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5-SNAPSHOT c727934">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="JSON-product" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Sleep_Time" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Time</stringProp>
                <stringProp name="Argument.value">100</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sleep_Mask" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Mask</stringProp>
                <stringProp name="Argument.value">0xFF</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Label" elementType="Argument">
                <stringProp name="Argument.name">Label</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseCode" elementType="Argument">
                <stringProp name="Argument.name">ResponseCode</stringProp>
                <stringProp name="Argument.value">200</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseMessage" elementType="Argument">
                <stringProp name="Argument.name">ResponseMessage</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Status" elementType="Argument">
                <stringProp name="Argument.name">Status</stringProp>
                <stringProp name="Argument.value">OK</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SamplerData" elementType="Argument">
                <stringProp name="Argument.name">SamplerData</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResultData" elementType="Argument">
                <stringProp name="Argument.name">ResultData</stringProp>
                <stringProp name="Argument.value">{&quot;categoryofprovide&quot;:&quot;Libre-Service, Drive 2 h&quot;,&quot;letterrange&quot;:&quot;K&quot;,&quot;newproduct&quot;:&quot;0&quot;,&quot;created_at&quot;:&quot;2021-01-28 07:10:59&quot;,&quot;capunitcode&quot;:&quot;Unite&quot;,&quot;retailer_offer&quot;:{&quot;original_price&quot;:&quot;1119.0000&quot;,&quot;vendor_code&quot;:&quot;12314366&quot;,&quot;storeAvailability&quot;:{&quot;availabilities&quot;:[{&quot;availableStock&quot;:0,&quot;stockStatus&quot;:&quot;ONORDER&quot;}]},&quot;created_at&quot;:&quot;2021-06-17 10:12:25&quot;,&quot;range&quot;:&quot;K&quot;,&quot;totoman_unit_price&quot;:null,&quot;is_discount&quot;:false,&quot;totoman_weee&quot;:&quot;0.0000&quot;,&quot;is_in_stock&quot;:true,&quot;price&quot;:&quot;1119.0000&quot;,&quot;product_id&quot;:113128,&quot;unit_price_ht&quot;:null,&quot;last_update&quot;:&quot;2021-07-09 09:16:42&quot;,&quot;price_ht&quot;:&quot;932.5000&quot;,&quot;seller_id&quot;:31,&quot;decrease_stock&quot;:&quot;0&quot;,&quot;delivery&quot;:{&quot;relay&quot;:{&quot;availabilities&quot;:[]},&quot;store&quot;:{&quot;availabilities&quot;:[]},&quot;home&quot;:{&quot;availabilities&quot;:[]}},&quot;price_context_code&quot;:&quot;BU-TTFR-STORE-000&quot;,&quot;visibility&quot;:2,&quot;tax_class_id&quot;:null,&quot;is_third_party_vendor&quot;:false,&quot;vendor_name&quot;:&quot;totoman&quot;,&quot;external_offer_id&quot;:&quot;6bf661a8b6ddcd506821060515783fdd72931b8e&quot;,&quot;totoman_gap_code&quot;:null,&quot;nbOffers&quot;:null,&quot;label&quot;:&quot;Commandable en magasin&quot;,&quot;restocked_store&quot;:&quot;0&quot;,&quot;offer_id&quot;:129853,&quot;is_available&quot;:true,&quot;ecotaxes&quot;:{&quot;all&quot;:{&quot;amount&quot;:0},&quot;dea&quot;:{&quot;amount&quot;:0},&quot;deee&quot;:{&quot;amount&quot;:0}},&quot;qty&quot;:&quot;999&quot;,&quot;special_price_ht&quot;:&quot;932.5000&quot;,&quot;customer_group_id&quot;:&quot;0&quot;},&quot;msrp_display_actual_price_type&quot;:&quot;0&quot;,&quot;attribute_set_id&quot;:1540,&quot;updated_at&quot;:&quot;2021-08-26 17:40:22&quot;,&quot;price&quot;:0,&quot;titikey&quot;:&quot;34656020&quot;,&quot;id&quot;:113128,&quot;category_ids&quot;:[2,9359,9615,9617],&quot;sku&quot;:&quot;1422260&quot;,&quot;brand&quot;:&quot;5233&quot;,&quot;type_id&quot;:&quot;simple&quot;,&quot;mainpicturecode&quot;:&quot;1422253_01_pbd&quot;,&quot;tax_class_id&quot;:&quot;25&quot;,&quot;has_options&quot;:&quot;0&quot;,&quot;extension_attributes&quot;:[],&quot;picture&quot;:&quot;1422253_01_pbd,1422253_02_pbd,1422253_03_pbd,1422253_04_pbd,1422253_05_pbd,1422253_06_pbd&quot;,&quot;url_key&quot;:&quot;escalier-toto-d110-1422260&quot;,&quot;required_options&quot;:&quot;0&quot;,&quot;minimal_price&quot;:&quot;0.000000&quot;,&quot;product_review_count&quot;:&quot;0&quot;,&quot;name&quot;:&quot;Escalier toto&quot;,&quot;status&quot;:1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
        </JavaSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - productRetailerOffer" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">productRetailerOffer</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.retailer_offer</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">nv_productRetailerOffer</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable">product</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - productGapCode" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">productGapCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.totoman_gap_code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">nv_productGapCode</stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">productRetailerOffer</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="DS-${productRetailerOffer}" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="DS-${productGapCode}" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
