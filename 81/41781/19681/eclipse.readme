Warning: The Eclipse.classpath file has been tested with Eclipse 3.2.
It may not work with other versions.

Eclipse.classpath
-----------------

The file eclipse.classpath is intended as a starter .classpath file 
for building JMeter using Eclipse version 3.  It has exclusion filters 
for all the source files that depend on optional jars.  Note that 
jsse was once an optional jar, but this is included with JVM 1.4+,
so those dependencies are not excluded.

The optional jars are:
javamail (available from java.sun.com); two jars are required:
  mail.jar - http://java.sun.com/products/javamail/downloads/index.html
  activation.jar - http://java.sun.com/products/javabeans/glasgow/jaf.html
beanshell - see http://www.beanshell.org/
bsf - see http://jakarta.apache.org/bsf/index.html
jms, jndi - one implementation is http://activemq.apache.org/
iaik - see http://jce.iaik.tugraz.at/

The usage of the jars is as follows:

core
----
org/apache/jmeter/util/keystore/PKCS12KeyStore.java - requires iaik

components
------------

org/apache/jmeter/visualizers/MailerVisualizer.java - requires javamail
org/apache/jmeter/reporters/MailerModel.java - requires javamail
org/apache/jmeter/reporters/MailerResultCollector.java - requires javamail
org/apache/jmeter/assertions/**/BeanShell*.java - requires beanshell

http
----
org/apache/jmeter/protocol/http/sampler/WebServiceSampler.java - requires javamail
org/apache/jmeter/protocol/http/control/gui/WebServiceSamplerGui.java - requires javamail

java
----
org/apache/jmeter/protocol/java/**/BeanShell*.java - requires beanshell
org/apache/jmeter/protocol/java/**/BSF*.java - requires bsf

jms
---
org/apache/jmeter/protocol/jms/** - requires jms

jndi
----
org/apache/jmeter/protocol/jndi/** - requires jndi

mail
----
org/apache/jmeter/protocol/mail/** - requires javamail

Before use, delete or disable the exclusion filters that are not required.

Unlike Ant, Eclipse does not support conditional excludes.

Note that Eclipse does not handle RMI compilations, nor is it easy to use for 
creating jar files.  

However, it is easy to use Eclipse to run Ant.
The following ant targets may prove useful:

  compile-rmi - compiles the RMI files that Eclipse ignores
  package-only - creates the jars
  package - compiles everything and then packages it

  
Launching from Eclipse
----------------------

Create a new Java Application launch configuration.  On the Main tab, enter the 
following as the main class:

  org.apache.jmeter.NewDriver
  
On the Arguments tab, enter the following into the VM Arguments area to set a value
for the user.dir system property:

  -Duser.dir=${workspace_loc}\jmeter\bin

Note: the user.dir value assumes you checked out the JMeter code as an Eclipse  
project named "jmeter".  If you used something else, adjust accordingly.  
The back slashes are appropriate for Windows; Linux needs forward slashes.
