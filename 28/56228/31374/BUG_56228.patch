Index: src/components/org/apache/jmeter/visualizers/ViewResultsFullVisualizer.java
===================================================================
--- src/components/org/apache/jmeter/visualizers/ViewResultsFullVisualizer.java	(revision 1575078)
+++ src/components/org/apache/jmeter/visualizers/ViewResultsFullVisualizer.java	(working copy)
@@ -32,7 +32,9 @@
 import java.awt.event.ItemListener;
 import java.io.IOException;
 import java.util.Collections;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import javax.swing.ComboBoxModel;
 import javax.swing.DefaultComboBoxModel;
@@ -108,6 +110,10 @@
     private static final int MAX_DISPLAY_SIZE =
         JMeterUtils.getPropDefault("view.results.tree.max_size", 200 * 1024); // $NON-NLS-1$
 
+    // default display order
+    private static final String VIEWERS_ORDER =
+        JMeterUtils.getPropDefault("view.results.tree.renderers_order", ""); // $NON-NLS-1$ //$NON-NLS-2$
+
     private ResultRenderer resultsRender = null;
 
     private TreeSelectionEvent lastSelectionEvent;
@@ -288,13 +294,11 @@
 
         VerticalPanel leftPane = new VerticalPanel();
         leftPane.add(treePane, BorderLayout.CENTER);
-        VerticalPanel leftDownPane = new VerticalPanel();
-        leftDownPane.add(createComboRender(), BorderLayout.NORTH);
+        leftPane.add(createComboRender(), BorderLayout.NORTH);
         autoScrollCB = new JCheckBox(JMeterUtils.getResString("view_results_autoscroll")); // $NON-NLS-1$
         autoScrollCB.setSelected(false);
         autoScrollCB.addItemListener(this);
-        leftDownPane.add(autoScrollCB, BorderLayout.SOUTH);
-        leftPane.add(leftDownPane, BorderLayout.SOUTH);
+        leftPane.add(autoScrollCB, BorderLayout.SOUTH);
         return leftPane;
     }
 
@@ -318,6 +322,7 @@
         }
         String textRenderer = JMeterUtils.getResString("view_results_render_text"); // $NON-NLS-1$
         Object textObject = null;
+        Map<String, ResultRenderer> map = new HashMap<String, ResultRenderer>(classesToAdd.size());
         for (String clazz : classesToAdd) {
             try {
                 // Instantiate render classes
@@ -326,11 +331,27 @@
                     textObject=renderer;
                 }
                 renderer.setBackgroundColor(getBackground());
-                selectRenderPanel.addItem(renderer);
+                map.put(renderer.getClass().getName(), renderer);
             } catch (Exception e) {
-                log.warn("Error in load result render:" + clazz, e);
+                log.warn("Error loading result renderer:" + clazz, e);
+            }
+        }
+        if(VIEWERS_ORDER.length()>0) {
+            String[] keys = VIEWERS_ORDER.split(",");
+            for (String key : keys) {
+                ResultRenderer renderer = map.remove(key);
+                if(renderer != null) {
+                    selectRenderPanel.addItem(renderer);
+                } else {
+                    log.warn("Missing (check spelling error in renderer name) or already added(check doublon) " +
+                    		"result renderer, check property 'view.results.tree.renderers_order', renderer name:'"+key+"'");
+                }
             }
         }
+        // Add remaining (plugins or missed in property)
+        for (ResultRenderer renderer : map.values()) {
+            selectRenderPanel.addItem(renderer);
+        }
         nodesModel.setSelectedItem(textObject); // preset to "Text" option
         return selectRenderPanel;
     }
Index: bin/jmeter.properties
===================================================================
--- bin/jmeter.properties	(revision 1575078)
+++ bin/jmeter.properties	(working copy)
@@ -963,6 +963,8 @@
 # Set to 0 to disable the size check
 #view.results.tree.max_size=0
 
+view.results.tree.renderers_order=org.apache.jmeter.visualizers.RenderAsText,org.apache.jmeter.visualizers.RenderAsRegexp,org.apache.jmeter.visualizers.RenderAsCssJQuery,org.apache.jmeter.visualizers.RenderAsXPath,org.apache.jmeter.visualizers.RenderAsHTML,org.apache.jmeter.visualizers.RenderAsHTMLWithEmbedded,org.apache.jmeter.visualizers.RenderAsDocument,org.apache.jmeter.visualizers.RenderAsJSON,org.apache.jmeter.visualizers.RenderAsXML,com.ubikingenierie.loadpack.json.render.RenderJsonAsXML,com.ubikingenierie.loadpack.json.render.RenderAsJsonRenderer,com.ubikingenierie.loadpack.json.render.RenderJsonAsXML,com.ubikingenierie.loadpack.json.render.RenderAsJsonRenderer
+
 # Maximum size of Document that can be parsed by Tika engine; defaut=10 * 1024 * 1024 (10MB)
 # Set to 0 to disable the size check
 #document.max_size=0
