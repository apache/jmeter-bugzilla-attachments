<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="LoadTestsFront" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <stringProp name=" TestPlan.user_define_classpath"></stringProp>
      <elementProp name=" TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="resdir" elementType="Argument">
            <stringProp name="Argument.name">resdir</stringProp>
            <stringProp name="Argument.value">${__P(resdir,/data/jmeter/BUG_IFCONTROLLER)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_escaped" elementType="Argument">
            <stringProp name="Argument.name">host_escaped</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jvmId" elementType="Argument">
            <stringProp name="Argument.name">jvmId</stringProp>
            <stringProp name="Argument.value">${__P(jvmId,0)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">10080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="proto" elementType="Argument">
            <stringProp name="Argument.name">proto</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ctxpath" elementType="Argument">
            <stringProp name="Argument.name">ctxpath</stringProp>
            <stringProp name="Argument.value">/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Paramètres HTTP par défaut" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${host}</stringProp>
        <stringProp name="HTTPSampler.port">${port}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">${proto}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestionnaire d&apos;entêtes HTTP" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">fr</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows; U; Windows NT 6.1; fr; rv:1.9.2)</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, */*</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV_criteria" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">ISO-8859-1</stringProp>
        <stringProp name="filename">${resdir}/criteria.csv</stringProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="variableNames">customerStatus</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">Groupe d&apos;unités courant</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SC3" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Contrôleur Boucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">5</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1267031524000</longProp>
        <longProp name="ThreadGroup.end_time">1267031524000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S3-CUSTOMER-CREATE" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S3-create-natural-customer" enabled="true">
            <boolProp name="TransactionController.parent">false</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="s3-createNaturalPerson" enabled="true">
              <boolProp name="TransactionController.parent">false</boolProp>
              <boolProp name="TransactionController.includeTimers">false</boolProp>
            </TransactionController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="JR0" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Sleep_Time" elementType="Argument">
                      <stringProp name="Argument.name">Sleep_Time</stringProp>
                      <stringProp name="Argument.value">100</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Sleep_Mask" elementType="Argument">
                      <stringProp name="Argument.name">Sleep_Mask</stringProp>
                      <stringProp name="Argument.value">0xFF</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Label" elementType="Argument">
                      <stringProp name="Argument.name">Label</stringProp>
                      <stringProp name="Argument.value">CLE0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="ResponseCode" elementType="Argument">
                      <stringProp name="Argument.name">ResponseCode</stringProp>
                      <stringProp name="Argument.value">200</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="ResponseMessage" elementType="Argument">
                      <stringProp name="Argument.name">ResponseMessage</stringProp>
                      <stringProp name="Argument.value">0K</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Status" elementType="Argument">
                      <stringProp name="Argument.name">Status</stringProp>
                      <stringProp name="Argument.value">OK</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="SamplerData" elementType="Argument">
                      <stringProp name="Argument.name">SamplerData</stringProp>
                      <stringProp name="Argument.value">SD0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="ResultData" elementType="Argument">
                      <stringProp name="Argument.name">ResultData</stringProp>
                      <stringProp name="Argument.value">RD0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Si pas client prospect" enabled="true">
              <stringProp name="IfController.condition">${customerStatus}==0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="s3-createAddressAndHousing" enabled="true">
                <boolProp name="TransactionController.parent">false</boolProp>
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="JR1" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Sleep_Time" elementType="Argument">
                        <stringProp name="Argument.name">Sleep_Time</stringProp>
                        <stringProp name="Argument.value">100</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Sleep_Mask" elementType="Argument">
                        <stringProp name="Argument.name">Sleep_Mask</stringProp>
                        <stringProp name="Argument.value">0xFF</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Label" elementType="Argument">
                        <stringProp name="Argument.name">Label</stringProp>
                        <stringProp name="Argument.value">CLE1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="ResponseCode" elementType="Argument">
                        <stringProp name="Argument.name">ResponseCode</stringProp>
                        <stringProp name="Argument.value">200</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="ResponseMessage" elementType="Argument">
                        <stringProp name="Argument.name">ResponseMessage</stringProp>
                        <stringProp name="Argument.value">0K</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Status" elementType="Argument">
                        <stringProp name="Argument.name">Status</stringProp>
                        <stringProp name="Argument.value">OK</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="SamplerData" elementType="Argument">
                        <stringProp name="Argument.name">SamplerData</stringProp>
                        <stringProp name="Argument.value">SD1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="ResultData" elementType="Argument">
                        <stringProp name="Argument.name">ResultData</stringProp>
                        <stringProp name="Argument.value">RD1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S3-create-legal-entity-customer" enabled="true">
            <boolProp name="TransactionController.parent">false</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="s3-createLegalEntity" enabled="true">
              <boolProp name="TransactionController.parent">false</boolProp>
              <boolProp name="TransactionController.includeTimers">false</boolProp>
            </TransactionController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="JR2" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Sleep_Time" elementType="Argument">
                      <stringProp name="Argument.name">Sleep_Time</stringProp>
                      <stringProp name="Argument.value">100</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Sleep_Mask" elementType="Argument">
                      <stringProp name="Argument.name">Sleep_Mask</stringProp>
                      <stringProp name="Argument.value">0xFF</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Label" elementType="Argument">
                      <stringProp name="Argument.name">Label</stringProp>
                      <stringProp name="Argument.value">CLE2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="ResponseCode" elementType="Argument">
                      <stringProp name="Argument.name">ResponseCode</stringProp>
                      <stringProp name="Argument.value">200</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="ResponseMessage" elementType="Argument">
                      <stringProp name="Argument.name">ResponseMessage</stringProp>
                      <stringProp name="Argument.value">0K</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Status" elementType="Argument">
                      <stringProp name="Argument.name">Status</stringProp>
                      <stringProp name="Argument.value">OK</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="SamplerData" elementType="Argument">
                      <stringProp name="Argument.name">SamplerData</stringProp>
                      <stringProp name="Argument.value">SD2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="ResultData" elementType="Argument">
                      <stringProp name="Argument.name">ResultData</stringProp>
                      <stringProp name="Argument.value">RD2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Si pas client prospect" enabled="true">
              <stringProp name="IfController.condition">${customerStatus}==0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S3-createLegalEntityAddress" enabled="true">
                <boolProp name="TransactionController.parent">false</boolProp>
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="JR3" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Sleep_Time" elementType="Argument">
                        <stringProp name="Argument.name">Sleep_Time</stringProp>
                        <stringProp name="Argument.value">100</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Sleep_Mask" elementType="Argument">
                        <stringProp name="Argument.name">Sleep_Mask</stringProp>
                        <stringProp name="Argument.value">0xFF</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Label" elementType="Argument">
                        <stringProp name="Argument.name">Label</stringProp>
                        <stringProp name="Argument.value">CLE3</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="ResponseCode" elementType="Argument">
                        <stringProp name="Argument.name">ResponseCode</stringProp>
                        <stringProp name="Argument.value">200</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="ResponseMessage" elementType="Argument">
                        <stringProp name="Argument.name">ResponseMessage</stringProp>
                        <stringProp name="Argument.value">0K</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Status" elementType="Argument">
                        <stringProp name="Argument.name">Status</stringProp>
                        <stringProp name="Argument.value">OK</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="SamplerData" elementType="Argument">
                        <stringProp name="Argument.name">SamplerData</stringProp>
                        <stringProp name="Argument.value">SD3</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="ResultData" elementType="Argument">
                        <stringProp name="Argument.name">ResultData</stringProp>
                        <stringProp name="Argument.value">RD3</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SEPARATOR" enabled="false">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1273245700000</longProp>
        <longProp name="ThreadGroup.end_time">1267694249000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.duration">3600</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
