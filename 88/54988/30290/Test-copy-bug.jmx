<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="2.9 r1437961">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments">ASE TWS SMS Send Proxy Service</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <com.aepona.jmeter.mockhttp.HttpMockControl guiclass="com.aepona.jmeter.mockhttp.HttpMockControlGui" testclass="com.aepona.jmeter.mockhttp.HttpMockControl" testname="HTTP Mock Server" enabled="true">
        <stringProp name="HttpMockControlGui.port">8080</stringProp>
        <objProp>
          <name>HttpMockControlGui.requestResponse</name>
          <value class="java.util.ArrayList">
            <com.aepona.jmeter.mockhttp.bean.MockServerScenario>
              <description>test</description>
              <expectedHttpMethod>GET</expectedHttpMethod>
              <pathMatchType>CONTAINS</pathMatchType>
              <expectedPath>/test</expectedPath>
              <bodyMatchType>NONE</bodyMatchType>
              <expectedRequestBody></expectedRequestBody>
              <requestExpressions/>
              <responseCode>200</responseCode>
              <responseHeader>Transfer-encoding:chunked
Content-type:text/plain</responseHeader>
              <responseBody>test</responseBody>
            </com.aepona.jmeter.mockhttp.bean.MockServerScenario>
          </value>
        </objProp>
      </com.aepona.jmeter.mockhttp.HttpMockControl>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1368788270000</longProp>
        <longProp name="ThreadGroup.end_time">1368788270000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
