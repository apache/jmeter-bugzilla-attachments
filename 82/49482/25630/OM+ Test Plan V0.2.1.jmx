<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Transport/JMS/InitialContextFactory" elementType="Argument">
            <stringProp name="Argument.name">Transport/JMS/InitialContextFactory</stringProp>
            <stringProp name="Argument.value">com.tibco.tibjms.naming.TibjmsInitialContextFactory</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Transport/JMS/ProviderURL" elementType="Argument">
            <stringProp name="Argument.name">Transport/JMS/ProviderURL</stringProp>
            <stringProp name="Argument.value">tcp://localhost:7222</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Transport/JMS/QueueConnectionFactory" elementType="Argument">
            <stringProp name="Argument.name">Transport/JMS/QueueConnectionFactory</stringProp>
            <stringProp name="Argument.value">QueueConnectionFactory</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Domains/OMP/QueueNames/Request" elementType="Argument">
            <stringProp name="Argument.name">Domains/OMP/QueueNames/Request</stringProp>
            <stringProp name="Argument.value">OMP.OMP.REQ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Domains/OMP/QueueNames/Reply" elementType="Argument">
            <stringProp name="Argument.name">Domains/OMP/QueueNames/Reply</stringProp>
            <stringProp name="Argument.value">OMP.OMP.REP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Domains/EXT/QueueNames/Request" elementType="Argument">
            <stringProp name="Argument.name">Domains/EXT/QueueNames/Request</stringProp>
            <stringProp name="Argument.value">EXT.QUEUE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Domains/EXT/QueueNames/Reply" elementType="Argument">
            <stringProp name="Argument.name">Domains/EXT/QueueNames/Reply</stringProp>
            <stringProp name="Argument.value">EXT.QUEUE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Domains/Fulfiller/QueueNames/TechnicalRequest" elementType="Argument">
            <stringProp name="Argument.name">Domains/Fulfiller/QueueNames/TechnicalRequest</stringProp>
            <stringProp name="Argument.value">OMP.FULFILLER.TECHNICAL.REQ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Domains/Fulfiller/QueueNames/TechnicalReply" elementType="Argument">
            <stringProp name="Argument.name">Domains/Fulfiller/QueueNames/TechnicalReply</stringProp>
            <stringProp name="Argument.value">OMP.FULFILLER.TECHNICAL.REP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Transport/JMS/TopicConnectionFactory" elementType="Argument">
            <stringProp name="Argument.name">Transport/JMS/TopicConnectionFactory</stringProp>
            <stringProp name="Argument.value">TopicConnectionFactory</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <JavaConfig guiclass="JavaConfigGui" testclass="JavaConfig" testname="Java Request Defaults" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="Sleep_Time" elementType="Argument">
              <stringProp name="Argument.name">Sleep_Time</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Sleep_Mask" elementType="Argument">
              <stringProp name="Argument.name">Sleep_Mask</stringProp>
              <stringProp name="Argument.value">0xFF</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Label" elementType="Argument">
              <stringProp name="Argument.name">Label</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ResponseCode" elementType="Argument">
              <stringProp name="Argument.name">ResponseCode</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ResponseMessage" elementType="Argument">
              <stringProp name="Argument.name">ResponseMessage</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Status" elementType="Argument">
              <stringProp name="Argument.name">Status</stringProp>
              <stringProp name="Argument.value">OK</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SamplerData" elementType="Argument">
              <stringProp name="Argument.name">SamplerData</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ResultData" elementType="Argument">
              <stringProp name="Argument.name">ResultData</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
      </JavaConfig>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Functional Test Suite" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1276681023000</longProp>
        <longProp name="ThreadGroup.end_time">1276681023000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller ola" enabled="true"/>
        <hashTree>
          <JMSSampler guiclass="org.apache.jmeter.protocol.jms.control.gui.JMSSamplerGui" testclass="JMSSampler" testname="Fulfill FR 1" enabled="true">
            <stringProp name="JMSSampler.queueconnectionfactory">${Transport/JMS/QueueConnectionFactory}</stringProp>
            <stringProp name="JMSSampler.SendQueue">${Domains/Fulfiller/QueueNames/TechnicalRequest}</stringProp>
            <stringProp name="JMSSampler.ReceiveQueue">${Domains/Fulfiller/QueueNames/TechnicalReply}</stringProp>
            <boolProp name="JMSSampler.isFireAndForget">false</boolProp>
            <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
            <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
            <stringProp name="JMSSampler.timeout">10000</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;OMPRequest xmlns:ns0=&quot;http://xmlns.telco.com/OMP/Request&quot;&gt;
            &lt;ns0:Header xmlns:ns1=&quot;http://xmlns.telco.com/OMP/Header&quot;&gt;
                        &lt;ns1:orderPublicId /&gt;
                        &lt;ns1:frId&gt;1&lt;/ns1:frId&gt;
                        &lt;ns1:timestamp&gt;1264846127859&lt;/ns1:timestamp&gt;
                        &lt;ns1:service&gt;Fulfill&lt;/ns1:service&gt;
                        &lt;ns1:version/&gt;
                        &lt;ns1:reply&gt;true&lt;/ns1:reply&gt;
                        &lt;ns1:timeout&gt;5000&lt;/ns1:timeout&gt;
            &lt;/ns0:Header&gt;
&lt;ns0:Body xmlns:ns1=&quot;http://xmlns.telco.com/OMP/Fulfiller/Fulfill&quot;&gt;
                        &lt;ns1:requestMessage&gt;
                                   &lt;ns1:frId&gt;1&lt;/ns1:frId&gt;
                        &lt;/ns1:requestMessage&gt;
            &lt;/ns0:Body&gt;
&lt;/OMPRequest&gt;</stringProp>
            <stringProp name="JMSSampler.initialContextFactory">${Transport/JMS/InitialContextFactory}</stringProp>
            <stringProp name="JMSSampler.contextProviderUrl">${Transport/JMS/ProviderURL}</stringProp>
            <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMSSampler>
          <hashTree>
            <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="XML Assertion" enabled="true"/>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">/OMPResponse/ResponseCodes/statusCode=0 and /OMPResponse/ResponseCodes/statusMessage=&apos;OK&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SOA Simulation" enabled="true"/>
          <hashTree>
            <SubscriberSampler guiclass="JMSSubscriberGui" testclass="SubscriberSampler" testname="JMS Subscriber" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${Transport/JMS/InitialContextFactory}</stringProp>
              <stringProp name="jms.provider_url">${Transport/JMS/ProviderURL}</stringProp>
              <stringProp name="jms.connection_factory">${Transport/JMS/QueueConnectionFactory}</stringProp>
              <stringProp name="jms.topic">SOA.REQ</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
            </SubscriberSampler>
            <hashTree>
              <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="XML Assertion" enabled="true"/>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/OMPAdapterRequest</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller ola2" enabled="true"/>
        <hashTree>
          <JMSSampler guiclass="org.apache.jmeter.protocol.jms.control.gui.JMSSamplerGui" testclass="JMSSampler" testname="Fulfill FR 1" enabled="true">
            <stringProp name="JMSSampler.queueconnectionfactory">${Transport/JMS/QueueConnectionFactory}</stringProp>
            <stringProp name="JMSSampler.SendQueue">${Domains/Fulfiller/QueueNames/TechnicalRequest}</stringProp>
            <stringProp name="JMSSampler.ReceiveQueue">${Domains/Fulfiller/QueueNames/TechnicalReply}</stringProp>
            <boolProp name="JMSSampler.isFireAndForget">false</boolProp>
            <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
            <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
            <stringProp name="JMSSampler.timeout">10000</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;OMPRequest xmlns:ns0=&quot;http://xmlns.telco.com/OMP/Request&quot;&gt;
            &lt;ns0:Header xmlns:ns1=&quot;http://xmlns.telco.com/OMP/Header&quot;&gt;
                        &lt;ns1:orderPublicId /&gt;
                        &lt;ns1:frId&gt;1&lt;/ns1:frId&gt;
                        &lt;ns1:timestamp&gt;1264846127859&lt;/ns1:timestamp&gt;
                        &lt;ns1:service&gt;Fulfill&lt;/ns1:service&gt;
                        &lt;ns1:version/&gt;
                        &lt;ns1:reply&gt;true&lt;/ns1:reply&gt;
                        &lt;ns1:timeout&gt;5000&lt;/ns1:timeout&gt;
            &lt;/ns0:Header&gt;
&lt;ns0:Body xmlns:ns1=&quot;http://xmlns.telco.com/OMP/Fulfiller/Fulfill&quot;&gt;
                        &lt;ns1:requestMessage&gt;
                                   &lt;ns1:frId&gt;1&lt;/ns1:frId&gt;
                        &lt;/ns1:requestMessage&gt;
            &lt;/ns0:Body&gt;
&lt;/OMPRequest&gt;</stringProp>
            <stringProp name="JMSSampler.initialContextFactory">${Transport/JMS/InitialContextFactory}</stringProp>
            <stringProp name="JMSSampler.contextProviderUrl">${Transport/JMS/ProviderURL}</stringProp>
            <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMSSampler>
          <hashTree>
            <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="XML Assertion" enabled="true"/>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">/OMPResponse/ResponseCodes/statusCode=0 and /OMPResponse/ResponseCodes/statusMessage=&apos;OK&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SOA Simulation" enabled="true"/>
          <hashTree>
            <SubscriberSampler guiclass="JMSSubscriberGui" testclass="SubscriberSampler" testname="JMS Subscriber" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${Transport/JMS/InitialContextFactory}</stringProp>
              <stringProp name="jms.provider_url">${Transport/JMS/ProviderURL}</stringProp>
              <stringProp name="jms.connection_factory">${Transport/JMS/QueueConnectionFactory}</stringProp>
              <stringProp name="jms.topic">SOA.REQ</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
            </SubscriberSampler>
            <hashTree>
              <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="XML Assertion" enabled="true"/>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/OMPAdapterRequest</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
