Mining Source Code for Automatically Discovering Exception Management Anti-Patterns and Code Smell

_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\assertions\BeanShellAssertion.java

CATCH CLAUSE : catch (Exception ex) {
  result.setError(true);
  result.setFailureMessage(ex.toString());
  log.warn(ex.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\assertions\HTMLAssertion.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Unable to instantiate tidy parser",e);
  result.setFailure(true);
  result.setFailureMessage("Unable to instantiate tidy parser");
  return result;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\assertions\HTMLAssertion.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Cannot parse result content",e);
  result.setFailure(true);
  result.setFailureMessage(e.getMessage());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\control\IncludeController.java

CATCH CLAUSE : catch (Exception ex) {
  String msg=ex.getMessage();
  if (msg == null) {
    msg="Unexpected error - see log for details";
  }
  JMeterUtils.reportErrorToUser(msg);
  log.warn("Unexpected error",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\extractor\XPathExtractor.java

CATCH CLAUSE : catch (ParserConfigurationException e) {
  final String errrorMessage="ParserConfigurationException while processing (" + getXPathQuery() + ")";
  log.error(errrorMessage,e);
  throw new JMeterError(errrorMessage,e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\reporters\MailerModel.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem sending mail: " + e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\reporters\MailerModel.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem sending mail",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\ComparisonVisualizer.java

CATCH CLAUSE : catch (Exception err) {
  base.setText(JMeterUtils.getResString("comparison_invalid_node") + err);
  secondary.setText(JMeterUtils.getResString("comparison_invalid_node") + err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\LineGraph.java

CATCH CLAUSE : catch (Exception e) {
  log.error(e.getMessage());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\RenderAsDocument.java

CATCH CLAUSE : catch (Exception e) {
  results.setText(e.toString());
  log.error("Error:",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\RenderAsXPath.java

CATCH CLAUSE : catch (Exception e) {
  return "Exception:" + ExceptionUtils.getStackTrace(e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\RenderAsXPath.java

CATCH CLAUSE : catch (Exception e) {
  logger.error("Exception converting to XML:" + response + ", message:"+ e.getMessage(),e);
  xmlDataField.setText("Exception converting to XML:" + response + ", message:"+ e.getMessage());
  xmlDataField.setCaretPosition(0);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\RequestPanel.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Error in load result render:" + clazz,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\RespTimeGraphVisualizer.java

CATCH CLAUSE : catch (Exception e) {
  log.error(e.getMessage());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\RespTimeGraphVisualizer.java

CATCH CLAUSE : catch (PatternSyntaxException pse) {
  return null;
}

ANTI-PATERN: just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\Spline3.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Error when interpolating : ",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\StatGraphVisualizer.java

CATCH CLAUSE : catch (Exception e) {
  log.error(e.getMessage());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\StatGraphVisualizer.java

CATCH CLAUSE : catch (PatternSyntaxException pse) {
  return null;
}

ANTI-PATERN: just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\components\org\apache\jmeter\visualizers\ViewResultsFullVisualizer.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Error in load result render:" + clazz,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\control\GenericController.java

CATCH CLAUSE : catch (StackOverflowError soe) {
  log.warn("StackOverflowError detected");
  throw new NextIsNullException("StackOverflowError detected",soe);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\control\IfController.java

CATCH CLAUSE : catch (Exception e) {
  logger.error(getName() + ": error while processing " + "["+ cond+ "]\n",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\control\IfController.java

CATCH CLAUSE : catch (NextIsNullException e1) {
  return null;
}

ANTI-PATERN: just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\ClientJMeterEngine.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\ClientJMeterEngine.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("Failed to reset remote engine",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\ClientJMeterEngine.java

CATCH CLAUSE : catch (IllegalStateException ex) {
  log.error("Error in " + methodName + " method "+ ex);
  tidyRMI(log);
  throw ex;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\ClientJMeterEngine.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("Error in " + methodName + " method "+ ex);
  tidyRMI(log);
  throw new JMeterEngineException("Error in " + methodName + " method "+ ex,ex);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\ClientJMeterEngine.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("Error in " + methodName + " method "+ ex);
  tidyRMI(log);
  throw new JMeterEngineException("Error in " + methodName + " method "+ ex,ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\RemoteJMeterEngineImpl.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("rmiregistry needs to be running to start JMeter in server " + "mode\n\t" + ex.toString());
  throw new RemoteException("Cannot start. See server log file.",ex);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\RemoteJMeterEngineImpl.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("rmiregistry needs to be running to start JMeter in server " + "mode\n\t" + ex.toString());
  throw new RemoteException("Cannot start. See server log file.",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\StandardJMeterEngine.java

CATCH CLAUSE : catch (Exception err) {
  stopTest();
  throw new JMeterEngineException(err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\StandardJMeterEngine.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Error encountered during shutdown of " + tl.toString(),e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\util\CompoundVariable.java

CATCH CLAUSE : catch (Exception err) {
  log.error("",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\util\CompoundVariable.java

CATCH CLAUSE : catch (Exception e) {
  log.error("",e);
  throw new InvalidVariableException(e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\util\CompoundVariable.java

CATCH CLAUSE : catch (Exception e) {
  log.error("",e);
  throw new InvalidVariableException(e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\engine\util\FunctionParser.java

CATCH CLAUSE : catch (IOException e) {
  log.error("Error parsing function: " + buffer.toString(),e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\ActionRouter.java

CATCH CLAUSE : catch (Exception err) {
  log.error("performAction(" + actionCommand + ") updateCurrentGui() on"+ e.toString()+ " caused",err);
  JMeterUtils.reportErrorToUser("Problem updating GUI - see log file for details");
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\ActionRouter.java

CATCH CLAUSE : catch (Exception err) {
  log.error("Error processing " + c.toString(),err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\ActionRouter.java

CATCH CLAUSE : catch (Exception err) {
  log.error("Could not add Command",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\ActionRouter.java

CATCH CLAUSE : catch (Exception e) {
  log.error("exception finding action handlers",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\AddParent.java

CATCH CLAUSE : catch (Exception err) {
  log.error("",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\AddToTree.java

CATCH CLAUSE : catch (Exception err) {
  log.error("",err);
  String msg=err.getMessage();
  if (msg == null) {
    msg=err.toString();
  }
  JMeterUtils.reportErrorToUser(msg);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\ChangeParent.java

CATCH CLAUSE : catch (Exception err) {
  Toolkit.getDefaultToolkit().beep();
  log.error("Failed to change parent",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\Clear.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("Can't clear: " + node + " "+ guiComp,ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\Copy.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("Clipboard node read error:" + ex.getMessage(),ex);
  JOptionPane.showMessageDialog(GuiPackage.getInstance().getMainFrame(),JMeterUtils.getResString("clipboard_node_read_error") + ":\n" + ex.getLocalizedMessage(),JMeterUtils.getResString("error_title"),JOptionPane.ERROR_MESSAGE);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\Copy.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("Clipboard node read error:" + ex.getMessage(),ex);
  JOptionPane.showMessageDialog(GuiPackage.getInstance().getMainFrame(),JMeterUtils.getResString("clipboard_node_read_error") + ":\n" + ex.getLocalizedMessage(),JMeterUtils.getResString("error_title"),JOptionPane.ERROR_MESSAGE);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\Load.java

CATCH CLAUSE : catch (Exception ex) {
  reportError("Unexpected error",ex,true);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\RemoteStart.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("Failed to initialise remote engine",ex);
  JMeterUtils.reportErrorToUser(ex.getMessage(),JMeterUtils.getResString("remote_error_init") + ": " + name);
  return;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\Save.java

CATCH CLAUSE : catch (Exception err) {
  log.warn("Error converting subtree " + err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\Save.java

CATCH CLAUSE : catch (Throwable ex) {
  log.error("Error saving tree:",ex);
  if (ex instanceof Error) {
    throw (Error)ex;
  }
  if (ex instanceof RuntimeException) {
    throw (RuntimeException)ex;
  }
  throw new IllegalUserActionException("Couldn't save test plan to file: " + updateFile,ex);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\SearchTreeDialog.java

CATCH CLAUSE : catch (Exception ex) {
  logger.error("Error occured searching for word:" + wordToSearch,ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\SelectTemplatesDialog.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("Error opening URL in browser:" + e.getURL());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\template\TemplateManager.java

CATCH CLAUSE : catch (Exception ex) {
  log.warn("Ignoring template file:'" + f.getAbsolutePath() + "', an error occured parsing the file",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\action\What.java

CATCH CLAUSE : catch (Exception ex) {
  JOptionPane.showMessageDialog(null,ex.toString(),"HeapDump",JOptionPane.ERROR_MESSAGE);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (ClassNotFoundException e) {
  log.error("Could not get GUI for " + node,e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (NoClassDefFoundError e) {
  log.error("Problem retrieving gui for " + objClass,e);
  String msg="Cannot find class: " + e.getMessage();
  JOptionPane.showMessageDialog(null,msg,"Missing jar? See log file.",JOptionPane.ERROR_MESSAGE);
  throw new RuntimeException(e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (ClassNotFoundException e) {
  log.error("Problem retrieving gui for " + objClass,e);
  throw new RuntimeException(e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (InstantiationException e) {
  log.error("Problem retrieving gui for " + objClass,e);
  throw new RuntimeException(e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (IllegalAccessException e) {
  log.error("Problem retrieving gui for " + objClass,e);
  throw new RuntimeException(e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\GuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\Searchable.java

_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\tree\JMeterTreeModel.java

CATCH CLAUSE : catch (Exception e) {
  newNode.setEnabled(true);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\tree\JMeterTreeNode.java

CATCH CLAUSE : catch (IntrospectionException e1) {
  log.error("Can't obtain icon for class " + testElement,e1);
  throw new org.apache.jorphan.util.JMeterError(e1);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\tree\JMeterTreeNode.java

CATCH CLAUSE : catch (ClassNotFoundException e) {
  log.warn("Can't get icon for class " + testElement,e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\tree\JMeterTreeNode.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Can't get popup menu for gui",e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\tree\JMeterTreeNode.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Can't get popup menu for gui",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\tree\JMeterTreeNode.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Can't get popup menu for gui",e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\tree\JMeterTreeNode.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Can't get popup menu for gui",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\tree\JMeterTreeTransferHandler.java

CATCH CLAUSE : catch (Exception e) {
  LOG.error("Drop file failed",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\tree\JMeterTreeTransferHandler.java

CATCH CLAUSE : catch (Exception e) {
  LOG.error("Unsupported Flavor in Transferable",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\util\IconToolbarBean.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Toolbar icon Action names error: " + this.actionName + ", use unknown action.");
  return this.actionName;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\util\JDateField.java

CATCH CLAUSE : catch (Exception e) {
  return new Date();
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\util\JMeterMenuBar.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Exception registering " + MenuCreator.class.getName() + " with implementation:"+ strClassName,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\util\MenuFactory.java

CATCH CLAUSE : catch (Throwable e) {
  log.error("",e);
  if (e instanceof Error) {
    throw (Error)e;
  }
  if (e instanceof RuntimeException) {
    throw (RuntimeException)e;
  }
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\util\MenuFactory.java

CATCH CLAUSE : catch (Throwable e) {
  log.warn("Could not instantiate " + name,e);
  if (e instanceof Error) {
    throw (Error)e;
  }
  if (e instanceof RuntimeException) {
    if (!(e instanceof HeadlessException)) {
      throw (RuntimeException)e;
    }
  }
  continue;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\gui\util\PowerTableModel.java

CATCH CLAUSE : catch (Exception e) {
  try {
    Constructor<?> constr=colClass.getConstructor(new Class[]{String.class});
    return constr.newInstance(new Object[]{""});
  }
 catch (  NoSuchMethodException err) {
  }
catch (  InstantiationException err) {
  }
catch (  IllegalAccessException err) {
  }
catch (  InvocationTargetException err) {
  }
  try {
    Constructor<?> constr=colClass.getConstructor(new Class[]{Integer.TYPE});
    return constr.newInstance(new Object[]{Integer.valueOf(0)});
  }
 catch (  NoSuchMethodException err) {
  }
catch (  InstantiationException err) {
  }
catch (  IllegalAccessException err) {
  }
catch (  InvocationTargetException err) {
  }
  try {
    Constructor<?> constr=colClass.getConstructor(new Class[]{Long.TYPE});
    return constr.newInstance(new Object[]{Long.valueOf(0L)});
  }
 catch (  NoSuchMethodException err) {
  }
catch (  InstantiationException err) {
  }
catch (  IllegalAccessException err) {
  }
catch (  InvocationTargetException err) {
  }
  try {
    Constructor<?> constr=colClass.getConstructor(new Class[]{Boolean.TYPE});
    return constr.newInstance(new Object[]{Boolean.FALSE});
  }
 catch (  NoSuchMethodException err) {
  }
catch (  InstantiationException err) {
  }
catch (  IllegalAccessException err) {
  }
catch (  InvocationTargetException err) {
  }
  try {
    Constructor<?> constr=colClass.getConstructor(new Class[]{Float.TYPE});
    return constr.newInstance(new Object[]{Float.valueOf(0F)});
  }
 catch (  NoSuchMethodException err) {
  }
catch (  InstantiationException err) {
  }
catch (  IllegalAccessException err) {
  }
catch (  InvocationTargetException err) {
  }
  try {
    Constructor<?> constr=colClass.getConstructor(new Class[]{Double.TYPE});
    return constr.newInstance(new Object[]{Double.valueOf(0D)});
  }
 catch (  NoSuchMethodException err) {
  }
catch (  InstantiationException err) {
  }
catch (  IllegalAccessException err) {
  }
catch (  InvocationTargetException err) {
  }
  try {
    Constructor<?> constr=colClass.getConstructor(new Class[]{Character.TYPE});
    return constr.newInstance(new Object[]{Character.valueOf(' ')});
  }
 catch (  NoSuchMethodException err) {
  }
catch (  InstantiationException err) {
  }
catch (  IllegalAccessException err) {
  }
catch (  InvocationTargetException err) {
  }
  try {
    Constructor<?> constr=colClass.getConstructor(new Class[]{Byte.TYPE});
    return constr.newInstance(new Object[]{Byte.valueOf(Byte.MIN_VALUE)});
  }
 catch (  NoSuchMethodException err) {
  }
catch (  InstantiationException err) {
  }
catch (  IllegalAccessException err) {
  }
catch (  InvocationTargetException err) {
  }
  try {
    Constructor<?> constr=colClass.getConstructor(new Class[]{Short.TYPE});
    return constr.newInstance(new Object[]{Short.valueOf(Short.MIN_VALUE)});
  }
 catch (  NoSuchMethodException err) {
  }
catch (  InstantiationException err) {
  }
catch (  IllegalAccessException err) {
  }
catch (  InvocationTargetException err) {
  }
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\JMeter.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Failure loading test file",e);
  JMeterUtils.reportErrorToUser(e.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\JMeter.java

CATCH CLAUSE : catch (Exception ex) {
  System.err.println("Server failed to start: " + ex);
  log.error("Giving up, as server failed with:",ex);
  throw ex;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\JMeter.java

CATCH CLAUSE : catch (Exception ex) {
  System.err.println("Server failed to start: " + ex);
  log.error("Giving up, as server failed with:",ex);
  throw ex;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\JMeter.java

CATCH CLAUSE : catch (Exception e) {
  System.out.println("Error in NonGUIDriver " + e.toString());
  log.error("Error in NonGUIDriver",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\JMeter.java

CATCH CLAUSE : catch (Exception e) {
  log.fatalError("Failure connecting to remote host: " + hostName,e);
  System.err.println("Failure connecting to remote host: " + hostName + " "+ e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\JMeter.java

CATCH CLAUSE : catch (Exception e) {
  System.out.println(e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\reporters\FileReporter.java

CATCH CLAUSE : catch (Exception e) {
  log.error("This line caused a problem: " + line,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\reporters\ResultCollector.java

CATCH CLAUSE : catch (Exception e) {
  log.error("",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\reporters\ResultCollector.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Failed to load " + filename + " using XStream. Error was: "+ e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\reporters\ResultCollector.java

CATCH CLAUSE : catch (Exception err) {
  log.error("Error trying to record a sample",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\reporters\ResultCollector.java

METHOD NAME : recordStats is used to save statistics generated by visualizers
 * @param e
 * @throws Exception
 */
public void recordStats(TestElement e) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\AsynchSampleSender.java

CATCH CLAUSE : catch (Exception ex) {
  log.warn("testEnded(host)" + ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\AsynchSampleSender.java

CATCH CLAUSE : catch (Exception err) {
  log.error("sampleOccurred; failed to queue the sample",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\AsynchSampleSender.java

CATCH CLAUSE : catch (RemoteException err) {
  if (err.getCause() instanceof java.net.ConnectException) {
    throw new JMeterError("Could not return sample",err);
  }
  log.error("Failed to return sample",err);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\AsynchSampleSender.java

CATCH CLAUSE : catch (RemoteException err) {
  if (err.getCause() instanceof java.net.ConnectException) {
    throw new JMeterError("Could not return sample",err);
  }
  log.error("Failed to return sample",err);
}

ANTI-PATTERN: relying on the result of getCause makes the code fragile, use org.apache.commons.lang.exception.ExceptionUtils.getRootCause(Throwable throwable)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\DiskStoreSampleSender.java

CATCH CLAUSE : catch (RemoteException err) {
  if (err.getCause() instanceof java.net.ConnectException) {
    throw new JMeterError("Could not return sample",err);
  }
  log.error("returning sample",err);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\DiskStoreSampleSender.java

CATCH CLAUSE : catch (RemoteException err) {
  if (err.getCause() instanceof java.net.ConnectException) {
    throw new JMeterError("Could not return sample",err);
  }
  log.error("returning sample",err);
}

ANTI-PATTERN: relying on the result of getCause makes the code fragile, use org.apache.commons.lang.exception.ExceptionUtils.getRootCause(Throwable throwable)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\HoldSampleSender.java

CATCH CLAUSE : catch (Throwable ex) {
  log.error("testEnded(host)",ex);
  if (ex instanceof Error) {
    throw (Error)ex;
  }
  if (ex instanceof RuntimeException) {
    throw (RuntimeException)ex;
  }
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\RemoteListenerWrapper.java

CATCH CLAUSE : catch (Throwable ex) {
  log.warn("testStarted()",ex);
  if (ex instanceof Error) {
    throw (Error)ex;
  }
  if (ex instanceof RuntimeException) {
    throw (RuntimeException)ex;
  }
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\RemoteListenerWrapper.java

CATCH CLAUSE : catch (Throwable ex) {
  log.error("testStarted(host)",ex);
  if (ex instanceof Error) {
    throw (Error)ex;
  }
  if (ex instanceof RuntimeException) {
    throw (RuntimeException)ex;
  }
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\RemoteTestListenerWrapper.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\RemoteTestListenerWrapper.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\RemoteTestListenerWrapper.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\RemoteTestListenerWrapper.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\SampleSenderFactory.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Unable to create a sample sender from class:'" + type + "', search for mode property in jmeter.properties for correct configuration options");
  throw new IllegalArgumentException("Unable to create a sample sender from mode or class:'" + type + "', search for mode property in jmeter.properties for correct configuration options, message:"+ e.getMessage(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\SampleSenderFactory.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Unable to create a sample sender from class:'" + type + "', search for mode property in jmeter.properties for correct configuration options");
  throw new IllegalArgumentException("Unable to create a sample sender from mode or class:'" + type + "', search for mode property in jmeter.properties for correct configuration options, message:"+ e.getMessage(),e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\StandardSampleSender.java

CATCH CLAUSE : catch (RemoteException err) {
  if (err.getCause() instanceof java.net.ConnectException) {
    throw new JMeterError("Could not return sample",err);
  }
  log.error("sampleOccurred",err);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\samplers\StandardSampleSender.java

CATCH CLAUSE : catch (RemoteException err) {
  if (err.getCause() instanceof java.net.ConnectException) {
    throw new JMeterError("Could not return sample",err);
  }
  log.error("sampleOccurred",err);
}

ANTI-PATTERN: relying on the result of getCause makes the code fragile, use org.apache.commons.lang.exception.ExceptionUtils.getRootCause(Throwable throwable)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\converters\TestElementConverter.java

CATCH CLAUSE : catch (InstantiationException e) {
  log.error("TestElement not instantiable: " + type,e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\converters\TestElementConverter.java

CATCH CLAUSE : catch (IllegalAccessException e) {
  log.error("TestElement not instantiable: " + type,e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\CSVSaveService.java

CATCH CLAUSE : catch (NumberFormatException e) {
  log.warn(e.toString());
  boolean foundMatch=false;
  for (  String fmt : DATE_FORMAT_STRINGS) {
    SimpleDateFormat dateFormat=new SimpleDateFormat(fmt);
    dateFormat.setLenient(false);
    try {
      Date stamp=dateFormat.parse(text);
      timeStamp=stamp.getTime();
      log.warn("Setting date format to: " + fmt);
      saveConfig.setFormatter(dateFormat);
      foundMatch=true;
      break;
    }
 catch (    ParseException e1) {
      log.info(text + " did not match " + fmt);
    }
  }
  if (!foundMatch) {
    throw new ParseException("No date-time format found matching " + text,-1);
  }
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\CSVSaveService.java

CATCH CLAUSE : catch (NumberFormatException e) {
  log.warn(e.toString());
  boolean foundMatch=false;
  for (  String fmt : DATE_FORMAT_STRINGS) {
    SimpleDateFormat dateFormat=new SimpleDateFormat(fmt);
    dateFormat.setLenient(false);
    try {
      Date stamp=dateFormat.parse(text);
      timeStamp=stamp.getTime();
      log.warn("Setting date format to: " + fmt);
      saveConfig.setFormatter(dateFormat);
      foundMatch=true;
      break;
    }
 catch (    ParseException e1) {
      log.info(text + " did not match " + fmt);
    }
  }
  if (!foundMatch) {
    throw new ParseException("No date-time format found matching " + text,-1);
  }
}

ANTI-PATTERN: Using multi-line log messages causes problems when multiple threads are running in parallel, two log messages may end up spaced-out multiple lines apart in the log file,  group together all log messages, regardless of the level
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\CSVSaveService.java

CATCH CLAUSE : catch (NumberFormatException e) {
  log.warn("Error parsing field '" + field + "' at line "+ lineNumber+ " "+ e);
  throw new JMeterError(e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\CSVSaveService.java

CATCH CLAUSE : catch (ParseException e) {
  log.warn("Error parsing field '" + field + "' at line "+ lineNumber+ " "+ e);
  throw new JMeterError(e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\CSVSaveService.java

CATCH CLAUSE : catch (ArrayIndexOutOfBoundsException e) {
  log.warn("Insufficient columns to parse field '" + field + "' at line "+ lineNumber);
  throw new JMeterError(e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\OldSaveService.java

CATCH CLAUSE : catch (ConfigurationException e) {
  String message="Problem loading using Avalon Configuration tools";
  log.error(message,e);
  throw new IOException(message);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\OldSaveService.java

CATCH CLAUSE : catch (SAXException e) {
  String message="Problem with SAX implementation";
  log.error(message,e);
  throw new IOException(message);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\OldSaveService.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("Problem loading property",ex);
  element.setProperty(children[i].getAttribute("name"),"");
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\OldSaveService.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem loading part of file",e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\OldSaveService.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem loading part of file",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\SaveService.java

METHOD NAME : loadTestResults(InputStream reader,ResultCollectorHelper resultCollectorHelper) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\SaveService.java

METHOD NAME : loadTree(InputStream reader) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\SaveService.java

CATCH CLAUSE : catch (CannotResolveClassException e) {
  if (e.getMessage().startsWith("node")) {
    log.info("Problem loading XML, trying Avalon format");
    reader.reset();
    return OldSaveService.loadSubTree(reader);
  }
  log.warn("Problem loading XML, cannot determine class for element: " + e.getLocalizedMessage());
  return null;
}

ANTI-PATTERN: Using multi-line log messages causes problems when multiple threads are running in parallel, two log messages may end up spaced-out multiple lines apart in the log file,  group together all log messages, regardless of the level
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\SaveService.java

CATCH CLAUSE : catch (CannotResolveClassException e) {
  if (e.getMessage().startsWith("node")) {
    log.info("Problem loading XML, trying Avalon format");
    reader.reset();
    return OldSaveService.loadSubTree(reader);
  }
  log.warn("Problem loading XML, cannot determine class for element: " + e.getLocalizedMessage());
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\SaveService.java

CATCH CLAUSE : catch (NoClassDefFoundError e) {
  log.error("Missing class " + e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\SaveService.java

CATCH CLAUSE : catch (ConversionException e) {
  log.error("Conversion error " + e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\save\ScriptWrapperConverter.java

CATCH CLAUSE : catch (Exception e) {
  throw createConversionException(e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\BeanInfoSupport.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Something bad happened when loading bean info for bean " + beanClass,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\gui\GenericTestBeanCustomizer.java

CATCH CLAUSE : catch (InstantiationException e) {
  log.error("Can't create property editor.",e);
  throw new Error(e.toString());
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\gui\GenericTestBeanCustomizer.java

CATCH CLAUSE : catch (IllegalAccessException e) {
  log.error("Can't create property editor.",e);
  throw new Error(e.toString());
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\gui\TableEditor.java

CATCH CLAUSE : catch (Exception e) {
  return new Functor("is" + propName);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\gui\TableEditor.java

CATCH CLAUSE : catch (Exception err) {
  log.error("The class type given to TableEditor was not instantiable. ",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\gui\TestBeanGUI.java

CATCH CLAUSE : catch (IntrospectionException e) {
  log.error("Can't get beanInfo for " + testBeanClass.getName(),e);
  throw new Error(e.toString());
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\gui\TestBeanGUI.java

CATCH CLAUSE : catch (InstantiationException e) {
  log.error("Could not instantiate customizer of class " + customizerClass,e);
  throw new Error(e.toString());
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\gui\TestBeanGUI.java

CATCH CLAUSE : catch (IllegalAccessException e) {
  log.error("Could not instantiate customizer of class " + customizerClass,e);
  throw new Error(e.toString());
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\gui\TestBeanGUI.java

CATCH CLAUSE : catch (InstantiationException e) {
  log.error("Can't create test element",e);
  throw new Error(e.toString());
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\gui\TestBeanGUI.java

CATCH CLAUSE : catch (IllegalAccessException e) {
  log.error("Can't create test element",e);
  throw new Error(e.toString());
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\TestBeanHelper.java

CATCH CLAUSE : catch (UnsatisfiedLinkError ule) {
  log.error("Couldn't set properties for " + el.getClass().getName());
  throw ule;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testbeans\TestBeanHelper.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Couldn't convert object: " + prop.getObjectValue() + " to "+ type,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testelement\AbstractTestElement.java

_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testelement\property\AbstractProperty.java

CATCH CLAUSE : catch (Exception e) {
  return new StringProperty();
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testelement\property\AbstractProperty.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Cannot create copy of " + coll.getClass().getName(),e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testelement\property\AbstractProperty.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Cannot create copy of " + coll.getClass().getName(),e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testelement\property\AbstractProperty.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Cannot create copy of " + coll.getClass().getName(),e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testelement\property\AbstractProperty.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Cannot create copy of " + coll.getClass().getName(),e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testelement\property\CollectionProperty.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Couldn't clone collection",e);
  return value;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\testelement\property\MapProperty.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Couldn't clone map",e);
  return value;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\threads\JMeterThread.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Test failed!",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\threads\JMeterThread.java

CATCH CLAUSE : catch (Exception e) {
  if (current != null) {
    log.error("Error while processing sampler '" + current.getName() + "' :",e);
  }
 else {
    log.error("",e);
  }
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\threads\JMeterThread.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Caught Exception interrupting sampler: " + e.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\threads\JMeterThread.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Exception processing Assertion ",e);
  assertionResult=new AssertionResult("Assertion failed! See log file.");
  assertionResult.setError(true);
  assertionResult.setFailureMessage(e.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\threads\ListenerNotifier.java

CATCH CLAUSE : catch (RuntimeException e) {
  log.error("Detected problem in Listener: ",e);
  log.info("Continuing to process further listeners");
}

ANTI-PATTERN: Using multi-line log messages causes problems when multiple threads are running in parallel, two log messages may end up spaced-out multiple lines apart in the log file,  group together all log messages, regardless of the level
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\threads\RemoteThreadsListenerImpl.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Exception registering " + RemoteThreadsLifeCycleListener.class.getName() + " with implementation:"+ strClassName,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\threads\ThreadGroup.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Exception occured interrupting ThreadStarter");
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\threads\ThreadGroup.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Exception occured interrupting ThreadStarter");
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\BeanShellClient.java

METHOD NAME : main(String[] args) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\BeanShellInterpreter.java

CATCH CLAUSE : catch (InstantiationException e) {
  log.error("Can't instantiate BeanShell",e);
  throw new ClassNotFoundException("Can't instantiate BeanShell",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\BeanShellInterpreter.java

CATCH CLAUSE : catch (IllegalAccessException e) {
  log.error("Can't instantiate BeanShell",e);
  throw new ClassNotFoundException("Can't instantiate BeanShell",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\BeanShellInterpreter.java

CATCH CLAUSE : catch (IllegalArgumentException e) {
  final String message=errorString + m.getName();
  log.error(message);
  throw new JMeterError(message,e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\BeanShellInterpreter.java

CATCH CLAUSE : catch (IllegalAccessException e) {
  final String message=errorString + m.getName();
  log.error(message);
  throw new JMeterError(message,e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\BeanShellInterpreter.java

CATCH CLAUSE : catch (InvocationTargetException e) {
  String message=errorString + m.getName();
  Throwable cause=e.getCause();
  if (cause != null) {
    message+="\t" + cause.getLocalizedMessage();
  }
  if (shouldLog) {
    log.error(message);
  }
  throw new JMeterException(message,e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\BeanShellServer.java

CATCH CLAUSE : catch (InvocationTargetException e1) {
  log.warn("Could not source " + serverfile);
  Throwable t=e1.getCause();
  if (t != null) {
    log.warn(t.toString());
    if (t instanceof Error) {
      throw (Error)t;
    }
  }
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\BeanShellServer.java

CATCH CLAUSE : catch (InvocationTargetException e1) {
  log.warn("Could not source " + serverfile);
  Throwable t=e1.getCause();
  if (t != null) {
    log.warn(t.toString());
    if (t instanceof Error) {
      throw (Error)t;
    }
  }
}

ANTI-PATTERN: Using multi-line log messages causes problems when multiple threads are running in parallel, two log messages may end up spaced-out multiple lines apart in the log file,  group together all log messages, regardless of the level
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\BeanShellServer.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem starting BeanShell server ",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\BSFTestElement.java

CATCH CLAUSE : catch (IOException e) {
  log.warn(e.getLocalizedMessage());
  throw new BSFException(BSFException.REASON_IO_ERROR,"Problem reading script file",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\BSFTestElement.java

CATCH CLAUSE : catch (IOException e) {
  log.warn(e.getLocalizedMessage());
  throw new BSFException(BSFException.REASON_IO_ERROR,"Problem reading script file",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\Document.java

CATCH CLAUSE : catch (Exception e) {
  response=e.toString();
  log.warn("Error document parsing:",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\HttpSSLProtocolSocketFactory.java

CATCH CLAUSE : catch (IllegalArgumentException e) {
  log.warn("Could not set protocol list: " + protocolList + ".");
  log.warn("Valid protocols are: " + join(sock.getSupportedProtocols()));
}

ANTI-PATTERN: Using multi-line log messages causes problems when multiple threads are running in parallel, two log messages may end up spaced-out multiple lines apart in the log file,  group together all log messages, regardless of the level
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\HttpSSLProtocolSocketFactory.java

CATCH CLAUSE : catch (GeneralSecurityException ex) {
  throw new IOException(ex.getMessage());
}

ANTI-PATTERN: Wrapping the exception and passing getMessage() destroys the stack trace of original exception
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\JMeterTreeNodeTransferable.java

CATCH CLAUSE : catch (Exception e) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\JMeterTreeNodeTransferable.java

CATCH CLAUSE : catch (Exception e) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\JMeterUtils.java

CATCH CLAUSE : catch (NoClassDefFoundError e) {
  log.info("no icon for " + name + " "+ e.getMessage());
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\JMeterUtils.java

CATCH CLAUSE : catch (InternalError e) {
  log.info("no icon for " + name + " "+ e.getMessage());
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\JMeterUtils.java

CATCH CLAUSE : catch (Exception e) {
  reader=(XMLReader)instantiate(parserName,"org.xml.sax.XMLReader");
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\JMeterUtils.java

CATCH CLAUSE : catch (Exception e) {
  ans=defaultVal;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\JMeterUtils.java

CATCH CLAUSE : catch (Exception e) {
  ans=defaultVal;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\JMeterUtils.java

CATCH CLAUSE : catch (Exception e) {
  ans=defaultVal;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\JMeterUtils.java

CATCH CLAUSE : catch (Exception e) {
  ans=defaultVal;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\JMeterUtils.java

CATCH CLAUSE : catch (Exception e) {
  ans=null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\JMeterUtils.java

CATCH CLAUSE : catch (Exception e) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\keystore\JmeterKeyStore.java

METHOD NAME : JmeterKeyStore(String type,int startIndex,int endIndex,String clientCertAliasVarName) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\keystore\JmeterKeyStore.java

METHOD NAME : load(InputStream is,String pword) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\keystore\JmeterKeyStore.java

METHOD NAME : getInstance(String type,int startIndex,int endIndex,String clientCertAliasVarName) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\keystore\JmeterKeyStore.java

METHOD NAME : getInstance(String type) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\SSLManager.java

CATCH CLAUSE : catch (Exception e) {
  this.keyStore=null;
  throw new RuntimeException("Could not create keystore: " + e.getMessage(),e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\SSLManager.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem loading keystore: " + e.getMessage(),e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\SSLManager.java

CATCH CLAUSE : catch (Exception e) {
  this.trustStore=null;
  throw new RuntimeException("Problem creating truststore: " + e.getMessage(),e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\SSLManager.java

CATCH CLAUSE : catch (Exception e) {
  throw new RuntimeException("Can't load TrustStore: " + e.getMessage(),e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\core\org\apache\jmeter\util\XPathUtil.java

CATCH CLAUSE : catch (Exception e) {
  return xml;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\examples\org\apache\jmeter\examples\sampler\ExampleSampler.java

CATCH CLAUSE : catch (Exception ex) {
  log.debug("",ex);
  res.setResponseCode("500");
  res.setResponseMessage(ex.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\BeanShell.java

CATCH CLAUSE : catch (Exception ex) {
  log.warn("Error running BSH script",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\FileRowColContainer.java

CATCH CLAUSE : catch (FileNotFoundException e) {
  fileData.clear();
  log.warn(e.toString());
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\FileRowColContainer.java

CATCH CLAUSE : catch (IOException e) {
  fileData.clear();
  log.warn(e.toString());
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\FileToString.java

CATCH CLAUSE : catch (IOException e) {
  log.warn("Could not read file: " + fileName + " "+ e.getMessage(),e);
  throw new JMeterStopThreadException("End of sequence",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\JavaScript.java

CATCH CLAUSE : catch (RhinoException e) {
  log.error("Error processing Javascript: [" + script + "]\n",e);
  throw new InvalidVariableException("Error processing Javascript: [" + script + "]",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\Jexl2Function.java

CATCH CLAUSE : catch (Exception e) {
  log.error("An error occurred while evaluating the expression \"" + exp + "\"\n",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\JexlFunction.java

CATCH CLAUSE : catch (Exception e) {
  log.error("An error occurred while evaluating the expression \"" + exp + "\"\n",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\RegexFunction.java

CATCH CLAUSE : catch (MalformedCachePatternException e) {
  log.error("Malformed cache pattern:" + values[0],e);
  throw new InvalidVariableException("Malformed cache pattern:" + values[0],e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\StringFromFile.java

CATCH CLAUSE : catch (Exception e) {
  log.error("openFile() error: " + e.toString());
  myBread=null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\UrlDecode.java

CATCH CLAUSE : catch (UnsupportedEncodingException uee) {
  return null;
}

ANTI-PATERN: just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\UrlEncode.java

CATCH CLAUSE : catch (UnsupportedEncodingException uee) {
  return null;
}

ANTI-PATERN: just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\XPathFileContainer.java

CATCH CLAUSE : catch (FileNotFoundException e) {
  log.warn(e.toString());
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\XPathFileContainer.java

CATCH CLAUSE : catch (IOException e) {
  log.warn(e.toString());
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\XPathFileContainer.java

CATCH CLAUSE : catch (ParserConfigurationException e) {
  log.warn(e.toString());
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\XPathFileContainer.java

CATCH CLAUSE : catch (SAXException e) {
  log.warn(e.toString());
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\functions\org\apache\jmeter\functions\XPathFileContainer.java

CATCH CLAUSE : catch (TransformerException e) {
  log.warn(e.toString());
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\commons\jexl\bsf\JexlEngine.java

CATCH CLAUSE : catch (Exception e) {
  throw new BSFException(BSFException.REASON_OTHER_ERROR,e.getMessage(),e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\commons\jexl\bsf\JexlEngine.java

CATCH CLAUSE : catch (Exception e) {
  throw new BSFException(BSFException.REASON_OTHER_ERROR,e.getMessage(),e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\commons\jexl\bsf\JexlEngine.java

CATCH CLAUSE : catch (Exception e) {
  throw new BSFException(BSFException.REASON_OTHER_ERROR,e.getMessage(),e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\collections\Data.java

CATCH CLAUSE : catch (Exception e) {
  return null;
}

ANTI-PATERN: just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\collections\Data.java

CATCH CLAUSE : catch (Exception e) {
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\collections\Data.java

CATCH CLAUSE : catch (Exception e) {
  return null;
}

ANTI-PATERN: just returns null instead of handling or re-throwing the exception, swallows the exception, losing the information forever
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\collections\Data.java

CATCH CLAUSE : catch (Exception e) {
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\collections\HashTree.java

CATCH CLAUSE : catch (RuntimeException e) {
  if (!e.getMessage().equals(FOUND)) {
    throw e;
  }
}

ANTI-PATTERN: Wrapping the exception and passing getMessage() destroys the stack trace of original exception
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\collections\HashTree.java

CATCH CLAUSE : catch (Exception e) {
  converter.reportError(e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\exec\SystemCommand.java

CATCH CLAUSE : catch (Exception ignored) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\logging\LoggingManager.java

CATCH CLAUSE : catch (Exception ignored) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\logging\LoggingManager.java

CATCH CLAUSE : catch (Exception e) {
  System.out.println(propName + "=" + logFile+ " "+ e.toString());
  System.out.println("[" + propName + "-> System.out]");
  isWriterSystemOut=true;
  wt=new PrintWriter(System.out);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\reflect\ClassFinder.java

CATCH CLAUSE : catch (Exception e) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\reflect\Functor.java

CATCH CLAUSE : catch (Exception e) {
  final String message="Trouble functing: " + _class.getName() + "."+ methodName+ "(...) : "+ " invokee: "+ _invokee+ " "+ e.getMessage();
  log.warn(message,e);
  throw new JMeterError(message,e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\reflect\Functor.java

CATCH CLAUSE : catch (Exception e) {
  final String message="Trouble functing: " + _class.getName() + "."+ methodName+ "(...) : "+ " invokee: "+ _invokee+ " "+ e.getMessage();
  log.warn(message,e);
  throw new JMeterError(message,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\reflect\Functor.java

CATCH CLAUSE : catch (Exception e) {
  for (int i=0; i < p_types.length; i++) {
    Class<?> primitive=getPrimitive(p_types[i]);
    if (primitive != null) {
      methodToInvoke=doCreateMethod(p_class,getNewArray(i,primitive,p_types));
      if (methodToInvoke != null) {
        return methodToInvoke;
      }
    }
    Class<?>[] interfaces=p_types[i].getInterfaces();
    for (int j=0; j < interfaces.length; j++) {
      methodToInvoke=doCreateMethod(p_class,getNewArray(i,interfaces[j],p_types));
      if (methodToInvoke != null) {
        return methodToInvoke;
      }
    }
    Class<?> parent=p_types[i].getSuperclass();
    if (parent != null) {
      methodToInvoke=doCreateMethod(p_class,getNewArray(i,parent,p_types));
      if (methodToInvoke != null) {
        return methodToInvoke;
      }
    }
  }
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\reflect\Functor.java

CATCH CLAUSE : catch (Exception e) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\reflect\Functor.java

CATCH CLAUSE : catch (Exception e) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\util\Converter.java

CATCH CLAUSE : catch (Exception e) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\util\Converter.java

CATCH CLAUSE : catch (Exception e) {
  return defaultValue;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\util\HeapDumper.java

METHOD NAME : initialise if necessary.
 * @throws Exception if there is a problem finding the heapDump MXBean
 */
public static void init() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\util\HeapDumper.java

METHOD NAME : dumpHeap() method of the HotSpotDiagnostic MXBean, if available.
 * <p>
 * See
 * <a href="http://download.oracle.com/javase/6/docs/jre/api/management/extension/com/sun/management/HotSpotDiagnosticMXBean.html">
 * HotSpotDiagnosticMXBean
 * </a>
 * @param fileName name of the heap dump file. Must be creatable, i.e. must not exist.
 * @param live if true, dump only the live objects
 * @throws Exception if the MXBean cannot be found, or if there is a problem during invocation
 */
public static void dumpHeap(String fileName,boolean live) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\util\HeapDumper.java

METHOD NAME : dumpHeap(String,boolean)
 * @param fileName name of the heap dump file. Must be creatable, i.e. must not exist.
 * @throws Exception if the MXBean cannot be found, or if there is a problem during invocation
 */
public static void dumpHeap(String fileName) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\util\HeapDumper.java

METHOD NAME : dumpHeap(boolean)
 * @return the name of the dump file that was created
 * @throws Exception if the MXBean cannot be found, or if there is a problem during invocation
 */
public static String dumpHeap() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\util\HeapDumper.java

METHOD NAME : dumpHeap(String,boolean)
 * @param live true id only live objects are to be dumped.
 * @return the name of the dump file that was created
 * @throws Exception if the MXBean cannot be found, or if there is a problem during invocation
 */
public static String dumpHeap(boolean live) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\util\HeapDumper.java

METHOD NAME : dumpHeap(String,boolean)
 * @param basedir File object for the target base directory.
 * @param live true id only live objects are to be dumped.
 * @return the name of the dump file that was created
 * @throws Exception if the MXBean cannot be found, or if there is a problem during invocation
 */
public static String dumpHeap(File basedir,boolean live) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\jorphan\org\apache\jorphan\util\HeapDumper.java

METHOD NAME : dumpHeap0(String fileName,boolean live) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\monitor\components\org\apache\jmeter\visualizers\MonitorHealthVisualizer.java

CATCH CLAUSE : catch (Exception e) {
  log.debug("StatsModel was null",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\control\gui\WebServiceSamplerGui.java

CATCH CLAUSE : catch (Exception exception) {
  if (!silent) {
    JOptionPane.showConfirmDialog(this,JMeterUtils.getResString("wsdl_helper_error") + "\n" + exception,JMeterUtils.getResString("warning"),JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE);
  }
  return ArrayUtils.EMPTY_STRING_ARRAY;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\control\HeaderManager.java

CATCH CLAUSE : catch (Exception e) {
  throw new IOException("Error parsing header line\n\t'" + line + "'\n\t"+ e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\control\HttpMirrorServer.java

CATCH CLAUSE : catch (Exception e) {
  except=e;
  log.warn("HttpMirror Server stopped",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\control\KerberosManager.java

METHOD NAME : call() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\modifier\AnchorModifier.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("Problem adding Argument",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\parser\HtmlParserHTMLParser.java

CATCH CLAUSE : catch (Exception e) {
  throw new HTMLParseException(e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\parser\HtmlParsingUtils.java

CATCH CLAUSE : catch (UnsupportedEncodingException e) {
  log.error("UTF-8 encoding not supported!");
  throw new Error("Should not happen: " + e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\parser\HtmlParsingUtils.java

CATCH CLAUSE : catch (UnsupportedEncodingException e) {
  log.error("getDOM1 : Unsupported encoding exception - " + e);
  log.debug("End : getDOM1");
  throw new RuntimeException("UTF-8 encoding failed",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\parser\HtmlParsingUtils.java

CATCH CLAUSE : catch (UnsupportedEncodingException e) {
  log.error("getDOM1 : Unsupported encoding exception - " + e);
  log.debug("End : getDOM1");
  throw new RuntimeException("UTF-8 encoding failed",e);
}

ANTI-PATTERN: Using multi-line log messages causes problems when multiple threads are running in parallel, two log messages may end up spaced-out multiple lines apart in the log file,  group together all log messages, regardless of the level
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\parser\HtmlParsingUtils.java

CATCH CLAUSE : catch (Exception ex) {
  log.warn("Some bad HTML " + printNode(tempNode),ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\parser\HtmlParsingUtils.java

CATCH CLAUSE : catch (Exception ex) {
  return "";
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\parser\JsoupBasedHtmlParser.java

CATCH CLAUSE : catch (Exception e) {
  throw new HTMLParseException(e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\parser\LagartoBasedHtmlParser.java

CATCH CLAUSE : catch (Exception e) {
  throw new HTMLParseException(e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\AbstractSamplerCreator.java

METHOD NAME : createAndPopulateSampler(org.apache.jmeter.protocol.http.proxy.HttpRequestHdr,java.util.Map,java.util.Map)
 */
@Override public HTTPSamplerBase createAndPopulateSampler(HttpRequestHdr request,Map<String,String> pageEncodings,Map<String,String> formEncodings) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\Daemon.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("HTTP(S) Test Script Recorder stopped",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\DefaultSamplerCreator.java

METHOD NAME : populateSampler(org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase,org.apache.jmeter.protocol.http.proxy.HttpRequestHdr,java.util.Map,java.util.Map)
 */
@Override public final void populateSampler(HTTPSamplerBase sampler,HttpRequestHdr request,Map<String,String> pageEncodings,Map<String,String> formEncodings) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\DefaultSamplerCreator.java

_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\FormCharSetFinder.java

CATCH CLAUSE : catch (Exception e) {
  throw new HTMLParseException(e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\HttpRequestHdr.java

CATCH CLAUSE : catch (URISyntaxException e) {
  log.warn("Url '" + url + "' contains unsafe characters, will escape it, message:"+ e.getMessage());
  try {
    String escapedUrl=ConversionUtils.escapeIllegalURLCharacters(url);
    if (log.isDebugEnabled()) {
      log.debug("Successfully escaped url:'" + url + "' to:'"+ escapedUrl+ "'");
    }
    url=escapedUrl;
  }
 catch (  Exception e1) {
    log.error("Error escaping URL:'" + url + "', message:"+ e1.getMessage());
  }
}

ANTI-PATTERN: Using multi-line log messages causes problems when multiple threads are running in parallel, two log messages may end up spaced-out multiple lines apart in the log file,  group together all log messages, regardless of the level
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\HttpRequestHdr.java

CATCH CLAUSE : catch (Exception e1) {
  log.error("Error escaping URL:'" + url + "', message:"+ e1.getMessage());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\Proxy.java

CATCH CLAUSE : catch (IOException ioe) {
  final String url=param.length > 0 ? " for '" + param[0] + "'" : "";
  log.warn(port + "Problem with SSL certificate" + url+ "? Ensure browser is set to accept the JMeter proxy cert: "+ ioe.getMessage());
  result=generateErrorResult(result,request,ioe,"\n**ensure browser is set to accept the JMeter proxy certificate**");
  throw new JMeterException();
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\Proxy.java

CATCH CLAUSE : catch (Exception e) {
  log.error(port + "Exception when processing sample",e);
  writeErrorToClient(HttpReplyHdr.formInternalError());
  result=generateErrorResult(result,request,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\Proxy.java

CATCH CLAUSE : catch (Exception e) {
  log.error(port + "Failed to close client socket",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\Proxy.java

CATCH CLAUSE : catch (IOException e) {
  log.error(port + "Problem with keystore",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\Proxy.java

CATCH CLAUSE : catch (GeneralSecurityException e) {
  log.error(port + "Problem with keystore",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\Proxy.java

CATCH CLAUSE : catch (IOException e) {
  log.error(port + "Error in SSL socket negotiation: ",e);
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\Proxy.java

CATCH CLAUSE : catch (IOException e) {
  log.error("",e);
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\Proxy.java

CATCH CLAUSE : catch (Exception ex) {
  log.warn(port + "Error while closing socket",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\Proxy.java

CATCH CLAUSE : catch (Exception e) {
  log.warn(port + "Exception while writing error",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (GeneralSecurityException e) {
  log.error("Could not initialise key store",e);
  throw new IOException("Could not create keystore",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (IOException e) {
  log.error("Could not initialise key store",e);
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (IOException e) {
  log.error("Could not create Proxy daemon",e);
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (IllegalUserActionException e) {
  log.error("Program error",e);
  throw new Error(e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (IllegalUserActionException e) {
  log.error("Program error",e);
  throw new Error(e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (IllegalUserActionException e) {
  log.error("Program error",e);
  throw new Error(e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (InvalidVariableException e) {
  log.error("Program error",e);
  throw new Error(e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (IllegalUserActionException e) {
  log.error("Program error",e);
  throw new Error(e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (Exception e) {
  JMeterUtils.reportErrorToUser(e.getMessage());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (Exception e) {
  keyStore=null;
  log.error("Could not open keystore or certificate is not valid " + CERT_PATH_ABS + " "+ e.getMessage());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (IOException e) {
  keyStore=null;
  if (e.getCause() instanceof UnrecoverableKeyException) {
    log.warn("Could not read key store " + e.getMessage() + "; cause: "+ e.getCause().getMessage());
  }
 else {
    log.warn("Could not open/read key store " + e.getMessage());
  }
}

ANTI-PATTERN: relying on the result of getCause makes the code fragile, use org.apache.commons.lang.exception.ExceptionUtils.getRootCause(Throwable throwable)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\ProxyControl.java

CATCH CLAUSE : catch (Exception e) {
  keyStore=null;
  log.warn("Could not open expected file or certificate is not valid " + CERT_PATH_ABS + " "+ e.getMessage());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\SamplerCreator.java

_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\proxy\SamplerCreatorFactory.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Exception registering " + SamplerCreator.class.getName() + " with implementation:"+ strClassName,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\AccessLogSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Sampling failure",e);
  return errorResult(e,new HTTPSampleResult());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\AccessLogSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Couldn't instantiate filter '" + filterClassName + "'",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\AccessLogSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Could not clone cloneable filter",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\AccessLogSamplerBeanInfo.java

CATCH CLAUSE : catch (IOException e) {
  log.warn("couldn't find classes and set up properties",e);
  throw new RuntimeException("Could not find classes with class finder",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\AjpSampler.java

CATCH CLAUSE : catch (Exception e) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HttpClientDefaultParameters.java

_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPHC3Impl.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Error sanitizing URL:" + headerLocation.getValue() + ", message:"+ e.getMessage());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPHC4Impl.java

CATCH CLAUSE : catch (Exception e) {
  res.sampleStart();
  res.sampleEnd();
  errorResult(e,res);
  return res;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPHC4Impl.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Error in redirect URL for " + httpRequest.getRequestLine() + "\n\tCould not sanitize URL: "+ redirectLocation+ "\n\t",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPHC4Impl.java

METHOD NAME : run() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPHC4Impl.java

CATCH CLAUSE : catch (PrivilegedActionException e) {
  log.error("Can't execute httpRequest with subject:" + subject,e);
  throw new RuntimeException("Can't execute httpRequest with subject:" + subject,e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPJavaImpl.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Problem creating the SSLManager: ",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPJavaImpl.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Problem setting the SSLManager for the connection: ",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPJavaImpl.java

CATCH CLAUSE : catch (IOException e) {
  if (!(e.getCause() instanceof FileNotFoundException)) {
    log.error("readResponse: " + e.toString());
    Throwable cause=e.getCause();
    if (cause != null) {
      log.error("Cause: " + cause);
      if (cause instanceof Error) {
        throw (Error)cause;
      }
    }
  }
  InputStream errorStream=conn.getErrorStream();
  if (errorStream == null) {
    log.info("Error Response Code: " + conn.getResponseCode() + ", Server sent no Errorpage");
    res.setResponseHeaders(getResponseHeaders(conn));
    res.latencyEnd();
    return NULL_BA;
  }
  log.info("Error Response Code: " + conn.getResponseCode());
  if (gzipped) {
    in=new BufferedInputStream(new GZIPInputStream(errorStream));
  }
 else {
    in=new BufferedInputStream(errorStream);
  }
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPJavaImpl.java

CATCH CLAUSE : catch (IOException e) {
  if (!(e.getCause() instanceof FileNotFoundException)) {
    log.error("readResponse: " + e.toString());
    Throwable cause=e.getCause();
    if (cause != null) {
      log.error("Cause: " + cause);
      if (cause instanceof Error) {
        throw (Error)cause;
      }
    }
  }
  InputStream errorStream=conn.getErrorStream();
  if (errorStream == null) {
    log.info("Error Response Code: " + conn.getResponseCode() + ", Server sent no Errorpage");
    res.setResponseHeaders(getResponseHeaders(conn));
    res.latencyEnd();
    return NULL_BA;
  }
  log.info("Error Response Code: " + conn.getResponseCode());
  if (gzipped) {
    in=new BufferedInputStream(new GZIPInputStream(errorStream));
  }
 else {
    in=new BufferedInputStream(errorStream);
  }
}

ANTI-PATTERN: relying on the result of getCause makes the code fragile, use org.apache.commons.lang.exception.ExceptionUtils.getRootCause(Throwable throwable)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPJavaImpl.java

CATCH CLAUSE : catch (IOException e) {
  if (!(e.getCause() instanceof FileNotFoundException)) {
    log.error("readResponse: " + e.toString());
    Throwable cause=e.getCause();
    if (cause != null) {
      log.error("Cause: " + cause);
      if (cause instanceof Error) {
        throw (Error)cause;
      }
    }
  }
  InputStream errorStream=conn.getErrorStream();
  if (errorStream == null) {
    log.info("Error Response Code: " + conn.getResponseCode() + ", Server sent no Errorpage");
    res.setResponseHeaders(getResponseHeaders(conn));
    res.latencyEnd();
    return NULL_BA;
  }
  log.info("Error Response Code: " + conn.getResponseCode());
  if (gzipped) {
    in=new BufferedInputStream(new GZIPInputStream(errorStream));
  }
 else {
    in=new BufferedInputStream(errorStream);
  }
}

ANTI-PATTERN: Using multi-line log messages causes problems when multiple threads are running in parallel, two log messages may end up spaced-out multiple lines apart in the log file,  group together all log messages, regardless of the level
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPJavaImpl.java

CATCH CLAUSE : catch (Exception e) {
  log.error("readResponse: " + e.toString());
  Throwable cause=e.getCause();
  if (cause != null) {
    log.error("Cause: " + cause);
    if (cause instanceof Error) {
      throw (Error)cause;
    }
  }
  in=new BufferedInputStream(conn.getErrorStream());
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPJavaImpl.java

CATCH CLAUSE : catch (Exception e) {
  log.error("readResponse: " + e.toString());
  Throwable cause=e.getCause();
  if (cause != null) {
    log.error("Cause: " + cause);
    if (cause instanceof Error) {
      throw (Error)cause;
    }
  }
  in=new BufferedInputStream(conn.getErrorStream());
}

ANTI-PATTERN: Using multi-line log messages causes problems when multiple threads are running in parallel, two log messages may end up spaced-out multiple lines apart in the log file,  group together all log messages, regardless of the level
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPJavaImpl.java

CATCH CLAUSE : catch (Exception e) {
  log.error("readResponse: " + e.toString());
  Throwable cause=e.getCause();
  if (cause != null) {
    log.error("Cause: " + cause);
    if (cause instanceof Error) {
      throw (Error)cause;
    }
  }
  in=new BufferedInputStream(conn.getErrorStream());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPJavaImpl.java

CATCH CLAUSE : catch (BindException e) {
  if (retry >= MAX_CONN_RETRIES) {
    log.error("Can't connect after " + retry + " retries, "+ e);
    throw e;
  }
  log.debug("Bind exception, try again");
  if (conn != null) {
    savedConn=null;
    conn.disconnect();
  }
  setUseKeepAlive(false);
  continue;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPJavaImpl.java

CATCH CLAUSE : catch (BindException e) {
  if (retry >= MAX_CONN_RETRIES) {
    log.error("Can't connect after " + retry + " retries, "+ e);
    throw e;
  }
  log.debug("Bind exception, try again");
  if (conn != null) {
    savedConn=null;
    conn.disconnect();
  }
  setUseKeepAlive(false);
  continue;
}

ANTI-PATTERN: Using multi-line log messages causes problems when multiple threads are running in parallel, two log messages may end up spaced-out multiple lines apart in the log file,  group together all log messages, regardless of the level
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPJavaImpl.java

CATCH CLAUSE : catch (IOException e) {
  log.debug("Connection failed, giving up");
  throw e;
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPSamplerBase.java

CATCH CLAUSE : catch (Exception e) {
  return errorResult(e,new HTTPSampleResult());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\HTTPSamplerProxy.java

CATCH CLAUSE : catch (Exception ex) {
  return errorResult(ex,new HTTPSampleResult());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\sampler\WebServiceSampler.java

CATCH CLAUSE : catch (Exception exception) {
  if ("javax.mail.MessagingException".equals(exception.getClass().getName())) {
    log.warn(exception.toString());
    result.setResponseMessage(exception.getMessage());
  }
 else {
    log.error("Problem processing the SOAP request",exception);
    result.setResponseMessage(exception.toString());
  }
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\util\accesslog\LogFilter.java

CATCH CLAUSE : catch (MalformedCachePatternException exception) {
  log.error("Problem with pattern: " + pattern,exception);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\util\accesslog\SharedTCLogParser.java

CATCH CLAUSE : catch (Exception exception) {
  log.error("Problem creating samples",exception);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\util\accesslog\TCLogParser.java

CATCH CLAUSE : catch (Exception exception) {
  log.error("Problem creating samples",exception);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\util\accesslog\TCLogParser.java

CATCH CLAUSE : catch (Exception e) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\util\ConversionUtils.java

METHOD NAME : escapeIllegalURLCharacters(String url) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\util\HTTPArgument.java

CATCH CLAUSE : catch (UnsupportedEncodingException e) {
  log.error(contentEncoding + " encoding not supported!");
  throw new Error(e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\util\WSDLHelper.java

CATCH CLAUSE : catch (Exception exception) {
  log.warn("Exception calling getBinding:" + exception.getMessage(),exception);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\util\WSDLHelper.java

CATCH CLAUSE : catch (Exception exception) {
  log.warn("Exception calling getBinding:" + exception.getMessage(),exception);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\util\WSDLHelper.java

CATCH CLAUSE : catch (Exception exception) {
  System.out.println("main method catch:");
  exception.printStackTrace();
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\visualizers\RequestViewHTTP.java

CATCH CLAUSE : catch (IllegalArgumentException e) {
  log.warn("Error decoding query, maybe your request parameters should be encoded:" + query,e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\http\org\apache\jmeter\protocol\http\visualizers\RequestViewHTTP.java

CATCH CLAUSE : catch (UnsupportedEncodingException uee) {
  log.warn("Error decoding query, maybe your request parameters should be encoded:" + query,uee);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\java\org\apache\jmeter\protocol\java\config\gui\JavaConfigGui.java

CATCH CLAUSE : catch (Exception e) {
  log.debug("Exception getting interfaces.",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\java\org\apache\jmeter\protocol\java\config\gui\JavaConfigGui.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Error getting argument list for " + className,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\java\org\apache\jmeter\protocol\java\sampler\BeanShellSampler.java

CATCH CLAUSE : catch (Exception ex) {
  log.warn(ex.toString());
  res.setResponseCode("500");
  res.setResponseMessage(ex.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\java\org\apache\jmeter\protocol\java\sampler\BSFSampler.java

CATCH CLAUSE : catch (Exception ex) {
  log.warn("Problem evaluating the script",ex);
  res.setSuccessful(false);
  res.setResponseCode("500");
  res.setResponseMessage(ex.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\java\org\apache\jmeter\protocol\java\sampler\JavaSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.error(whoAmI() + "\tException initialising: " + name,e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\java\org\apache\jmeter\protocol\java\sampler\JavaSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.error(whoAmI() + "\tException creating: " + getClassname(),e);
  client=new ErrorSamplerClient();
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\java\org\apache\jmeter\protocol\java\test\JavaTest.java

CATCH CLAUSE : catch (Exception e) {
  LOG.error("JavaTest: error during sample",e);
  results.setSuccessful(false);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\java\org\apache\jmeter\protocol\java\test\SleepTest.java

CATCH CLAUSE : catch (Exception e) {
  LOG.error("SleepTest: error during sample",e);
  results.setSuccessful(false);
  results.setResponseMessage(e.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jdbc\org\apache\jmeter\protocol\jdbc\sampler\JDBCSampler.java

CATCH CLAUSE : catch (Exception ex) {
  res.setResponseMessage(ex.toString());
  res.setResponseCode("000");
  res.setResponseData(ex.getMessage().getBytes());
  res.setSuccessful(false);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\client\InitialContextFactory.java

CATCH CLAUSE : catch (Exception e) {
  throw new NamingException(e.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\client\InitialContextFactory.java

CATCH CLAUSE : catch (Exception e) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\client\InitialContextFactory.java

CATCH CLAUSE : catch (Exception e) {
  throw new NamingException(e.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\sampler\JMSSampler.java

CATCH CLAUSE : catch (Exception e) {
  LOGGER.warn(e.getLocalizedMessage(),e);
  if (thrown != null) {
    res.setResponseMessage(thrown.toString());
  }
 else {
    res.setResponseMessage(e.getLocalizedMessage());
  }
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\sampler\JMSSampler.java

CATCH CLAUSE : catch (Exception e) {
  thrown=e;
  LOGGER.error(e.getLocalizedMessage(),e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\sampler\PublisherSampler.java

CATCH CLAUSE : catch (Exception e) {
  result.setResponseMessage(e.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\sampler\PublisherSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.error(e.getLocalizedMessage(),e);
  throw new IllegalStateException("Unable to load file",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\sampler\PublisherSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.error(e.getLocalizedMessage(),e);
  throw new IllegalStateException("Unable to load file",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\sampler\PublisherSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.error(e.getLocalizedMessage(),e);
  throw new IllegalStateException("Unable to load object instance from file",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\sampler\PublisherSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.error(e.getLocalizedMessage(),e);
  throw new IllegalStateException("Unable to load object instance from file",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\sampler\PublisherSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.error(e.getLocalizedMessage(),e);
  throw new IllegalStateException("Unable to load object instance from text",e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\jms\org\apache\jmeter\protocol\jms\sampler\PublisherSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.error(e.getLocalizedMessage(),e);
  throw new IllegalStateException("Unable to load object instance from text",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\ldap\org\apache\jmeter\protocol\ldap\sampler\LDAPSampler.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("Ldap client - ",ex);
  res.setResponseCode("500");
  res.setResponseMessage(ex.toString());
  isSuccessful=false;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\mail\org\apache\jmeter\protocol\mail\sampler\MailFileFolder.java

CATCH CLAUSE : catch (FileNotFoundException e) {
  throw new MessagingException("Cannot open folder: " + e.getMessage());
}

ANTI-PATTERN: Wrapping the exception and passing getMessage() destroys the stack trace of original exception
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\mail\org\apache\jmeter\protocol\smtp\sampler\protocol\LocalTrustStoreSSLSocketFactory.java

CATCH CLAUSE : catch (Exception e) {
  throw new RuntimeException("Could not create the SSL context",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\mail\org\apache\jmeter\protocol\smtp\sampler\protocol\SendMailCommand.java

METHOD NAME : execute()
 * @throws Exception
 */
public void execute() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\mail\org\apache\jmeter\protocol\smtp\sampler\protocol\TrustAllSSLSocketFactory.java

CATCH CLAUSE : catch (Exception e) {
  throw new RuntimeException("Could not create the SSL context",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\mail\org\apache\jmeter\protocol\smtp\sampler\SmtpSampler.java

CATCH CLAUSE : catch (Exception ex) {
  log.warn("Error while preparing message",ex);
  res.setResponseCode("500");
  res.setResponseMessage(ex.toString());
  return res;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\mail\org\apache\jmeter\protocol\smtp\sampler\SmtpSampler.java

CATCH CLAUSE : catch (Exception ex) {
  log.warn("",ex);
  res.setResponseCode("500");
  if (null != ex.getMessage() && ex.getMessage().matches("Failed to build truststore")) {
    res.setResponseMessage("Failed to build truststore - did not try to send mail!");
  }
 else {
    res.setResponseMessage("Other Exception: " + ex.toString());
  }
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\mongodb\org\apache\jmeter\protocol\mongodb\sampler\MongoScriptRunner.java

METHOD NAME : evaluate(DB db,String script) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\mongodb\org\apache\jmeter\protocol\mongodb\sampler\MongoScriptSampler.java

CATCH CLAUSE : catch (Exception ex) {
  res.setResponseCode("500");
  res.setSuccessful(false);
  res.setResponseMessage(ex.toString());
  res.setResponseData(ex.getMessage().getBytes());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\tcp\org\apache\jmeter\protocol\tcp\sampler\TCPSampler.java

CATCH CLAUSE : catch (UnknownHostException e) {
  log.warn("Unknown host for " + getLabel(),e);
  cp.put(ERRKEY,e.toString());
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\tcp\org\apache\jmeter\protocol\tcp\sampler\TCPSampler.java

CATCH CLAUSE : catch (IOException e) {
  log.warn("Could not create socket for " + getLabel(),e);
  cp.put(ERRKEY,e.toString());
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\tcp\org\apache\jmeter\protocol\tcp\sampler\TCPSampler.java

CATCH CLAUSE : catch (Exception e) {
  log.error(this + " Exception creating: " + getClassname(),e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\protocol\tcp\org\apache\jmeter\protocol\tcp\sampler\TCPSampler.java

CATCH CLAUSE : catch (Exception ex) {
  log.error("",ex);
  isSuccessful=setupSampleResult(res,"",ex,protocolHandler.getCharset());
  closeSocket(socketKey);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (ClassNotFoundException e) {
  log.error("Could not get GUI for " + node,e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (NoClassDefFoundError e) {
  log.error("Problem retrieving gui for " + objClass,e);
  throw new RuntimeException(e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (ClassNotFoundException e) {
  log.error("Problem retrieving gui for " + objClass,e);
  throw new RuntimeException(e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (InstantiationException e) {
  log.error("Problem retrieving gui for " + objClass,e);
  throw new RuntimeException(e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (IllegalAccessException e) {
  log.error("Problem retrieving gui for " + objClass,e);
  throw new RuntimeException(e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\ReportGuiPackage.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Problem retrieving gui",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\util\ReportMenuFactory.java

CATCH CLAUSE : catch (Exception e) {
  log.error("",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\gui\util\ReportMenuFactory.java

CATCH CLAUSE : catch (Exception e) {
  log.warn("Could not instantiate " + name,e);
  continue;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\JMeterReport.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Failure loading test file",e);
  JMeterUtils.reportErrorToUser(e.toString());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\JMeterReport.java

CATCH CLAUSE : catch (Exception e) {
  e.printStackTrace();
  System.out.println("An error occurred: " + e.getMessage());
  System.exit(-1);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportActionRouter.java

CATCH CLAUSE : catch (Exception err) {
  log.error("",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportActionRouter.java

CATCH CLAUSE : catch (Exception err) {
  log.error("",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportActionRouter.java

CATCH CLAUSE : catch (Exception err) {
  log.error("",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportActionRouter.java

CATCH CLAUSE : catch (Exception err) {
  log.error("",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportActionRouter.java

CATCH CLAUSE : catch (Exception e) {
  log.error("exception finding action handlers",e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportAddParent.java

CATCH CLAUSE : catch (Exception err) {
  log.error("",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportAddToTree.java

CATCH CLAUSE : catch (Exception err) {
  log.error("",err);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportLoad.java

CATCH CLAUSE : catch (Exception ex) {
  String msg=ex.getMessage();
  if (msg == null) {
    msg="Unexpected error - see log for details";
    log.warn("Unexpected error",ex);
  }
  JMeterUtils.reportErrorToUser(msg);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportLoad.java

METHOD NAME : insertLoadedTree(int id,HashTree tree) throws Exception, IllegalUserActionException 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportSave.java

CATCH CLAUSE : catch (Exception err) {
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportSave.java

CATCH CLAUSE : catch (Exception ex) {
  ReportGuiPackage.getInstance().setReportPlanFile(null);
  log.error("",ex);
  throw new IllegalUserActionException("Couldn't save test plan to file: " + updateFile);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\action\ReportSave.java

CATCH CLAUSE : catch (Exception ex) {
  ReportGuiPackage.getInstance().setReportPlanFile(null);
  log.error("",ex);
  throw new IllegalUserActionException("Couldn't save test plan to file: " + updateFile);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\tree\ReportTreeModel.java

CATCH CLAUSE : catch (Exception e) {
  newNode.setEnabled(true);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\tree\ReportTreeNode.java

CATCH CLAUSE : catch (IntrospectionException e1) {
  log.error("Can't obtain icon",e1);
  throw new org.apache.jorphan.util.JMeterError(e1);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\tree\ReportTreeNode.java

CATCH CLAUSE : catch (ClassNotFoundException e) {
  log.warn("Can't get icon for class " + getTestElement(),e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\tree\ReportTreeNode.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Can't get popup menu for gui",e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\tree\ReportTreeNode.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Can't get popup menu for gui",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\tree\ReportTreeNode.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Can't get popup menu for gui",e);
  return null;
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\src\reports\org\apache\jmeter\report\gui\tree\ReportTreeNode.java

CATCH CLAUSE : catch (Exception e) {
  log.error("Can't get popup menu for gui",e);
  return null;
}

ANTI-PATTERN: Log and return null is wrong, instead of returning null, throw the exception, and let the caller deal with it
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\commons\cli\avalon\ClutilTestCase.java

METHOD NAME : testCombinations() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\MD5HexAssertionTest.java

METHOD NAME : testMD5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\ResponseAssertionTest.java

METHOD NAME : testResponseAssertionEquals() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\ResponseAssertionTest.java

METHOD NAME : testResponseAssertionHeaders() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\ResponseAssertionTest.java

METHOD NAME : testResponseAssertionContains() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\ResponseAssertionTest.java

METHOD NAME : testResponseAssertionContainsDollar() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\ResponseAssertionTest.java

METHOD NAME : testResponseAssertionSubstring() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\ResponseAssertionTest.java

METHOD NAME : assertPassed() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\ResponseAssertionTest.java

METHOD NAME : assertFailed() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\ResponseAssertionTest.java

METHOD NAME : testThreadSafety() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\SizeAssertionTest.java

METHOD NAME : testSizeAssertionEquals() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\SizeAssertionTest.java

METHOD NAME : testSizeAssertionNotEquals() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\SizeAssertionTest.java

METHOD NAME : testSizeAssertionGreaterThan() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\SizeAssertionTest.java

METHOD NAME : testSizeAssertionGreaterThanEqual() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\SizeAssertionTest.java

METHOD NAME : testSizeAssertionLessThan() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\SizeAssertionTest.java

METHOD NAME : testSizeAssertionLessThanEqual() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\SizeAssertionTest.java

METHOD NAME : assertPassed() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\SizeAssertionTest.java

METHOD NAME : assertFailed() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XMLSchemaAssertionTest.java

METHOD NAME : setUp() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XMLSchemaAssertionTest.java

METHOD NAME : testAssertionOK() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XMLSchemaAssertionTest.java

METHOD NAME : testAssertionFail() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XMLSchemaAssertionTest.java

METHOD NAME : testAssertionBadXSDFile() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XMLSchemaAssertionTest.java

METHOD NAME : testAssertionNoFile() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XMLSchemaAssertionTest.java

METHOD NAME : testAssertionNoResult() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XMLSchemaAssertionTest.java

METHOD NAME : testAssertionEmptyResult() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XMLSchemaAssertionTest.java

METHOD NAME : testAssertionBlankResult() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XMLSchemaAssertionTest.java

METHOD NAME : testXMLTrailingcontent() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XMLSchemaAssertionTest.java

METHOD NAME : testXMLTrailingwhitespace() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : setUp() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionOK() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionFail() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionPath1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionPath2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionBool1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionBool2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionBool3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionBool4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionNumber() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionNoResult() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionEmptyResult() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertionBlankResult() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testNoTolerance() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testAssertion() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testNegateAssertion() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testValidationFailure() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testValidationSuccess() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testValidationFailureWithDTD() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\assertions\XPathAssertionTest.java

METHOD NAME : testTolerance() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\config\gui\TestArgumentsPanel.java

METHOD NAME : testArgumentCreation() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\config\TestCVSDataSet.java

METHOD NAME : testopen() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\config\TestCVSDataSet.java

METHOD NAME : testutf8() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestGenericController.java

METHOD NAME : testProcessing() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestIfController.java

METHOD NAME : testProcessing() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestIfController.java

METHOD NAME : testProcessingTrue() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestIfController.java

METHOD NAME : testEvaluateAllChildrenWithoutSubController() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestIfController.java

METHOD NAME : testEvaluateAllChildrenWithSubController() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestInterleaveControl.java

METHOD NAME : testProcessing() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestInterleaveControl.java

METHOD NAME : testProcessing6() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestInterleaveControl.java

METHOD NAME : testProcessing2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestInterleaveControl.java

METHOD NAME : testProcessing3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestInterleaveControl.java

METHOD NAME : testProcessing4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestInterleaveControl.java

METHOD NAME : testProcessing5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestLoopController.java

METHOD NAME : testProcessing() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestLoopController.java

METHOD NAME : testLoopZeroTimes() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestLoopController.java

METHOD NAME : testInfiniteLoop() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestLoopController.java

METHOD NAME : testBug54467() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestOnceOnlyController.java

METHOD NAME : testProcessing() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestOnceOnlyController.java

METHOD NAME : testProcessing2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestOnceOnlyController.java

METHOD NAME : testInOuterLoop() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestOnceOnlyController.java

METHOD NAME : testInsideInnerLoop() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestOnceOnlyController.java

METHOD NAME : notestInsideInterleave() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestRunTime.java

METHOD NAME : testProcessing() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : test() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : test0() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : test1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : test2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : test3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : test4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : testX() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : runSimpleTests(String cond,String exp) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : runSimpleTest(String cond,String exp) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : runSimpleTest2(String cond,String exp,String sub1Name) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : testTest2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : runTest2(String cond,String exp[]) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestSwitchController.java

METHOD NAME : testFunction() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestThroughputController.java

METHOD NAME : testByNumber() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestThroughputController.java

METHOD NAME : testByNumberZero() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestThroughputController.java

METHOD NAME : testByPercent33() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestThroughputController.java

METHOD NAME : testByPercentZero() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestThroughputController.java

METHOD NAME : testByPercent100() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testBlankPrevOK() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testLastPrevOK() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testOtherPrevOK() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : runtestPrevOK(String type) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testBlankPrevFailed() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testVariable1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testVariable2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testLASTPrevFailed() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testfalsePrevFailed() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : runTestPrevFailed(String s) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testLastFailedBlank() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testLastFailedLast() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : runTestLastFailed(String s) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testAlwaysFailOK() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\control\TestWhileController.java

METHOD NAME : testAlwaysFailBAD() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\TestTreeCloner.java

METHOD NAME : testCloning() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testFunctionParse1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample6() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample7() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample8() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample9() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample10() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample11() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample12() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample13() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testParseExample14() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testNestedExample1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\PackageTest.java

METHOD NAME : testNestedExample2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\TestValueReplacer.java

METHOD NAME : testReverseReplacement() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\TestValueReplacer.java

METHOD NAME : testReplace() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\TestValueReplacer.java

METHOD NAME : testReplaceStringWithBackslash() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\TestValueReplacer.java

METHOD NAME : testReplaceFunctionWithBackslash() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\engine\util\TestValueReplacer.java

_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testVariableExtraction0() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testVariableExtraction() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testTemplate1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testTemplate2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testTemplate3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testTemplate4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testTemplate5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testTemplate6() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testTemplate7() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testVariableExtraction2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testVariableExtraction6() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testVariableExtraction3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testVariableExtraction5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testVariableExtraction7() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testVariableExtraction8() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testVariableExtraction9() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testNoDefault() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testDefault() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testStaleVariables() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testScope1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestRegexExtractor.java

METHOD NAME : testScope2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestXPathExtractor.java

METHOD NAME : testAttributeExtraction() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestXPathExtractor.java

METHOD NAME : testVariableExtraction() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestXPathExtractor.java

METHOD NAME : testInvalidXpath() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\extractor\TestXPathExtractor.java

METHOD NAME : testInvalidDocument() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : setCSVReadParams(String p1,String p2) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : SFFParams(String p1,String p2,String p3,String p4) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : splitParams(String p1,String p2,String p3) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : BSHFParams(String p1,String p2,String p3) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : suite() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : BSH1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : splitTest1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : SFFTest1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : SFFTest2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : SFFTest3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : SFFTest4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : SFFTest5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : CSVThread1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : CSVThread2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : CSVRun() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : CSVParams() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : CSVSetup() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : CSValias() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : CSVNoFile() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : CSVBlankLine() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathtestNull() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathtestrowNum() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathtestColumns() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathtestDefault() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathEmpty() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathNoFile() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathFile1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathFile2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathSetup1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathSetup2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathThread1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : XPathThread2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : setupXPath(String file,String expr) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : randomTest1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : variableTest1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : evalTest1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : evalTest2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : sumTest() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : checkSum(AbstractFunction func,String value,String[] addends) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\PackageTest.java

METHOD NAME : checkSumNoVar(AbstractFunction func,String value,String[] addends) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestFileRowColContainer.java

METHOD NAME : testNull() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestFileRowColContainer.java

METHOD NAME : testrowNum() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestFileRowColContainer.java

METHOD NAME : testColumns() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestFileRowColContainer.java

METHOD NAME : testColumnsComma() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestFileRowColContainer.java

METHOD NAME : testColumnsTab() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestFileRowColContainer.java

METHOD NAME : testEmptyCols() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestJexlFunction.java

METHOD NAME : testParameterCount() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestJexlFunction.java

METHOD NAME : testSum() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestJexlFunction.java

METHOD NAME : testSumVar() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestJexlFunction.java

METHOD NAME : testReplace1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestJexlFunction.java

METHOD NAME : testReplace2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtraction() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtraction1a() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtraction1b() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtractionFromVariable() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtractionFromVariable2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtractionFromVariable3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtractionFromVariable4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtractionFromVariable5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtractionFromVariable6() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtractionFromVariable7() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtractionFromVariable8() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtractionFromVariable9() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtraction2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtraction5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtraction6() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testComma() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtraction3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testVariableExtraction4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestRegexFunction.java

METHOD NAME : testDefaultValue() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testDefault() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testDefault1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testDefault2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testDefaultNone() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testTooMany() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testYMD() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testYMDnoV() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testHMS() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testYMDHMS() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testUSER1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testUSER2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testFixed() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testMixed() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testDivisor() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\functions\TestTimeFunction.java

METHOD NAME : testDivisorNoMatch() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\gui\action\PackageTest.java

METHOD NAME : testSaveGraphics() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\gui\action\PackageTest.java

METHOD NAME : testReportSaveGraphics() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\gui\action\TestLoad.java

METHOD NAME : checkTestFile() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\gui\action\TestLoad.java

CATCH CLAUSE : catch (Exception e) {
  fail(parent + ": " + testFile.getName()+ " caused "+ e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\gui\action\TestLoad.java

METHOD NAME : assertTree(HashTree tree) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\gui\action\TestLoad.java

METHOD NAME : getTree(File f) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\gui\action\TestSave.java

METHOD NAME : testTreeConversion() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\gui\util\TestMenuFactory.java

METHOD NAME : check(String s,int i) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\gui\util\TestMenuFactory.java

METHOD NAME : testMenu() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\gui\util\TristateCheckBoxTest.java

METHOD NAME : main(String args[]) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\JMeterVersionTest.java

METHOD NAME : setUp() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\JMeterVersionTest.java

METHOD NAME : testEclipse() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\JMeterVersionTest.java

METHOD NAME : testMaven() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : suite() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : createTitleSet() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : createTagSet() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : createFunctionSet() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : checkGuiSet() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : checkFunctionSet() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : suiteGUIComponents() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : suiteFunctions() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : suiteBeanComponents() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : runGUITitle() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : runFunction() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : runFunction2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : GUIComponents1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : GUIComponents2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : suiteSerializableElements() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : runSerialTest() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

CATCH CLAUSE : catch (Exception e) {
  fail("serialization of " + serObj.getClass().getName() + " failed: "+ e);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : suiteTestElements() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : runTestElement() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : readAliases() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

METHOD NAME : getObjects(Class<?> extendsClass) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTest.java

CATCH CLAUSE : catch (Exception e) {
  caught=e;
  if (e instanceof RemoteException) {
    System.out.println("o.a.j.junit.JMeterTest WARN: " + "Error creating " + n + " "+ e.toString());
  }
 else {
    throw new Exception("Error creating " + n,e);
  }
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTestCase.java

METHOD NAME : checkInvalidParameterCounts(AbstractFunction func,int minimum) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\junit\JMeterTestCase.java

METHOD NAME : checkInvalidParameterCounts(AbstractFunction func,int min,int max) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\monitor\model\benchmark\ParseBenchmark.java

CATCH CLAUSE : catch (Exception e) {
  e.printStackTrace();
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\monitor\model\TestObjectFactory.java

METHOD NAME : testStatus() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\monitor\model\TestObjectFactory.java

METHOD NAME : testNoStatus() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\monitor\model\TestObjectFactory.java

METHOD NAME : testFileData() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\monitor\model\TestObjectFactory.java

METHOD NAME : testStringData() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\gui\TestHttpTestSampleGui.java

METHOD NAME : testCloneSampler() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestAuthManager.java

METHOD NAME : testHttp() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestAuthManager.java

METHOD NAME : testHttps() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestAuthManager.java

METHOD NAME : testFile() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : setUp() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : tearDown() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testExpiresJava() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testNoExpiresJava() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testCacheJava() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testExpiresHttpClient() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testCacheHttpClient() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testPrivateCacheHttpClient() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testPrivateCacheNoMaxAgeNoExpireHttpClient() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testPrivateCacheExpireNoMaxAgeHttpClient() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testNoCacheHttpClient() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testNoStoreHttpClient() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testCacheHttpClientBug51932() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testGetClearEachIteration() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testSaveDetailsWithEmptySampleResultGivesNoCacheEntry() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testSaveDetailsURLConnectionWithSampleResultWithResponseCode200GivesCacheEntry() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testSaveDetailsHttpMethodWithSampleResultWithResponseCode200GivesCacheEntry() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testSaveDetailsURLConnectionWithSampleResultWithResponseCode404GivesNoCacheEntry() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testSaveDetailsHttpMethodWithSampleResultWithResponseCode404GivesNoCacheEntry() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testSetHeadersHttpMethodWithSampleResultWithResponseCode200GivesCacheEntry() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testSetHeadersHttpMethodWithSampleResultWithResponseCode404GivesNoCacheEntry() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testSetHeadersHttpURLConnectionWithSampleResultWithResponseCode200GivesCacheEntry() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testSetHeadersHttpURLConnectionWithSampleResultWithResponseCode404GivesNoCacheEntry() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : testClearCache() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : getThreadCache() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : getThreadCacheEntry(String url) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCacheManager.java

METHOD NAME : saveDetailsWithHttpMethodAndSampleResultWithResponseCode(String responseCode) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : setUp() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testRemoveCookie() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testSendCookie() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testSendCookie2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testDomainHandling() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testCrossDomainHandling() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testSimilarHostNames() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testSessionCookie() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testCookieWithEquals() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testOldCookie() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testNewCookie() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testCookies1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testCookies2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testDuplicateCookie() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testDuplicateCookie2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testMissingPath0() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testMissingPath1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testRootPath0() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testRootPath1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testCookieMatching() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testCookieOrdering1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testCookieOrdering2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testCookiePolicy2109() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testCookiePolicyNetscape() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testCookiePolicyIgnore() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestCookieManager.java

METHOD NAME : testLoad() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestHTTPMirrorThread.java

METHOD NAME : setUp() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestHTTPMirrorThread.java

METHOD NAME : tearDown() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestHTTPMirrorThread.java

METHOD NAME : startHttpMirror(int port) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestHTTPMirrorThread.java

METHOD NAME : testGetRequest() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\control\TestHTTPMirrorThread.java

METHOD NAME : testPostRequest() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testProcessingHTMLFile(String HTMLFileName) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testModifySampler() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testModifySamplerWithRelativeLink() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testModifySamplerWithBaseHRef() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testSimpleParse() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testSimpleParse1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testSimpleParse2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testSimpleParse3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testSimpleParse4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testSimpleParse5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testFailSimpleParse1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testFailSimpleParse3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testFailSimpleParse2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testSimpleFormParse() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testBadCharParse() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestAnchorModifier.java

METHOD NAME : testSpecialCharParse() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testNonHTTPSampler() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testGrabSessionId() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testGrabSessionId2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testGrabSessionId3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testGrabSessionIdFromXMLNonPatExtension() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testGrabSessionIdFromXMLPatExtension() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testGrabSessionIdEndedInTab() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testGrabSessionId4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testGrabSessionId5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testGrabSessionIdFromForm() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testGrabSessionIdURLinJSON() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testCache() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\modifier\TestURLRewritingModifier.java

METHOD NAME : testNoCache() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

METHOD NAME : testParserProperty() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

METHOD NAME : testDefaultParser() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

METHOD NAME : testParserDefault() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

METHOD NAME : testParserMissing() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

CATCH CLAUSE : catch (HTMLParseError e) {
  if (e.getCause() instanceof ClassNotFoundException) {
  }
 else {
    throw e;
  }
}

ANTI-PATTERN: relying on the result of getCause makes the code fragile, use org.apache.commons.lang.exception.ExceptionUtils.getRootCause(Throwable throwable)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

METHOD NAME : testNotParser() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

CATCH CLAUSE : catch (HTMLParseError e) {
  if (e.getCause() instanceof ClassCastException) {
    return;
  }
  throw e;
}

ANTI-PATTERN: relying on the result of getCause makes the code fragile, use org.apache.commons.lang.exception.ExceptionUtils.getRootCause(Throwable throwable)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

METHOD NAME : testNotCreatable() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

CATCH CLAUSE : catch (HTMLParseError e) {
  if (e.getCause() instanceof InstantiationException) {
    return;
  }
  throw e;
}

ANTI-PATTERN: relying on the result of getCause makes the code fragile, use org.apache.commons.lang.exception.ExceptionUtils.getRootCause(Throwable throwable)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

METHOD NAME : testNotCreatableStatic() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

CATCH CLAUSE : catch (HTMLParseError e) {
  if (e.getCause() instanceof ClassCastException) {
    return;
  }
  if (e.getCause() instanceof IllegalAccessException) {
    return;
  }
  throw e;
}

ANTI-PATTERN: relying on the result of getCause makes the code fragile, use org.apache.commons.lang.exception.ExceptionUtils.getRootCause(Throwable throwable)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

CATCH CLAUSE : catch (HTMLParseError e) {
  if (e.getCause() instanceof ClassCastException) {
    return;
  }
  if (e.getCause() instanceof IllegalAccessException) {
    return;
  }
  throw e;
}

ANTI-PATTERN: relying on the result of getCause makes the code fragile, use org.apache.commons.lang.exception.ExceptionUtils.getRootCause(Throwable throwable)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

METHOD NAME : testParserSet() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

METHOD NAME : testParserList() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

METHOD NAME : filetest(HTMLParser p,String file,String url,String resultFile,Collection<URLString> c,boolean orderMatters) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHTMLParser.java

METHOD NAME : getFile(String file) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHtmlParsingUtils.java

METHOD NAME : testGetParser() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHtmlParsingUtils.java

METHOD NAME : testGetDom() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHtmlParsingUtils.java

METHOD NAME : testIsArgumentMatched() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHtmlParsingUtils.java

METHOD NAME : testIsAnchorMatched() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHtmlParsingUtils.java

METHOD NAME : testisEqualOrMatches() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\parser\TestHtmlParsingUtils.java

METHOD NAME : testisEqualOrMatchesCaseBlind() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testRepeatedArguments() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testEncodedArguments() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testEncodedArgumentsIPv6() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testEncodedArguments(String url) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testGetRequestEncodings() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testGetRequestEncodingsIPv6() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testGetRequestEncodings(String url) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testPostRequestEncodings() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testPostMultipartFormData() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testParse1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testParse2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : testPostMultipartFileUpload() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestHttpRequestHdr.java

METHOD NAME : getSamplerForRequest(String url,String request,String contentEncoding) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestProxyControl.java

METHOD NAME : testFilter1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestProxyControl.java

METHOD NAME : testFilter2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestProxyControl.java

METHOD NAME : testFilter3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestProxyControl.java

METHOD NAME : testContentTypeNoFilters() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestProxyControl.java

METHOD NAME : testContentTypeInclude() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestProxyControl.java

METHOD NAME : testContentTypeExclude() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\proxy\TestProxyControl.java

METHOD NAME : testContentTypeIncludeAndExclude() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\PackageTest.java

METHOD NAME : testConfiguring() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\PackageTest.java

METHOD NAME : configure(HTTPSamplerBase sampler) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\PostWriterTest.java

METHOD NAME : setUp() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\PostWriterTest.java

METHOD NAME : tearDown() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\PutWriterTest.java

METHOD NAME : testSetHeaders() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testArgumentWithoutEquals() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testMakingUrl() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testRedirect() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testMakingUrl2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testMakingUrl3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testMakingUrl4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testMakingUrl5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testMakingUrl6() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testMakingUrl7() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testMakingUrl8() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testMakingUrl9() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplers.java

METHOD NAME : testMakingUrl10() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : setUp() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : tearDown() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : itemised_testPostRequest_UrlEncoded() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : itemised_testPostRequest_UrlEncoded2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : itemised_testPostRequest_UrlEncoded3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_FormMultipart_0() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_FormMultipart2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_FormMultipart3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_FileUpload() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_FileUpload2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_FileUpload3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_BodyFromParameterValues() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_BodyFromParameterValues2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_BodyFromParameterValues3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testGetRequest() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testGetRequest2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testGetRequest3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : itemised_testGetRequest_Parameters() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : itemised_testGetRequest_Parameters2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : itemised_testGetRequest_Parameters3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_UrlEncoded(int samplerType,String samplerDefaultEncoding,int test) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_FormMultipart(int samplerType,String samplerDefaultEncoding) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_FileUpload(int samplerType,String samplerDefaultEncoding) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testPostRequest_BodyFromParameterValues(int samplerType,String samplerDefaultEncoding) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testGetRequest(int samplerType) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\sampler\TestHTTPSamplersAgainstHttpMirrorServer.java

METHOD NAME : testGetRequest_Parameters(int samplerType,int test) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\accesslog\TestTCLogParser.java

METHOD NAME : testConstruct() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\accesslog\TestTCLogParser.java

METHOD NAME : testcleanURL() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\accesslog\TestTCLogParser.java

METHOD NAME : testcheckURL() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\accesslog\TestTCLogParser.java

METHOD NAME : testHEAD() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPArgument.java

METHOD NAME : testCloning() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPArgument.java

METHOD NAME : testConversion() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPArgument.java

METHOD NAME : testEncoding() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPFileArg.java

METHOD NAME : testConstructors() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPFileArg.java

METHOD NAME : testGettersSetters() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPFileArg.java

METHOD NAME : testToString() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPFileArgs.java

METHOD NAME : testConstructors() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPFileArgs.java

METHOD NAME : testAdding() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPFileArgs.java

METHOD NAME : testSetHTTPFileArgs() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPFileArgs.java

METHOD NAME : testRemoving() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPFileArgs.java

METHOD NAME : testToString() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPUtils.java

METHOD NAME : testgetEncoding() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPUtils.java

METHOD NAME : testMakeRelativeURL() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPUtils.java

METHOD NAME : testMakeRelativeURL2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPUtils.java

METHOD NAME : testsanitizeUrl() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\http\util\TestHTTPUtils.java

METHOD NAME : testSanitizeUrl(String expected,String input) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\ldap\config\gui\PackageTest.java

METHOD NAME : testLDAPArgumentCreation() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\tcp\sampler\BinaryTCPClientImplTest.java

METHOD NAME : testHexStringToByteArray() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\tcp\sampler\BinaryTCPClientImplTest.java

METHOD NAME : testLoopBack() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\tcp\sampler\BinaryTCPClientImplTest.java

METHOD NAME : testRoundTrip() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\tcp\sampler\LengthPrefixedBinaryTCPClientImplTest.java

METHOD NAME : testError() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\tcp\sampler\LengthPrefixedBinaryTCPClientImplTest.java

METHOD NAME : testValid() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\tcp\sampler\TCPClientDecoratorTest.java

METHOD NAME : testIntToByteArray() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\tcp\sampler\TCPClientDecoratorTest.java

METHOD NAME : testByteArrayToInt() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\protocol\tcp\sampler\TCPClientDecoratorTest.java

METHOD NAME : testLoopBack() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\resources\PackageTest.java

METHOD NAME : getRAS(String res) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\resources\PackageTest.java

METHOD NAME : readRF(String res,List<String> l) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\resources\PackageTest.java

METHOD NAME : check(String resname) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\resources\PackageTest.java

METHOD NAME : check(String resname,boolean checkUnexpected) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\resources\PackageTest.java

METHOD NAME : testLang() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\resources\PackageTest.java

METHOD NAME : checkI18n() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testElapsedTrue() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testElapsedFalse() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testPauseFalse() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testPauseTrue() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testPause2True() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testPause2False() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testByteCount() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testSubResultsTrue() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testSubResultsTrueThread() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testSubResultsFalse() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testSubResultsFalseThread() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testSubResultsTruePause() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testSubResultsTruePauseThread() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testSubResultsFalsePause() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testSubResultsFalsePauseThread() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : xtestUntilFail() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testSubResults(boolean nanoTime,long pause) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testSubResults(boolean nanoTime,long nanoThreadSleep,long pause) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleResult.java

METHOD NAME : testEncodingAndType() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleSaveConfiguration.java

METHOD NAME : testClone() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleSaveConfiguration.java

METHOD NAME : testEqualsAndHashCode() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleSaveConfiguration.java

METHOD NAME : testFalse() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleSaveConfiguration.java

METHOD NAME : testTrue() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleSaveConfiguration.java

METHOD NAME : testFalseTrue() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\samplers\TestSampleSaveConfiguration.java

METHOD NAME : testFormatter() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestCSVSaveService.java

METHOD NAME : checkSplitString(String input,char delim,String[] expected) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestCSVSaveService.java

METHOD NAME : testSplitEmpty() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestCSVSaveService.java

METHOD NAME : testSplitUnquoted() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestCSVSaveService.java

METHOD NAME : testSplitQuoted() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestCSVSaveService.java

METHOD NAME : testSplitBadQuote() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestCSVSaveService.java

METHOD NAME : testSplitMultiLine() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestCSVSaveService.java

METHOD NAME : testBlankLine() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestCSVSaveService.java

METHOD NAME : testBlankLineQuoted() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestCSVSaveService.java

METHOD NAME : testEmptyFile() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestCSVSaveService.java

METHOD NAME : testShortFile() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestSaveService.java

METHOD NAME : testPropfile() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestSaveService.java

METHOD NAME : testVersions() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestSaveService.java

METHOD NAME : testLoadAndSave() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestSaveService.java

METHOD NAME : loadAndSave(File testFile,String fileName,boolean checkSize) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestSaveService.java

METHOD NAME : readFile(BufferedReader br) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\save\TestSaveService.java

METHOD NAME : testLoad() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\services\TestFileServer.java

METHOD NAME : testopen() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\services\TestFileServer.java

METHOD NAME : testRelative() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testbeans\gui\PackageTest.java

CATCH CLAUSE : catch (IntrospectionException e) {
  log.error("Can't get beanInfo for " + testBeanClass.getName(),e);
  throw new Error(e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testbeans\gui\PackageTest.java

METHOD NAME : suite() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testbeans\gui\PackageTest.java

CATCH CLAUSE : catch (IntrospectionException e) {
  log.error("Can't get beanInfo for " + testBeanClass.getName(),e);
  throw new Error(e.toString(),e);
}

ANTI-PATTERN: logging and throwing Exception, choose one otherwise it results in multiple log messages (multiple-entries, duplication)
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testbeans\gui\TestComboStringEditor.java

METHOD NAME : testSetGet(ComboStringEditor e,Object value) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testbeans\gui\TestComboStringEditor.java

METHOD NAME : testSetGetAsText(ComboStringEditor e,String text) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testbeans\gui\TestComboStringEditor.java

METHOD NAME : testSetGet() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testbeans\gui\TestComboStringEditor.java

METHOD NAME : testSetGetAsText() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testbeans\gui\TestFieldStringEditor.java

METHOD NAME : testSetGet(ComboStringEditor e,Object value) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testbeans\gui\TestFieldStringEditor.java

METHOD NAME : testSetGetAsText(ComboStringEditor e,String text) throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testbeans\gui\TestFieldStringEditor.java

METHOD NAME : testSetGet() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testbeans\gui\TestFieldStringEditor.java

METHOD NAME : testSetGetAsText() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\PackageTest.java

METHOD NAME : DISABLEDtestBug50799() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\PackageTest.java

METHOD NAME : testRecovery() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\PackageTest.java

METHOD NAME : testArguments() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\property\PackageTest.java

METHOD NAME : testStringProperty() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\property\PackageTest.java

METHOD NAME : testElementProperty() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\property\PackageTest.java

METHOD NAME : testBooleanEquality() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\property\PackageTest.java

METHOD NAME : testDoubleEquality() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\property\PackageTest.java

METHOD NAME : testFloatEquality() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\property\PackageTest.java

METHOD NAME : testIntegerEquality() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\property\PackageTest.java

METHOD NAME : testLongEquality() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\property\PackageTest.java

METHOD NAME : testMapEquality() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\property\PackageTest.java

METHOD NAME : testNullEquality() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\property\PackageTest.java

METHOD NAME : testStringEquality() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\testelement\property\PackageTest.java

METHOD NAME : testAddingProperties() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\threads\TestTestCompiler.java

METHOD NAME : testConfigGathering() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\timers\PackageTest.java

METHOD NAME : testTimer1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\timers\PackageTest.java

METHOD NAME : testTimer2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\timers\PackageTest.java

METHOD NAME : testTimer3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\timers\PackageTest.java

METHOD NAME : testTimerBSH() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\util\PackageTest.java

METHOD NAME : testServer() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\util\PackageTest.java

METHOD NAME : testSub1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\util\PackageTest.java

METHOD NAME : testSub2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\util\PackageTest.java

METHOD NAME : testSub3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\util\PackageTest.java

METHOD NAME : testSub4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\util\TestJMeterUtils.java

METHOD NAME : test1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jmeter\visualizers\GenerateTreeGui.java

CATCH CLAUSE : catch (Exception e) {
  addSimpleController(treeModel,myTarget,jmi.getName() + " " + e.getMessage());
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\collections\PackageTest.java

METHOD NAME : testAdd1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\collections\PackageTest.java

METHOD NAME : testEqualsAndHashCode1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\collections\PackageTest.java

METHOD NAME : testAddObjectAndTree() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\collections\PackageTest.java

METHOD NAME : testEqualsAndHashCode2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\collections\PackageTest.java

METHOD NAME : testSearch() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\exec\TestKeyToolUtils.java

METHOD NAME : testCheckKeytool() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\math\TestStatCalculator.java

METHOD NAME : testPercentagePoint() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\reflect\TestFunctor.java

METHOD NAME : testName() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\reflect\TestFunctor.java

METHOD NAME : testNameTypes() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\reflect\TestFunctor.java

METHOD NAME : testObjectName() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\reflect\TestFunctor.java

METHOD NAME : testClass() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\reflect\TestFunctor.java

METHOD NAME : testBadParameters() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\reflect\TestFunctor.java

METHOD NAME : testIllegalState() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\test\AllTests.java

CATCH CLAUSE : catch (Exception ex) {
  System.out.println("ERROR: (see logfile) could not add test for class " + name + " "+ ExceptionUtils.getStackTrace(ex));
  log.error("error adding test :",ex);
}

ANTI-PATTERN : catching generic Exception, catch the specific exception that can be thrown
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\TestFunctorUsers.java

METHOD NAME : testSummaryReport() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\TestFunctorUsers.java

METHOD NAME : testTableVisualizer() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\TestFunctorUsers.java

METHOD NAME : testStatGraphVisualizer() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\TestFunctorUsers.java

METHOD NAME : testStatVisualizer() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\TestFunctorUsers.java

METHOD NAME : testArgumentsPanel() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\TestFunctorUsers.java

METHOD NAME : testHTTPArgumentsPanel() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\TestFunctorUsers.java

METHOD NAME : testLDAPArgumentsPanel() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\TestXMLBuffer.java

METHOD NAME : test1() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\TestXMLBuffer.java

METHOD NAME : test2() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\TestXMLBuffer.java

METHOD NAME : test3() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\TestXMLBuffer.java

METHOD NAME : test4() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\util\TestJorphanUtils.java

METHOD NAME : testTruncate() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\util\TestJorphanUtils.java

METHOD NAME : testSplit5() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________
_________________________________________________________________________________
FILE NAME : apache-jmeter-2.11\test\src\org\apache\jorphan\util\TestJorphanUtils.java

METHOD NAME : testbaToByte() throws Exception 

ANTI-PATTERN: Throws generic Exception, defeats the purpose of using a checked exception, declare the specific checked exceptions that your method can throw
_________________________________________________________________________________


EXPERIMENTAL RESULTS

NUMBER OF JAVA FILES :1053
NUMBER OF CATCH CLAUSES :1170
NUMBER OF METHOD DECLARATIONS :10386

NUMBER OF THROW PRINTSTACKTRACE ANTIPATTERN:0
NUMBER OF THROW LOG ANTIPATTERN:86
NUMBER OF CATCH ALL ANTIPATTERN:219
NUMBER OF RETURN NULL LOG ANTIPATTERN:33
NUMBER OF RETURN NULL PRINTSTACKTRACE ANTIPATTERN:0
NUMBER OF MULTI-LINE LOG ANTIPATTERN:10
NUMBER OF CATCH-AND-IGNORE ANTIPATTERN:7
NUMBER OF THROWS EXCEPTION ANTIPATTERN:608
NUMBER OF DESTRUCTIVE WRAPPING ANTIPATTERN:3
NUMBER OF RELYING ON GETCAUSE ANTIPATTERN:10
