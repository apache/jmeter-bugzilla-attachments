<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Multi Store" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1375695342000</longProp>
        <longProp name="ThreadGroup.end_time">1375695342000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">280</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">rfc2109</stringProp>
        </CookieManager>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GetSchedule_Controller" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <WebServiceSampler guiclass="WebServiceSamplerGui" testclass="WebServiceSampler" testname="GetSchedule" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ncscwebtst0${__Random(1,3,)}.familydollar.com</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/FDPOSAgentService/FDStoreSKUPriceSyncService.svc</stringProp>
            <stringProp name="WebserviceSampler.wsdl_url">http://scwebtst/FDPOSAgentService/FDStoreSKUPriceSyncService.svc?WSDL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="Soap.Action">http://familydollar.com/services/IFDStoreSKUPriceSyncService/GetSchedule</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://familydollar.com/services/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ser:GetSchedule&gt;
         &lt;!--Optional:--&gt;
         &lt;ser:storeId&gt;${storeId}&lt;/ser:storeId&gt;
      &lt;/ser:GetSchedule&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.timeout"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">true</stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
          </WebServiceSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="492048622">(?s)&lt;a:StartTime&gt;.*&lt;/a:StartTime&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GetSKUPriceListInStream_Controller" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <WebServiceSampler guiclass="WebServiceSamplerGui" testclass="WebServiceSampler" testname="GetSKUPriceListInStream" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ncscwebtst0${__Random(1,3,)}.familydollar.com</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/FDPOSAgentService/FDStoreSKUPriceSyncService.svc</stringProp>
            <stringProp name="WebserviceSampler.wsdl_url">http://scwebtst/FDPOSAgentService/FDStoreSKUPriceSyncService.svc?WSDL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="Soap.Action">http://familydollar.com/services/IFDStoreSKUPriceSyncService/GetSKUPriceListInStream</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://familydollar.com/services/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ser:GetSKUPriceListInStream&gt;
         &lt;!--Optional:--&gt;
         &lt;ser:storeId&gt;${storeId}&lt;/ser:storeId&gt;
      &lt;/ser:GetSKUPriceListInStream&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.timeout"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">true</stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
          </WebServiceSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="278027906">(?s)&lt;a:_origin&gt;.*&lt;/a:_origin&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SendPOSAgentLog_Controller" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <WebServiceSampler guiclass="WebServiceSamplerGui" testclass="WebServiceSampler" testname="SendPOSAgentLog" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ncscwebtst0${__Random(1,3,)}.familydollar.com</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/FDPOSAgentService/FDStoreSKUPriceSyncService.svc</stringProp>
            <stringProp name="WebserviceSampler.wsdl_url">http://scwebtst/FDPOSAgentService/FDStoreSKUPriceSyncService.svc?WSDL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="Soap.Action">http://familydollar.com/services/IFDStoreSKUPriceSyncService/SendPOSAgentLog</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://familydollar.com/services/&quot; xmlns:fds=&quot;http://schemas.datacontract.org/2004/07/FDS.POS.PriceSyncModel&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ser:SendPOSAgentLog&gt;
         &lt;!--Optional:--&gt;
         &lt;ser:pOSAgentLog&gt;
            &lt;!--Zero or more repetitions:--&gt;
            &lt;fds:POSAgentLog&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:AgentExceptionCount&gt;0&lt;/fds:AgentExceptionCount&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:AgentOperationId&gt;0&lt;/fds:AgentOperationId&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:OperationBeginTime&gt;0618&lt;/fds:OperationBeginTime&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:OperationEndTime&gt;0620&lt;/fds:OperationEndTime&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:ProcessInd&gt;0&lt;/fds:ProcessInd&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:StoreId&gt;${storeId}&lt;/fds:StoreId&gt;
            &lt;/fds:POSAgentLog&gt;
         &lt;/ser:pOSAgentLog&gt;
      &lt;/ser:SendPOSAgentLog&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.timeout"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">true</stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
          </WebServiceSampler>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">Envelope/Body/SendPOSAgentLogResponse</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SendExceptions_Controller" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <BSFPreProcessor guiclass="TestBeanGUI" testclass="BSFPreProcessor" testname="BSF PreProcessor" enabled="true">
            <stringProp name="scriptLanguage">beanshell</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">var reqFrag = &quot;&quot;;
var rowsToRead = 10000;
System.out.println(rowsToRead);
for (var i = 0;i&lt;rowsToRead;i++) {
reqFrag+=&quot;&lt;fds:PriceDiscrepancyException&gt;&quot;+&quot;&lt;fds:RegisterPrice&gt;0.0&lt;/fds:RegisterPrice&gt;&quot;+&quot;&lt;fds:SKU&gt;88&lt;/fds:SKU&gt;&lt;fds:ServerPrice&gt;0.0&lt;/fds:ServerPrice&gt;&lt;/fds:PriceDiscrepancyException&gt;&quot;;

}
vars.putObject(&quot;result&quot;,reqFrag);</stringProp>
          </BSFPreProcessor>
          <hashTree/>
          <WebServiceSampler guiclass="WebServiceSamplerGui" testclass="WebServiceSampler" testname="SendExceptions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ncscwebtst0${__Random(1,3,)}.familydollar.com</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/FDPOSAgentService/FDStoreSKUPriceSyncService.svc</stringProp>
            <stringProp name="WebserviceSampler.wsdl_url">http://scwebtst/FDPOSAgentService/FDStoreSKUPriceSyncService.svc?WSDL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="Soap.Action">http://familydollar.com/services/IFDStoreSKUPriceSyncService/SendExceptions</stringProp>
            <stringProp name="HTTPSamper.xml_data">
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://familydollar.com/services/&quot; xmlns:fds=&quot;http://schemas.datacontract.org/2004/07/FDS.POS.PriceSyncModel&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ser:SendExceptions&gt;
         &lt;!--Optional:--&gt;
         &lt;ser:priceDiscrepancyExceptions&gt;
        	${result}    
	
         &lt;/ser:priceDiscrepancyExceptions&gt;
         &lt;!--Optional:--&gt;
         &lt;ser:operationDetail&gt;
            &lt;!--Optional:--&gt;
            &lt;fds:AgentBeginTime&gt;0618&lt;/fds:AgentBeginTime&gt;
            &lt;!--Optional:--&gt;
            &lt;fds:AgentOPerationIndicator&gt;?&lt;/fds:AgentOPerationIndicator&gt;
            &lt;!--Optional:--&gt;
            &lt;fds:AgentStopTime&gt;0620&lt;/fds:AgentStopTime&gt;
            &lt;!--Optional:--&gt;
            &lt;fds:StoreId&gt;${storeId}&lt;/fds:StoreId&gt;
         &lt;/ser:operationDetail&gt;
      &lt;/ser:SendExceptions&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.timeout"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">true</stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
          </WebServiceSampler>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">Envelope/Body/SendExceptionsResponse</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SendSATExceptions_Controller" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <WebServiceSampler guiclass="WebServiceSamplerGui" testclass="WebServiceSampler" testname="SendSATExceptions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ncscwebtst0${__Random(1,3,)}.familydollar.com</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/FDPOSAgentService/FDStoreSKUPriceSyncService.svc</stringProp>
            <stringProp name="WebserviceSampler.wsdl_url">http://scwebtst/FDPOSAgentService/FDStoreSKUPriceSyncService.svc?WSDL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="Soap.Action">http://familydollar.com/services/IFDStoreSKUPriceSyncService/SendSATExceptions</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://familydollar.com/services/&quot; xmlns:fds=&quot;http://schemas.datacontract.org/2004/07/FDS.POS.PriceSyncModel&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ser:SendSATExceptions&gt;
         &lt;!--Optional:--&gt;
         &lt;ser:satExceptions&gt;
            &lt;!--Zero or more repetitions:--&gt;
            &lt;fds:SATFileException&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:ApplyRecordAcount&gt;0&lt;/fds:ApplyRecordAcount&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:Comments&gt;?&lt;/fds:Comments&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:ExceptionTime&gt;0618&lt;/fds:ExceptionTime&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:SATFileType&gt;?&lt;/fds:SATFileType&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:SATRecordAcount&gt;0&lt;/fds:SATRecordAcount&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:UniqueSATRecordCount&gt;0&lt;/fds:UniqueSATRecordCount&gt;
            &lt;/fds:SATFileException&gt;
         &lt;/ser:satExceptions&gt;
         &lt;!--Optional:--&gt;
         &lt;ser:operationDetail&gt;
            &lt;!--Optional:--&gt;
            &lt;fds:AgentBeginTime&gt;0610&lt;/fds:AgentBeginTime&gt;
            &lt;!--Optional:--&gt;
            &lt;fds:AgentOPerationIndicator&gt;?&lt;/fds:AgentOPerationIndicator&gt;
            &lt;!--Optional:--&gt;
            &lt;fds:AgentStopTime&gt;0612&lt;/fds:AgentStopTime&gt;
            &lt;!--Optional:--&gt;
            &lt;fds:StoreId&gt;${storeId}&lt;/fds:StoreId&gt;
         &lt;/ser:operationDetail&gt;
      &lt;/ser:SendSATExceptions&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.timeout"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">true</stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
          </WebServiceSampler>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">Envelope/Body/SendSATExceptionsResponse</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SendPOSAgentError_Controller" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <WebServiceSampler guiclass="WebServiceSamplerGui" testclass="WebServiceSampler" testname="SendPOSAgentError" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ncscwebtst0${__Random(1,3,)}.familydollar.com</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/FDPOSAgentService/FDStoreSKUPriceSyncService.svc</stringProp>
            <stringProp name="WebserviceSampler.wsdl_url">http://scwebtst/FDPOSAgentService/FDStoreSKUPriceSyncService.svc?WSDL</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="Soap.Action">http://familydollar.com/services/IFDStoreSKUPriceSyncService/SendPOSAgentError</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://familydollar.com/services/&quot; xmlns:fds=&quot;http://schemas.datacontract.org/2004/07/FDS.POS.PriceSyncModel&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;ser:SendPOSAgentError&gt;
         &lt;!--Optional:--&gt;
         &lt;ser:pOSAgentError&gt;
            &lt;!--Zero or more repetitions:--&gt;
            &lt;fds:POSAgentError&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:AgentOperId&gt;1&lt;/fds:AgentOperId&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:Detail&gt;?&lt;/fds:Detail&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:ErrorDate&gt;0602&lt;/fds:ErrorDate&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:Level&gt;?&lt;/fds:Level&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:Message&gt;?&lt;/fds:Message&gt;
               &lt;!--Optional:--&gt;
               &lt;fds:StoreId&gt;${storeId}&lt;/fds:StoreId&gt;
            &lt;/fds:POSAgentError&gt;
         &lt;/ser:pOSAgentError&gt;
      &lt;/ser:SendPOSAgentError&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.timeout"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">true</stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
          </WebServiceSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="78254">OK
</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">Envelope/Body/SendPOSAgentErrorResponse</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
            <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="StoreId" enabled="true">
          <stringProp name="filename">C:\Documents and Settings\CONUHALD\Desktop\Family Dollar\StoreId.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">storeId</stringProp>
          <stringProp name="delimiter"></stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">All threads</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">C:\Documents and Settings\CONUHALD\Desktop\Family Dollar\Scenarios\Multi Store\Results\Summary_Sc5.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
