diff  C:/perso_max/workspace/JMeter_2.12/src/components/org/apache/jmeter/visualizers/SummaryReport.java C:/perso_max/workspace/JMeter/src/components/org/apache/jmeter/visualizers/SummaryReport.java
80d79
<             "aggregate_report_instant_rate",//$NON-NLS-1$
122d120
<             new RateRenderer("#.0"),      // Instant Throughput //$NON-NLS-1$
138d135
<             new DecimalFormat("#.0"),      // Instant Throughput //$NON-NLS-1$
156d152
<                     new Functor("getInstantRate"),               //$NON-NLS-1$
160c156
<                 new Functor[] { null, null, null, null, null, null, null, null , null, null, null },
---
>                 new Functor[] { null, null, null, null, null, null, null, null , null, null },
162c158
<                               String.class, String.class, String.class, String.class, String.class, String.class });
---
>                               String.class, String.class, String.class, String.class, String.class });
diff  C:/perso_max/workspace/JMeter_2.12/src/core/org/apache/jmeter/util/Calculator.java C:/perso_max/workspace/JMeter/src/core/org/apache/jmeter/util/Calculator.java
43,54d42
<     
<     private int instant_count = 0;
<     
<     private long startTime = 0;
<     
<     private long startInstantTime = 0;
<     
<     private long elapsedTime = 0;
<     
<     private long elapsedInstantTime = 0;
<     
< 	double instant_rate = 0.0;
82d69
<         instant_count = 0;
106d92
<         instant_count += sampleCount;
129a116,117
>     private long startTime = 0;
>     private long elapsedTime = 0;
132d119
<      *  
141,143d127
<         if (startInstantTime == 0){  // not yet intialised
<         	startInstantTime = res.getStartTime();
<         }
150,151d133
<         elapsedInstantTime = res.getEndTime()-startInstantTime;
<         
205,225d186
< 
<     /**
<      * Returns the instant throughput associated to this sampler in requests per second.
<      * In take the number of sample during the last 5 second. 
<      *
<      * @return throughput associated to this sampler in requests per second
<      */
<     public double getInstantRate() {
<     	      
<         if (elapsedInstantTime > 5000) {
<         	//System.out.println("elapsedInstantTime : " + elapsedInstantTime);
<         	//System.out.println("rate  : " + rate);
<         	instant_rate = ((double) instant_count / (double) elapsedInstantTime ) * 1000;
<         	instant_count = 0;
<         	elapsedInstantTime = 0 ;
<         	startInstantTime = 0;
<         }
< 
<         return instant_rate;
<     }
<     
235c196
<         if (elapsedTime <= 0) {
---
>         if (elapsedTime == 0) {
