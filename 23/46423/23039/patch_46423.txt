Index: /Workspaces-JMeter/Jmeter/src/protocol/http/org/apache/jmeter/protocol/http/control/HeaderManager.java
===================================================================
--- /Workspaces-JMeter/Jmeter/src/protocol/http/org/apache/jmeter/protocol/http/control/HeaderManager.java	(revision 728228)
+++ /Workspaces-JMeter/Jmeter/src/protocol/http/org/apache/jmeter/protocol/http/control/HeaderManager.java	(working copy)
@@ -235,7 +235,7 @@
         }
     }
 
-    public String getClassLabel() {
+    public static String getClassLabel() {
         return JMeterUtils.getResString("header_manager_title");// $NON-NLS-1$
     }
 
Index: /Workspaces-JMeter/Jmeter/src/protocol/http/org/apache/jmeter/protocol/http/proxy/HttpRequestHdr.java
===================================================================
--- /Workspaces-JMeter/Jmeter/src/protocol/http/org/apache/jmeter/protocol/http/proxy/HttpRequestHdr.java	(revision 728228)
+++ /Workspaces-JMeter/Jmeter/src/protocol/http/org/apache/jmeter/protocol/http/proxy/HttpRequestHdr.java	(working copy)
@@ -244,7 +244,7 @@
                 manager.add((Header) headers.get(key));
             }
         }
-        manager.setName("Browser-derived headers");
+        manager.setName(HeaderManager.getClassLabel());
         manager.setProperty(TestElement.TEST_CLASS, HeaderManager.class.getName());
         manager.setProperty(TestElement.GUI_CLASS, HeaderPanel.class.getName());
         return manager;
Index: /Workspaces-JMeter/Jmeter/src/protocol/http/org/apache/jmeter/protocol/http/proxy/ProxyControl.java
===================================================================
--- /Workspaces-JMeter/Jmeter/src/protocol/http/org/apache/jmeter/protocol/http/proxy/ProxyControl.java	(revision 728228)
+++ /Workspaces-JMeter/Jmeter/src/protocol/http/org/apache/jmeter/protocol/http/proxy/ProxyControl.java	(working copy)
@@ -514,7 +514,7 @@
     private void addAssertion(JMeterTreeModel model, JMeterTreeNode node) throws IllegalUserActionException {
         ResponseAssertion ra = new ResponseAssertion();
         ra.setProperty(TestElement.GUI_CLASS, ASSERTION_GUI);
-        ra.setName("Check response");
+        ra.setName(JMeterUtils.getResString(new AssertionGui().getLabelResource()));
         ra.setTestFieldResponseData();
         model.addComponent(ra, node);
     }

