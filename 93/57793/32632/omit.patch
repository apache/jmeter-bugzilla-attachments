Index: test/src/org/apache/jmeter/engine/DistributedRunnerTest.java
===================================================================
--- test/src/org/apache/jmeter/engine/DistributedRunnerTest.java	(Revision 1671291)
+++ test/src/org/apache/jmeter/engine/DistributedRunnerTest.java	(Arbeitskopie)
@@ -18,8 +18,10 @@
 
 package org.apache.jmeter.engine;
 
+import java.io.ByteArrayOutputStream;
 import java.io.File;
 import java.io.IOException;
+import java.io.PrintStream;
 import java.net.MalformedURLException;
 import java.rmi.NotBoundException;
 import java.rmi.RemoteException;
@@ -70,11 +72,7 @@
         JMeterUtils.setProperty(DistributedRunner.CONTINUE_ON_FAIL, "true");
         DistributedRunnerEmul obj = new DistributedRunnerEmul();
         List<String> hosts = Arrays.asList("test1", "test2");
-        try {
-            obj.init(hosts, new HashTree());
-            fail();
-        } catch (RuntimeException ignored) {
-        }
+        initRunner(obj, hosts);
         obj.start();
         obj.shutdown(hosts);
         obj.stop(hosts);
@@ -81,6 +79,18 @@
         obj.exit(hosts);
     }
 
+    private void initRunner(DistributedRunnerEmul runner, List<String> hosts) {
+        PrintStream origSystemOut = System.out;
+        ByteArrayOutputStream catchingOut = new ByteArrayOutputStream();
+        System.setOut(new PrintStream(catchingOut));
+        try {
+            runner.init(hosts, new HashTree());
+            fail();
+        } catch (RuntimeException ignored) {
+        }
+        System.setOut(origSystemOut);
+    }
+
     public void testFailure2() throws Exception {
         createJmeterEnv();
         JMeterUtils.setProperty(DistributedRunner.RETRIES_NUMBER, "1");
@@ -88,11 +98,7 @@
         JMeterUtils.setProperty(DistributedRunner.CONTINUE_ON_FAIL, "false");
         DistributedRunnerEmul obj = new DistributedRunnerEmul();
         List<String> hosts = Arrays.asList("test1", "test2");
-        try {
-            obj.init(hosts, new HashTree());
-            fail();
-        } catch (RuntimeException ignored) {
-        }
+        initRunner(obj, hosts);
     }
 
     public void testFailure3() throws Exception {
@@ -102,11 +108,7 @@
         JMeterUtils.setProperty(DistributedRunner.CONTINUE_ON_FAIL, "true");
         DistributedRunnerEmul obj = new DistributedRunnerEmul();
         List<String> hosts = Arrays.asList("test1", "test2");
-        try {
-            obj.init(hosts, new HashTree());
-            fail();
-        } catch (RuntimeException ignored) {
-        }
+        initRunner(obj, hosts);
         obj.start(hosts);
         obj.shutdown(hosts);
         obj.stop(hosts);
