From cd7bdbac37762cb66c36f73c29e7ceb3ae47ef14 Mon Sep 17 00:00:00 2001
From: Graham <graham@ham1.co.uk>
Date: Thu, 3 Sep 2015 00:14:09 +0100
Subject: [PATCH] Spelling

---
 bin/jmeter                                                            | 4 ++--
 bin/jmeter.sh                                                         | 2 +-
 src/components/org/apache/jmeter/assertions/DurationAssertion.java    | 4 ++--
 src/components/org/apache/jmeter/assertions/HTMLAssertion.java        | 2 +-
 src/components/org/apache/jmeter/assertions/MD5HexAssertion.java      | 2 +-
 src/components/org/apache/jmeter/assertions/SMIMEAssertion.java       | 4 ++--
 .../org/apache/jmeter/assertions/SMIMEAssertionTestElement.java       | 4 ++--
 src/components/org/apache/jmeter/assertions/SizeAssertion.java        | 4 ++--
 src/components/org/apache/jmeter/assertions/XMLAssertion.java         | 2 +-
 src/components/org/apache/jmeter/assertions/XPathAssertion.java       | 2 +-
 src/components/org/apache/jmeter/assertions/gui/HTMLAssertionGui.java | 4 ++--
 test/src/org/apache/commons/cli/avalon/ClutilTestCase.java            | 4 ++--
 test/src/org/apache/jmeter/assertions/SizeAssertionTest.java          | 2 +-
 test/src/org/apache/jmeter/assertions/XMLSchemaAssertionTest.java     | 4 ++--
 14 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/bin/jmeter b/bin/jmeter
index f5eace4..84db266 100755
--- a/bin/jmeter
+++ b/bin/jmeter
@@ -27,7 +27,7 @@
 # Minimal version to run JMeter
 MINIMAL_VERSION=1.7.0
 
-# Check if Java is present and the minimal version requierement
+# Check if Java is present and the minimal version requirement
 _java=`type java | awk '{ print $ NF }'`
 CURRENT_VERSION=`"$_java" -version 2>&1 | awk -F'"' '/version/ {print $2}'`
 minimal_version=`echo $MINIMAL_VERSION | awk -F'.' '{ print $2 }'`
@@ -85,7 +85,7 @@ PRGDIR=`dirname "$PRG"`
 #   Life length: for the life of the JVM.
 
 # This is the base heap size -- you may increase or decrease it to fit your
-# system's memory availablity:
+# system's memory availability:
 HEAP="-Xms512m -Xmx512m"
 
 # There's an awful lot of per-sample objects allocated during test run, so we
diff --git a/bin/jmeter.sh b/bin/jmeter.sh
index d476e76..37140cb 100755
--- a/bin/jmeter.sh
+++ b/bin/jmeter.sh
@@ -30,7 +30,7 @@
 # Minimal version to run JMeter
 MINIMAL_VERSION=1.7.0
 
-# Check if Java is present and the minimal version requierement
+# Check if Java is present and the minimal version requirement
 _java=`type java | awk '{ print $ NF }'`
 CURRENT_VERSION=`"$_java" -version 2>&1 | awk -F'"' '/version/ {print $2}'`
 minimal_version=`echo $MINIMAL_VERSION | awk -F'.' '{ print $2 }'`
diff --git a/src/components/org/apache/jmeter/assertions/DurationAssertion.java b/src/components/org/apache/jmeter/assertions/DurationAssertion.java
index 1bcd83e..b01d4f9 100644
--- a/src/components/org/apache/jmeter/assertions/DurationAssertion.java
+++ b/src/components/org/apache/jmeter/assertions/DurationAssertion.java
@@ -33,11 +33,11 @@ import org.apache.jmeter.util.JMeterUtils;
 public class DurationAssertion extends AbstractScopedAssertion implements Serializable, Assertion {
     private static final long serialVersionUID = 240L;
 
-    /** Key for storing assertion-informations in the jmx-file. */
+    /** Key for storing assertion-information in the jmx-file. */
     public static final String DURATION_KEY = "DurationAssertion.duration"; // $NON-NLS-1$
 
     /**
-     * Returns the result of the Assertion. Here it checks wether the Sample
+     * Returns the result of the Assertion. Here it checks whether the Sample
      * took to long to be considered successful. If so an AssertionResult
      * containing a FailureMessage will be returned. Otherwise the returned
      * AssertionResult will reflect the success of the Sample.
diff --git a/src/components/org/apache/jmeter/assertions/HTMLAssertion.java b/src/components/org/apache/jmeter/assertions/HTMLAssertion.java
index 8d79281..b28ab07 100644
--- a/src/components/org/apache/jmeter/assertions/HTMLAssertion.java
+++ b/src/components/org/apache/jmeter/assertions/HTMLAssertion.java
@@ -221,7 +221,7 @@ public class HTMLAssertion extends AbstractTestElement implements Serializable,
     /**
      * Gets the doctype
      * 
-     * @return the documemt type
+     * @return the document type
      */
     public String getDoctype() {
         return getPropertyAsString(DOCTYPE_KEY);
diff --git a/src/components/org/apache/jmeter/assertions/MD5HexAssertion.java b/src/components/org/apache/jmeter/assertions/MD5HexAssertion.java
index c9cceb5..ae4441f 100644
--- a/src/components/org/apache/jmeter/assertions/MD5HexAssertion.java
+++ b/src/components/org/apache/jmeter/assertions/MD5HexAssertion.java
@@ -44,7 +44,7 @@ public class MD5HexAssertion extends AbstractTestElement implements Serializable
 
     private static final Logger log = LoggingManager.getLoggerForClass();
 
-    /** Key for storing assertion-informations in the jmx-file. */
+    /** Key for storing assertion-information in the jmx-file. */
     private static final String MD5HEX_KEY = "MD5HexAssertion.size";
 
     /*
diff --git a/src/components/org/apache/jmeter/assertions/SMIMEAssertion.java b/src/components/org/apache/jmeter/assertions/SMIMEAssertion.java
index 36efb5c..2ea9d0b 100644
--- a/src/components/org/apache/jmeter/assertions/SMIMEAssertion.java
+++ b/src/components/org/apache/jmeter/assertions/SMIMEAssertion.java
@@ -188,8 +188,8 @@ class SMIMEAssertion {
 
                         String email = testElement.getSignerEmail();
                         if (!JOrphanUtils.isBlank(email)) {
-                            List<String> emailfromCert = getEmailFromCert(cert);
-                            if (!emailfromCert.contains(email)) {
+                            List<String> emailFromCert = getEmailFromCert(cert);
+                            if (!emailFromCert.contains(email)) {
                                 res.setFailure(true);
                                 failureMessage
                                         .append("Email address \"")
diff --git a/src/components/org/apache/jmeter/assertions/SMIMEAssertionTestElement.java b/src/components/org/apache/jmeter/assertions/SMIMEAssertionTestElement.java
index 9fbdd6f..9aa2f86 100644
--- a/src/components/org/apache/jmeter/assertions/SMIMEAssertionTestElement.java
+++ b/src/components/org/apache/jmeter/assertions/SMIMEAssertionTestElement.java
@@ -72,8 +72,8 @@ public class SMIMEAssertionTestElement extends AbstractTestElement implements
         return getPropertyAsString(ISSUER_DN_KEY);
     }
 
-    public void setIssuerDn(String issuertDn) {
-        setProperty(ISSUER_DN_KEY, issuertDn);
+    public void setIssuerDn(String issuerDn) {
+        setProperty(ISSUER_DN_KEY, issuerDn);
     }
 
     public boolean isSignerCheckByFile() {
diff --git a/src/components/org/apache/jmeter/assertions/SizeAssertion.java b/src/components/org/apache/jmeter/assertions/SizeAssertion.java
index d9442b4..cb28dcc 100644
--- a/src/components/org/apache/jmeter/assertions/SizeAssertion.java
+++ b/src/components/org/apache/jmeter/assertions/SizeAssertion.java
@@ -36,7 +36,7 @@ public class SizeAssertion extends AbstractScopedAssertion implements Serializab
 
     private static final long serialVersionUID = 241L;
 
-    // * Static int to signify the type of logical comparitor to assert
+    // Static int to signify the type of logical comparator to assert
     public static final int EQUAL = 1;
 
     public static final int NOTEQUAL = 2;
@@ -49,7 +49,7 @@ public class SizeAssertion extends AbstractScopedAssertion implements Serializab
 
     public static final int LESSTHANEQUAL = 6;
 
-    /** Key for storing assertion-informations in the jmx-file. */
+    /** Key for storing assertion-information in the jmx-file. */
     private static final String SIZE_KEY = "SizeAssertion.size"; // $NON-NLS-1$
 
     private static final String OPERATOR_KEY = "SizeAssertion.operator"; // $NON-NLS-1$
diff --git a/src/components/org/apache/jmeter/assertions/XMLAssertion.java b/src/components/org/apache/jmeter/assertions/XMLAssertion.java
index 96ca468..46211da 100644
--- a/src/components/org/apache/jmeter/assertions/XMLAssertion.java
+++ b/src/components/org/apache/jmeter/assertions/XMLAssertion.java
@@ -48,7 +48,7 @@ public class XMLAssertion extends AbstractTestElement implements Serializable, A
     };
 
     /**
-     * Returns the result of the Assertion. Here it checks wether the Sample
+     * Returns the result of the Assertion. Here it checks whether the Sample
      * took to long to be considered successful. If so an AssertionResult
      * containing a FailureMessage will be returned. Otherwise the returned
      * AssertionResult will reflect the success of the Sample.
diff --git a/src/components/org/apache/jmeter/assertions/XPathAssertion.java b/src/components/org/apache/jmeter/assertions/XPathAssertion.java
index c06400e..c841f39 100644
--- a/src/components/org/apache/jmeter/assertions/XPathAssertion.java
+++ b/src/components/org/apache/jmeter/assertions/XPathAssertion.java
@@ -195,7 +195,7 @@ public class XPathAssertion extends AbstractScopedAssertion implements Serializa
     }
 
     /**
-     * Is this whitepsace ignored.
+     * Is this whitespace ignored.
      *
      * @return boolean
      */
diff --git a/src/components/org/apache/jmeter/assertions/gui/HTMLAssertionGui.java b/src/components/org/apache/jmeter/assertions/gui/HTMLAssertionGui.java
index 3e52874..2e67270 100644
--- a/src/components/org/apache/jmeter/assertions/gui/HTMLAssertionGui.java
+++ b/src/components/org/apache/jmeter/assertions/gui/HTMLAssertionGui.java
@@ -220,7 +220,7 @@ public class HTMLAssertionGui extends AbstractAssertionGui implements KeyListene
         docTypePanel.add(docTypeBox);
         assertionPanel.add(docTypePanel);
 
-        // format (HMTL, XHTML, XML)
+        // format (HTML, XHTML, XML)
         VerticalPanel formatPanel = new VerticalPanel();
         formatPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Format"));
         htmlRadioButton = new JRadioButton("HTML", true); //$NON-NLS-1$
@@ -318,7 +318,7 @@ public class HTMLAssertionGui extends AbstractAssertionGui implements KeyListene
     }
 
     /**
-     * This method is called from erros-only checkbox
+     * This method is called from errors-only checkbox
      *
      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
      */
diff --git a/test/src/org/apache/commons/cli/avalon/ClutilTestCase.java b/test/src/org/apache/commons/cli/avalon/ClutilTestCase.java
index e79f5d3..1b7badd 100644
--- a/test/src/org/apache/commons/cli/avalon/ClutilTestCase.java
+++ b/test/src/org/apache/commons/cli/avalon/ClutilTestCase.java
@@ -37,7 +37,7 @@ public final class ClutilTestCase extends TestCase {
             "-Dstupid=idiot", "are", "--all", "--all", "here" };
 
     private static final String[] ARGLIST4 = new String[] {
-    // incompatable (blee/all)
+    // incompatible (blee/all)
             "-Dstupid", "idiot", "are", "--all", "--blee", "here" };
 
     private static final String[] ARGLIST5 = new String[] { "-f", "myfile.txt" };
@@ -188,7 +188,7 @@ public final class ClutilTestCase extends TestCase {
     public void testOptionalArgLongEquals() {
         final CLOptionDescriptor[] options = new CLOptionDescriptor[] { ALL, TAINT };
 
-        // Check that optional args work woth long options
+        // Check that optional args work with long options
         final String[] args = new String[] { "--taint=param", "-a" };
 
         final CLArgsParser parser = new CLArgsParser(args, options);
diff --git a/test/src/org/apache/jmeter/assertions/SizeAssertionTest.java b/test/src/org/apache/jmeter/assertions/SizeAssertionTest.java
index a8b580b..a6a7a5c 100644
--- a/test/src/org/apache/jmeter/assertions/SizeAssertionTest.java
+++ b/test/src/org/apache/jmeter/assertions/SizeAssertionTest.java
@@ -158,7 +158,7 @@ public class SizeAssertionTest extends JMeterTestCase{
       }
       
       private void assertFailed() throws Exception{
-          assertNotNull("Failure nessage should not be null",result.getFailureMessage());
+          assertNotNull("Failure message should not be null",result.getFailureMessage());
           //System.out.println(result.getFailureMessage());
           assertFalse("Should not be: Response was null","Response was null".equals(result.getFailureMessage()));
           assertFalse(result.isError());
diff --git a/test/src/org/apache/jmeter/assertions/XMLSchemaAssertionTest.java b/test/src/org/apache/jmeter/assertions/XMLSchemaAssertionTest.java
index 0b80b36..bc3f1fd 100644
--- a/test/src/org/apache/jmeter/assertions/XMLSchemaAssertionTest.java
+++ b/test/src/org/apache/jmeter/assertions/XMLSchemaAssertionTest.java
@@ -148,7 +148,7 @@ public class XMLSchemaAssertionTest extends JMeterTestCase {
         assertFalse(res.isFailure());
     }
 
-    public void testXMLTrailingcontent() throws Exception {
+    public void testXMLTrailingContent() throws Exception {
         ByteArrayOutputStream baos = readBA("testfiles/XMLSchematest.xml");
         baos.write("extra".getBytes()); // TODO - charset?
         result.setResponseData(baos.toByteArray());
@@ -161,7 +161,7 @@ public class XMLSchemaAssertionTest extends JMeterTestCase {
         assertFalse(res.isFailure());
     }
 
-    public void testXMLTrailingwhitespace() throws Exception {
+    public void testXMLTrailingWhitespace() throws Exception {
         ByteArrayOutputStream baos = readBA("testfiles/XMLSchematest.xml");
         baos.write(" \t\n".getBytes()); // TODO - charset?
         result.setResponseData(baos.toByteArray());
-- 
1.9.1

