Index: src/protocol/http/org/apache/jmeter/protocol/http/util/accesslog/TCLogParser.java
===================================================================
--- src/protocol/http/org/apache/jmeter/protocol/http/util/accesslog/TCLogParser.java	(revision 689037)
+++ src/protocol/http/org/apache/jmeter/protocol/http/util/accesslog/TCLogParser.java	(working copy)
@@ -20,12 +20,15 @@
 
 import java.io.BufferedReader;
 import java.io.File;
+import java.io.FileInputStream;
 import java.io.FileReader;
 import java.io.IOException;
+import java.io.InputStreamReader;
 import java.io.UnsupportedEncodingException;
 import java.net.URLDecoder;
 import java.util.StringTokenizer;
 import java.util.Vector;
+import java.util.zip.GZIPInputStream;
 
 import org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase;
 import org.apache.jmeter.testelement.TestElement;
@@ -170,26 +173,17 @@
     }
 
     /**
-     * Creates a new File object.
-     *
-     * @param filename
-     */
-    public File openFile(String filename) {
-        return new File(filename);
-    }
-
-    /**
      * parse the entire file.
      *
      * @return boolean success/failure
      */
     public int parse(TestElement el, int parseCount) {
         if (this.SOURCE == null) {
-            this.SOURCE = this.openFile(this.FILENAME);
+            this.SOURCE = new File(this.FILENAME);
         }
         try {
             if (this.READER == null) {
-                this.READER = new BufferedReader(new FileReader(this.SOURCE));
+                this.READER = getReader(this.SOURCE);
             }
             return parse(this.READER, el, parseCount);
         } catch (Exception exception) {
@@ -198,6 +192,23 @@
         return -1;// indicate that an error occured
     }
 
+    private static BufferedReader getReader(File file) throws IOException {
+        if (! isGZIP(file))
+            return new BufferedReader(new FileReader(file));
+        GZIPInputStream in = new GZIPInputStream(new FileInputStream(file));
+        return new BufferedReader(new InputStreamReader(in));
+    }
+
+    private static boolean isGZIP(File file) throws IOException {
+        FileInputStream in = new FileInputStream(file);
+        try {
+            return in.read() == (GZIPInputStream.GZIP_MAGIC & 0xFF)
+                && in.read() == (GZIPInputStream.GZIP_MAGIC >> 8);
+        } finally {
+            in.close();
+        }
+    }
+
     /**
      * parse a set number of lines from the access log. Keep in mind the number
      * of lines parsed will depend the filter and number of lines in the log.
@@ -536,4 +547,4 @@
             // do nothing
         }
     }
-}
\ No newline at end of file
+}
Index: src/core/org/apache/jmeter/util/JMeterVersion.java
===================================================================
--- src/core/org/apache/jmeter/util/JMeterVersion.java	(revision 689037)
+++ src/core/org/apache/jmeter/util/JMeterVersion.java	(working copy)
@@ -44,7 +44,7 @@
      * This ensures that JMeterUtils always gets the correct
      * version, even if JMeterUtils is not re-compiled during the build.
      */
-    private static final String VERSION = "2.3.2";
+    private static final String VERSION = "2.3.2.20080827";
 
     static final String COPYRIGHT = "Copyright (c) 1998-2008 The Apache Software Foundation";
 
