Index: C:/Proj/eclipse-workspace/jmeter/xdocs/usermanual/build-jms-topic-test-plan.xml
===================================================================
--- C:/Proj/eclipse-workspace/jmeter/xdocs/usermanual/build-jms-topic-test-plan.xml	(revision 515246)
+++ C:/Proj/eclipse-workspace/jmeter/xdocs/usermanual/build-jms-topic-test-plan.xml	(working copy)
@@ -39,20 +39,22 @@
 <complink name="JMS Subscriber"/>, and
 <complink name="Graph Results"/>.</p>
 
-<p>General notes on JMS. There are currently two JMS samplers. One uses JMS topics
-and the other uses queues. Topic messages are commonly know as pub/sub messaging.
-It is generally used in cases where a message is publish by a producer and
-consumed by multiple subscribers. Queue messaging is generally used for transactions
-where the sender expects a response. Messaging systems are quite different from
+<p>General notes on JMS: There are currently two JMS samplers. One uses JMS topics
+and the other uses queues. Topic messages are commonly known as pub/sub messaging.
+Topic messaging is generally used in cases where a message is published by a producer and
+consumed by multiple subscribers.  Queue messaging is generally used for transactions
+where the sender expects a response.  Messaging systems are quite different from
 normal HTTP requests. In HTTP, a single user sends a request and gets a response.
-Messaging system can work in sychronous and asynchronous mode.</p>
+Messaging system can work in sychronous and asynchronous mode.  A JMS sampler needs 
+the JMS implementation jar files; for example, from Apache ActiveMQ.  
+See <a href="#libraries_activemq">here</a> for the list of jars provided by ActiveMQ 3.0.</p>
 
 </section>
 
 <section name="&sect-num;.1 Adding Users" anchor="adding_users">
 <p>The first step is add a <a href="test_plan.html#thread_group">Thread Group</a>
  element.  The Thread Group tells JMeter the number of users you want to simulate,
- how often the users should send requests, and the how many requests they should 
+ how often the users should send requests, and how many requests they should 
 send.</p>
 
 <p>Go ahead and add the ThreadGroup element by first selecting the Test Plan,
@@ -76,7 +78,7 @@
 
 <p>Next, increase the number of users (called threads) to 5.</p>
 
-<p>In the next field, the Ramp-Up Period, leave the the default value of 0
+<p>In the next field, the Ramp-Up Period, set the value to 0
 seconds.  This property tells JMeter how long to delay between starting each
 user. For example, if you enter a Ramp-Up Period of 5 seconds, JMeter will
 finish starting all of your users by the end of the 5 seconds.  So, if we have
@@ -91,7 +93,9 @@
 checkbox.</p>
 
 <p>Repeat the process and add another thread group. For the second thread
-group, leave the number of threads 1 and change the iteration to 10.</p>
+group, enter "Publisher" in the name field, set the number of threads to 1,
+and set the iteration to 10.
+</p>
 
 <note>In most applications, you have to manually accept
 changes you make in a Control Panel.  However, in JMeter, the Control Panel
@@ -107,14 +111,15 @@
 <p>Make sure the required jar files are in JMeter's lib directory. If they are
 not, shutdown JMeter, copy the jar files over and restart JMeter.</p>
 
-<p>Start by adding the sampler <complink name="jms subscriber"/>
-to the Jakarta Users element (Add --&gt; Sampler --&gt; JMS Subscriber).
-Then, select the JMS Subscriber element in the tree and edit the following properties
-:
+<p>Start by adding the sampler <complink name="JMS Subscriber"/>
+to the Subscribers element (Add --&gt; Sampler --&gt; JMS Subscriber).
+Then, select the JMS Subscriber element in the tree and edit the following properties:
+</p>
+
 <ol>
-<li>Change the Name field to "sample subscriber".</li>
+<li>Change the Name field to "sample subscriber"</li>
 <li>If the JMS provider uses the jndi.properties file, check the box</li>
-<li>Enter the name of the InitialContextFactory class.</li>
+<li>Enter the name of the InitialContextFactory class</li>
 <li>Enter the provider URL. This is the URL for the JNDI server, if there is one</li>
 <li>Enter the name of the connection factory. Please refer to the documentation
 of the JMS provider for the information</li>
@@ -134,6 +139,11 @@
 <figure image="jms/jms_sub.png">
 Figure &sect-num;.2. JMS Subscriber</figure>
 
+<p>Next add the sampler <complink name="JMS Publisher"/>
+to the Publisher element (Add --&gt; Sampler --&gt; JMS Subscriber).
+Then, select the JMS Publisher element in the tree and edit the following properties:
+</p>
+
 <ol>
 <li>Change the Name field to "sample publisher".</li>
 <li>If the JMS provider uses the jndi.properties file, check the box</li>
@@ -167,7 +177,7 @@
 responsible for storing all of the results of your HTTP requests in a file and presenting
 a visual model of the data.</p>
 
-<p>Select the Jakarta Users element and add a <complink name="Graph Results"/> listener (Add --&gt; Listener
+<p>Select the Test Plan element and add a <complink name="Graph Results"/> listener (Add --&gt; Listener
 --&gt; Graph Results).  Next, you need to specify a directory and filename of the
 output file.  You can either type it into the filename field, or select the
 Browse button and browse to a directory and then enter a filename.</p>
@@ -211,5 +221,26 @@
 
 </section>
 
+        <section name="&sect-num;.6 Libraries for ActiveMQ 3.0" anchor="libraries_activemq">
+            <p>The following libraries have to be supplied in the lib\ext directory of JMeter:
+                <ol>
+                    <li>activation.jar</li>
+                    <li>activeio-1.0-SNAPSHOT.jar</li>
+                    <li>activemq-3.0.jar</li>
+                    <li>activemq-core-3.0.jar</li>
+                    <li>commons-logging-1.0.3.jar</li>
+                    <li>concurrent-1.3.4.jar</li>
+                    <li>geronimo-spec-j2ee-jacc-1.0-rc4.jar</li>
+                    <li>geronimo-spec-j2ee-management-1.0-rc4.jar</li>
+                    <li>geronimo-spec-jms-1.1-rc4.jar</li>
+                    <li>geronimo-spec-jta-1.0.1B-rc4.jar</li>
+                    <li>jms.jar</li>
+                    <li>jndi.jar</li>
+                    <li>log4j-1.2.8.jar</li>
+                    <li>spring-1.1.jar</li>
+                </ol>
+            </p>
+        </section>
+        
 </body>
 </document>
